<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_s_d_card_log_file_8cpp" kind="file">
    <compoundname>SDCardLogFile.cpp</compoundname>
    <includes refid="_s_d_card_log_file_8h" local="yes">SDCardLogFile.h</includes>
    <includes local="no">SPI.h</includes>
    <includes local="yes">SdFat.h</includes>
    <includes refid="_g_p_s_8h" local="yes">GPS.h</includes>
    <includes refid="_navigation_8h" local="yes">Navigation.h</includes>
    <includes refid="_u_s_f_s___i_m_u_8h" local="yes">USFS_IMU.h</includes>
    <includes refid="_mission_8h" local="yes">Mission.h</includes>
    <includes refid="config_values_8h" local="yes">configValues.h</includes>
    <includes refid="_command_state___processor_8h" local="yes">CommandState_Processor.h</includes>
    <includes refid="_bluetooth_connection_8h" local="yes">BluetoothConnection.h</includes>
    <includes refid="_wear_tracking_8h" local="yes">WearTracking.h</includes>
    <includes refid="_wingsail_8h" local="yes">Wingsail.h</includes>
    <includes refid="_o_l_e_d___logging_8h" local="yes">OLED_Logging.h</includes>
    <incdepgraph>
      <node id="701">
        <label>BluetoothConnection.h</label>
        <link refid="_bluetooth_connection_8h"/>
        <childnode refid="685" relation="include">
        </childnode>
      </node>
      <node id="684">
        <label>SDCardLogFile.h</label>
        <link refid="_s_d_card_log_file_8h"/>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
        <childnode refid="687" relation="include">
        </childnode>
        <childnode refid="688" relation="include">
        </childnode>
      </node>
      <node id="686">
        <label>SPI.h</label>
      </node>
      <node id="690">
        <label>Waypoints.h</label>
        <link refid="_waypoints_8h"/>
        <childnode refid="685" relation="include">
        </childnode>
      </node>
      <node id="704">
        <label>Wingsail.h</label>
        <link refid="_wingsail_8h"/>
        <childnode refid="685" relation="include">
        </childnode>
      </node>
      <node id="693">
        <label>USFS_IMU.h</label>
        <link refid="_u_s_f_s___i_m_u_8h"/>
        <childnode refid="694" relation="include">
        </childnode>
        <childnode refid="696" relation="include">
        </childnode>
      </node>
      <node id="683">
        <label>D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp</label>
        <link refid="SDCardLogFile.cpp"/>
        <childnode refid="684" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
        <childnode refid="687" relation="include">
        </childnode>
        <childnode refid="692" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
        <childnode refid="693" relation="include">
        </childnode>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="700" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
        <childnode refid="701" relation="include">
        </childnode>
        <childnode refid="702" relation="include">
        </childnode>
        <childnode refid="704" relation="include">
        </childnode>
        <childnode refid="705" relation="include">
        </childnode>
      </node>
      <node id="696">
        <label>EM7180.h</label>
        <link refid="_e_m7180_8h"/>
        <childnode refid="697" relation="include">
        </childnode>
        <childnode refid="694" relation="include">
        </childnode>
      </node>
      <node id="691">
        <label>Navigation.h</label>
        <link refid="_navigation_8h"/>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="690" relation="include">
        </childnode>
      </node>
      <node id="702">
        <label>WearTracking.h</label>
        <link refid="_wear_tracking_8h"/>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="703" relation="include">
        </childnode>
      </node>
      <node id="699">
        <label>Mission.h</label>
        <link refid="_mission_8h"/>
        <childnode refid="690" relation="include">
        </childnode>
        <childnode refid="685" relation="include">
        </childnode>
      </node>
      <node id="692">
        <label>GPS.h</label>
        <link refid="_g_p_s_8h"/>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="690" relation="include">
        </childnode>
      </node>
      <node id="700">
        <label>configValues.h</label>
        <link refid="config_values_8h"/>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
      </node>
      <node id="698">
        <label>Wire.h</label>
      </node>
      <node id="695">
        <label>USFS_config.h</label>
        <link refid="_u_s_f_s__config_8h"/>
      </node>
      <node id="687">
        <label>SdFat.h</label>
      </node>
      <node id="706">
        <label>Arduino.h</label>
      </node>
      <node id="697">
        <label>I2Cdev.h</label>
        <link refid="_i2_cdev_8h"/>
        <childnode refid="694" relation="include">
        </childnode>
        <childnode refid="698" relation="include">
        </childnode>
      </node>
      <node id="694">
        <label>USFS_def.h</label>
        <link refid="_u_s_f_s__def_8h"/>
        <childnode refid="695" relation="include">
        </childnode>
      </node>
      <node id="685">
        <label>arduino.h</label>
      </node>
      <node id="705">
        <label>OLED_Logging.h</label>
        <link refid="_o_l_e_d___logging_8h"/>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="706" relation="include">
        </childnode>
      </node>
      <node id="689">
        <label>CommandState_Processor.h</label>
        <link refid="_command_state___processor_8h"/>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="690" relation="include">
        </childnode>
      </node>
      <node id="703">
        <label>Filters.h</label>
        <link refid="_filters_8h"/>
        <childnode refid="685" relation="include">
        </childnode>
      </node>
      <node id="688">
        <label>TelemetryLogging.h</label>
        <link refid="_telemetry_logging_8h"/>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_s_d_card_log_file_8cpp_1a2ee84cafeea3c7b85227917a71fe4143" prot="public" static="no">
        <name>SD_Card_CS_PIN</name>
        <initializer>53</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="35" column="10" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" bodystart="35" bodyend="-1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a1775521876cf2fce1a5961363e0a2fb1" compoundref="_s_d_card_log_file_8cpp" startline="97" endline="116">SD_Logging_Init</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1a15e6b7e1f0fb2d1e0fe1654721bb5302" prot="public" static="no" mutable="no">
        <type>SdFat</type>
        <definition>SdFat sd</definition>
        <argsstring></argsstring>
        <name>sd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="31" column="1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a1775521876cf2fce1a5961363e0a2fb1" compoundref="_s_d_card_log_file_8cpp" startline="97" endline="116">SD_Logging_Init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" prot="public" static="no" mutable="no">
        <type>SdFile</type>
        <definition>SdFile LogFile</definition>
        <argsstring></argsstring>
        <name>LogFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="32" column="1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a52a9858b6c2a22b0d426a833618afaae" compoundref="_s_d_card_log_file_8cpp" startline="671" endline="680">Check_LogFileSize</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1a5b2e3893af461c1cde8ffa04b023a22f" compoundref="_s_d_card_log_file_8cpp" startline="682" endline="686">CloseThenOpenLogFile</referencedby>
        <referencedby refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" compoundref="_s_d_card_log_file_8cpp" startline="427" endline="444">LogTime</referencedby>
        <referencedby refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" compoundref="_s_d_card_log_file_8cpp" startline="79" endline="95">LogTimeHeader</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1ada59fb3a7bdd9f073c8604058431c358" compoundref="_s_d_card_log_file_8cpp" startline="421" endline="425">OpenSDLogFile</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1a2da7a28b7c83f5ea4e1bd15b623feccb" compoundref="_s_d_card_log_file_8cpp" startline="446" endline="669">SD_Logging</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1a16ae785967afa3a4b5195dff58027499" compoundref="_s_d_card_log_file_8cpp" startline="689" endline="707">SD_Logging_Event_Decisions</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1a678949359259dc4fc95b66f4a00535f0" compoundref="_s_d_card_log_file_8cpp" startline="720" endline="727">SD_Logging_Event_Messsage</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1ac0a7d3bbf990e2bbadf6ce2e5d1c4621" compoundref="_s_d_card_log_file_8cpp" startline="729" endline="754">SD_Logging_Event_MissionStep</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1a011f521e8ce1a08897e5d0f261a75476" compoundref="_s_d_card_log_file_8cpp" startline="709" endline="718">SD_Logging_Event_ParameterChange</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1a819cd54baa36220f4d1a808a7a64fe4a" compoundref="_s_d_card_log_file_8cpp" startline="757" endline="773">SD_Logging_Event_Usage</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1ae86aa9f9bf9aafaa103cc356b87bc3be" compoundref="_s_d_card_log_file_8cpp" startline="118" endline="419">SD_Logging_OpenFile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CommandPort</definition>
        <argsstring></argsstring>
        <name>CommandPort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="33" column="1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a5b2e3893af461c1cde8ffa04b023a22f" compoundref="_s_d_card_log_file_8cpp" startline="682" endline="686">CloseThenOpenLogFile</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1a2da7a28b7c83f5ea4e1bd15b623feccb" compoundref="_s_d_card_log_file_8cpp" startline="446" endline="669">SD_Logging</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1a1775521876cf2fce1a5961363e0a2fb1" compoundref="_s_d_card_log_file_8cpp" startline="97" endline="116">SD_Logging_Init</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1ae86aa9f9bf9aafaa103cc356b87bc3be" compoundref="_s_d_card_log_file_8cpp" startline="118" endline="419">SD_Logging_OpenFile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1a84903d3dde78582cbc92053c3c18d444" prot="public" static="no" mutable="no">
        <type><ref refid="struct_state_values_struct" kindref="compound">StateValuesStruct</ref></type>
        <definition>StateValuesStruct StateValues</definition>
        <argsstring></argsstring>
        <name>StateValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1a6e6c124a8544f54a81bb39badabb0342" prot="public" static="no" mutable="no">
        <type><ref refid="struct_navigation_data_type" kindref="compound">NavigationDataType</ref></type>
        <definition>NavigationDataType NavData</definition>
        <argsstring></argsstring>
        <name>NavData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="38" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1ab2750358545c3531197e99469fa8d2f4" prot="public" static="no" mutable="no">
        <type><ref refid="struct_i_m_u_struct" kindref="compound">IMUStruct</ref></type>
        <definition>IMUStruct myIMU</definition>
        <argsstring></argsstring>
        <name>myIMU</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="39" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1a6924c9cecb78ca1a791d8c5b2389a20e" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long loop_period_us</definition>
        <argsstring></argsstring>
        <name>loop_period_us</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="40" column="1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a2da7a28b7c83f5ea4e1bd15b623feccb" compoundref="_s_d_card_log_file_8cpp" startline="446" endline="669">SD_Logging</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1abfd08ed7f06fc22e2d32bd2a1e94fa3a" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long GPS_Last_Loc</definition>
        <argsstring></argsstring>
        <name>GPS_Last_Loc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="41" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/GPS.cpp" bodystart="22" bodyend="-1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a2da7a28b7c83f5ea4e1bd15b623feccb" compoundref="_s_d_card_log_file_8cpp" startline="446" endline="669">SD_Logging</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1a1063514a8da815eb7c6ce64b11f55500" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long GPS_Last_Message</definition>
        <argsstring></argsstring>
        <name>GPS_Last_Message</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="42" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/GPS.cpp" bodystart="23" bodyend="-1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a2da7a28b7c83f5ea4e1bd15b623feccb" compoundref="_s_d_card_log_file_8cpp" startline="446" endline="669">SD_Logging</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1a546169abc0a62fd2c162220444214ace" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool UseSimulatedGPS</definition>
        <argsstring></argsstring>
        <name>UseSimulatedGPS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="43" column="1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a2da7a28b7c83f5ea4e1bd15b623feccb" compoundref="_s_d_card_log_file_8cpp" startline="446" endline="669">SD_Logging</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1a1106f1eecd15a9233233ae672d651265" prot="public" static="no" mutable="no">
        <type><ref refid="structconfig_values_type" kindref="compound">configValuesType</ref></type>
        <definition>configValuesType Configuration</definition>
        <argsstring></argsstring>
        <name>Configuration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1aae3eed66759a369bc96c71a1c39733af" prot="public" static="no" mutable="no">
        <type>HardwareSerial *</type>
        <definition>HardwareSerial* Serials[]</definition>
        <argsstring>[]</argsstring>
        <name>Serials</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="45" column="1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a1775521876cf2fce1a5961363e0a2fb1" compoundref="_s_d_card_log_file_8cpp" startline="97" endline="116">SD_Logging_Init</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1ae86aa9f9bf9aafaa103cc356b87bc3be" compoundref="_s_d_card_log_file_8cpp" startline="118" endline="419">SD_Logging_OpenFile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1a4ec5de6d8488139a4db18674c3f07eb8" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SD_Card_Present</definition>
        <argsstring></argsstring>
        <name>SD_Card_Present</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="46" column="1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a1775521876cf2fce1a5961363e0a2fb1" compoundref="_s_d_card_log_file_8cpp" startline="97" endline="116">SD_Logging_Init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1a723236e33d541fe926aafbf860757e71" prot="public" static="no" mutable="no">
        <type><ref refid="struct_time" kindref="compound">Time</ref></type>
        <definition>Time CurrentLocalTime</definition>
        <argsstring></argsstring>
        <name>CurrentLocalTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1ade07205432a39d14d82f5e28c3c3c8cf" prot="public" static="no" mutable="no">
        <type><ref refid="_telemetry_logging_8h_1a6cbcc59f93ea8d5a2d807c3ca756c742" kindref="member">DecisionEventType</ref></type>
        <definition>DecisionEventType DecisionEvent</definition>
        <argsstring></argsstring>
        <name>DecisionEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="49" column="1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a16ae785967afa3a4b5195dff58027499" compoundref="_s_d_card_log_file_8cpp" startline="689" endline="707">SD_Logging_Event_Decisions</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1a4e68978287be769969d1c58c14401c1a" prot="public" static="no" mutable="no">
        <type><ref refid="_telemetry_logging_8h_1a1261fc1bbec34685101a32cee8aad0b3" kindref="member">DecisionEventReasonType</ref></type>
        <definition>DecisionEventReasonType DecisionEventReason</definition>
        <argsstring></argsstring>
        <name>DecisionEventReason</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="50" column="1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a16ae785967afa3a4b5195dff58027499" compoundref="_s_d_card_log_file_8cpp" startline="689" endline="707">SD_Logging_Event_Decisions</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1acf77702297e084409cf976092e15db6e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int DecisionEventValue</definition>
        <argsstring></argsstring>
        <name>DecisionEventValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="51" column="1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a16ae785967afa3a4b5195dff58027499" compoundref="_s_d_card_log_file_8cpp" startline="689" endline="707">SD_Logging_Event_Decisions</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1a55df2469571176804b2adcd40c552f56" prot="public" static="no" mutable="no">
        <type><ref refid="struct_vessel_usage_counters_struct" kindref="compound">VesselUsageCountersStruct</ref></type>
        <definition>VesselUsageCountersStruct VesselUsageCounters</definition>
        <argsstring></argsstring>
        <name>VesselUsageCounters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1a7be67ca7fd944a9f5bd6dc5e770eb9d7" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double SteeringServoOutput</definition>
        <argsstring></argsstring>
        <name>SteeringServoOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="55" column="1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a2da7a28b7c83f5ea4e1bd15b623feccb" compoundref="_s_d_card_log_file_8cpp" startline="446" endline="669">SD_Logging</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1adfad02f502f8da0da9ddc814a3cfd259" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double PowerSensorV</definition>
        <argsstring></argsstring>
        <name>PowerSensorV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="57" column="1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a2da7a28b7c83f5ea4e1bd15b623feccb" compoundref="_s_d_card_log_file_8cpp" startline="446" endline="669">SD_Logging</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1aea95619001504f641ab5c0b2f1f885dc" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double PowerSensorI</definition>
        <argsstring></argsstring>
        <name>PowerSensorI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="57" column="1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a2da7a28b7c83f5ea4e1bd15b623feccb" compoundref="_s_d_card_log_file_8cpp" startline="446" endline="669">SD_Logging</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1a12f977b17bc11b1b5327695231ca20d5" prot="public" static="no" mutable="no">
        <type><ref refid="_bluetooth_connection_8h_1a3eb26161a7048e24adbf23c23a71b13b" kindref="member">BTStateType</ref></type>
        <definition>BTStateType BTState</definition>
        <argsstring></argsstring>
        <name>BTState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="58" column="1"/>
        <referencedby refid="_s_d_card_log_file_8h_1a2da7a28b7c83f5ea4e1bd15b623feccb" compoundref="_s_d_card_log_file_8cpp" startline="446" endline="669">SD_Logging</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1a8542255b0542bb99ec7ea703a72b7eb9" prot="public" static="no" mutable="no">
        <type><ref refid="struct_wing_sail_type" kindref="compound">WingSailType</ref></type>
        <definition>WingSailType WingSail</definition>
        <argsstring></argsstring>
        <name>WingSail</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="59" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1ae7b7edb4669ddd6e193860f2b64c35cd" prot="public" static="no" mutable="no">
        <type><ref refid="struct_mission_values_struct" kindref="compound">MissionValuesStruct</ref></type>
        <definition>MissionValuesStruct MissionValues</definition>
        <argsstring></argsstring>
        <name>MissionValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_s_d_card_log_file_8cpp_1a774c489d4a710f426e3ef7b97dd7d9d8" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char Version[]</definition>
        <argsstring>[]</argsstring>
        <name>Version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="61" column="1"/>
        <referencedby refid="_s_d_card_log_file_8h_1ae86aa9f9bf9aafaa103cc356b87bc3be" compoundref="_s_d_card_log_file_8cpp" startline="118" endline="419">SD_Logging_OpenFile</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_s_d_card_log_file_8cpp_1a84b7ee25d4d43e3b6dd6b3193a2547f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dateTime</definition>
        <argsstring>(uint16_t *date, uint16_t *time)</argsstring>
        <name>dateTime</name>
        <param>
          <type>uint16_t *</type>
          <declname>date</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="63" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" bodystart="63" bodyend="77"/>
        <references refid="struct_time_1ad99bb2472136eac523275c97ec27cd2e" compoundref="_g_p_s_8h" startline="23">Time::dayOfMonth</references>
        <references refid="struct_time_1a60a4ef2e2de0d8aaafe7992f7f5542e8" compoundref="_g_p_s_8h" startline="21">Time::hour</references>
        <references refid="struct_time_1a1094a46e03270001fda7ee1bb08b2f23" compoundref="_g_p_s_8h" startline="20">Time::minute</references>
        <references refid="struct_time_1a279cf834011dd08136310594ec5e45f4" compoundref="_g_p_s_8h" startline="24">Time::month</references>
        <references refid="struct_time_1a843c6d240942c2c884220156b135fcfc" compoundref="_g_p_s_8h" startline="19">Time::second</references>
        <references refid="struct_time_1a3e439c70f6a863677313d61cb151bcdb" compoundref="_g_p_s_8h" startline="25">Time::year</references>
        <referencedby refid="_s_d_card_log_file_8h_1a1775521876cf2fce1a5961363e0a2fb1" compoundref="_s_d_card_log_file_8cpp" startline="97" endline="116">SD_Logging_Init</referencedby>
      </memberdef>
      <memberdef kind="function" id="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogTimeHeader</definition>
        <argsstring>(void)</argsstring>
        <name>LogTimeHeader</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="79" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" bodystart="79" bodyend="95"/>
        <references refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f">LogFile</references>
        <references refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" compoundref="config_values_8h" startline="24">configValuesType::SDCardLogDelimiter</references>
        <referencedby refid="_s_d_card_log_file_8h_1ae86aa9f9bf9aafaa103cc356b87bc3be" compoundref="_s_d_card_log_file_8cpp" startline="118" endline="419">SD_Logging_OpenFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="_s_d_card_log_file_8cpp_1a1775521876cf2fce1a5961363e0a2fb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SD_Logging_Init</definition>
        <argsstring>(int CommandPort)</argsstring>
        <name>SD_Logging_Init</name>
        <param>
          <type>int</type>
          <declname>CommandPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="97" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" bodystart="97" bodyend="116"/>
        <references refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006">CommandPort</references>
        <references refid="_s_d_card_log_file_8cpp_1a84b7ee25d4d43e3b6dd6b3193a2547f0" compoundref="_s_d_card_log_file_8cpp" startline="63" endline="77">dateTime</references>
        <references refid="_s_d_card_log_file_8cpp_1a15e6b7e1f0fb2d1e0fe1654721bb5302">sd</references>
        <references refid="_s_d_card_log_file_8cpp_1a2ee84cafeea3c7b85227917a71fe4143" compoundref="_s_d_card_log_file_8cpp" startline="35">SD_Card_CS_PIN</references>
        <references refid="_s_d_card_log_file_8cpp_1a4ec5de6d8488139a4db18674c3f07eb8">SD_Card_Present</references>
        <references refid="_s_d_card_log_file_8cpp_1aae3eed66759a369bc96c71a1c39733af">Serials</references>
      </memberdef>
      <memberdef kind="function" id="_s_d_card_log_file_8cpp_1ae86aa9f9bf9aafaa103cc356b87bc3be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SD_Logging_OpenFile</definition>
        <argsstring>(int CommandPort, word LoggingMask)</argsstring>
        <name>SD_Logging_OpenFile</name>
        <param>
          <type>int</type>
          <declname>CommandPort</declname>
        </param>
        <param>
          <type>word</type>
          <declname>LoggingMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="118" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" bodystart="118" bodyend="419"/>
        <references refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006">CommandPort</references>
        <references refid="struct_time_1ad99bb2472136eac523275c97ec27cd2e" compoundref="_g_p_s_8h" startline="23">Time::dayOfMonth</references>
        <references refid="struct_time_1a60a4ef2e2de0d8aaafe7992f7f5542e8" compoundref="_g_p_s_8h" startline="21">Time::hour</references>
        <references refid="_telemetry_logging_8h_1a1d9cfb5c83ea9b2fc6f9ea043dc1ec0c" compoundref="_telemetry_logging_8h" startline="20">Log_Attitude</references>
        <references refid="_telemetry_logging_8h_1a2ddfd05bec2aa512a2cd1461ae6314dd" compoundref="_telemetry_logging_8h" startline="28">Log_Decisions</references>
        <references refid="_telemetry_logging_8h_1a5d73ac57e372032c7c913f99597dfc9d" compoundref="_telemetry_logging_8h" startline="32">Log_Environment</references>
        <references refid="_telemetry_logging_8h_1a7533e06f6c417ae7a784f27582a42c3d" compoundref="_telemetry_logging_8h" startline="27">Log_GPS</references>
        <references refid="_telemetry_logging_8h_1a7572a523c2fd618a06fd7a534614f400" compoundref="_telemetry_logging_8h" startline="19">Log_Location</references>
        <references refid="_telemetry_logging_8h_1a4f46b3504d0ac19fc645c07b6e606f5d" compoundref="_telemetry_logging_8h" startline="25">Log_Navigation</references>
        <references refid="_telemetry_logging_8h_1ae46466466586d4fe45999a44acef682a" compoundref="_telemetry_logging_8h" startline="24">Log_Sailing</references>
        <references refid="_telemetry_logging_8h_1aa3fd2612eacdb5a3429f4eec31cc1799" compoundref="_telemetry_logging_8h" startline="29">Log_ServoOut</references>
        <references refid="_telemetry_logging_8h_1a113c360a30ba93384f39cb5b7fe0dc35" compoundref="_telemetry_logging_8h" startline="21">Log_Situation</references>
        <references refid="_telemetry_logging_8h_1aed0ac9611457c21d37efc74a510b5233" compoundref="_telemetry_logging_8h" startline="26">Log_System</references>
        <references refid="_telemetry_logging_8h_1a58daf0618bb2452c5a9c6940fa800a95" compoundref="_telemetry_logging_8h" startline="31">Log_Usage</references>
        <references refid="_telemetry_logging_8h_1a7d4ee58be2709708d06377cf76a48397" compoundref="_telemetry_logging_8h" startline="30">Log_Voltages</references>
        <references refid="_telemetry_logging_8h_1ae15d9b165097674dce717d85a6d6179f" compoundref="_telemetry_logging_8h" startline="22">Log_Waypoints</references>
        <references refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f">LogFile</references>
        <references refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" compoundref="_s_d_card_log_file_8cpp" startline="79" endline="95">LogTimeHeader</references>
        <references refid="struct_time_1a1094a46e03270001fda7ee1bb08b2f23" compoundref="_g_p_s_8h" startline="20">Time::minute</references>
        <references refid="struct_time_1a279cf834011dd08136310594ec5e45f4" compoundref="_g_p_s_8h" startline="24">Time::month</references>
        <references refid="_s_d_card_log_file_8cpp_1ada59fb3a7bdd9f073c8604058431c358" compoundref="_s_d_card_log_file_8cpp" startline="421" endline="425">OpenSDLogFile</references>
        <references refid="_s_d_card_log_file_8cpp_1a678949359259dc4fc95b66f4a00535f0" compoundref="_s_d_card_log_file_8cpp" startline="720" endline="727">SD_Logging_Event_Messsage</references>
        <references refid="_s_d_card_log_file_8cpp_1a819cd54baa36220f4d1a808a7a64fe4a" compoundref="_s_d_card_log_file_8cpp" startline="757" endline="773">SD_Logging_Event_Usage</references>
        <references refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" compoundref="config_values_8h" startline="24">configValuesType::SDCardLogDelimiter</references>
        <references refid="structconfig_values_type_1a1be9d52398b2f132c5802946f7cc09a4" compoundref="config_values_8h" startline="22">configValuesType::SDCardLoggingMask</references>
        <references refid="_s_d_card_log_file_8cpp_1aae3eed66759a369bc96c71a1c39733af">Serials</references>
        <references refid="_s_d_card_log_file_8cpp_1a774c489d4a710f426e3ef7b97dd7d9d8">Version</references>
        <referencedby refid="_s_d_card_log_file_8h_1a5b2e3893af461c1cde8ffa04b023a22f" compoundref="_s_d_card_log_file_8cpp" startline="682" endline="686">CloseThenOpenLogFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="_s_d_card_log_file_8cpp_1ada59fb3a7bdd9f073c8604058431c358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenSDLogFile</definition>
        <argsstring>(String LogFileName)</argsstring>
        <name>OpenSDLogFile</name>
        <param>
          <type>String</type>
          <declname>LogFileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="421" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" bodystart="421" bodyend="425"/>
        <references refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f">LogFile</references>
        <referencedby refid="_s_d_card_log_file_8h_1ae86aa9f9bf9aafaa103cc356b87bc3be" compoundref="_s_d_card_log_file_8cpp" startline="118" endline="419">SD_Logging_OpenFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogTime</definition>
        <argsstring>(void)</argsstring>
        <name>LogTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="427" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" bodystart="427" bodyend="444"/>
        <references refid="struct_time_1ad99bb2472136eac523275c97ec27cd2e" compoundref="_g_p_s_8h" startline="23">Time::dayOfMonth</references>
        <references refid="struct_time_1a60a4ef2e2de0d8aaafe7992f7f5542e8" compoundref="_g_p_s_8h" startline="21">Time::hour</references>
        <references refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f">LogFile</references>
        <references refid="struct_time_1a1094a46e03270001fda7ee1bb08b2f23" compoundref="_g_p_s_8h" startline="20">Time::minute</references>
        <references refid="struct_time_1a279cf834011dd08136310594ec5e45f4" compoundref="_g_p_s_8h" startline="24">Time::month</references>
        <references refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" compoundref="config_values_8h" startline="24">configValuesType::SDCardLogDelimiter</references>
        <references refid="struct_time_1a843c6d240942c2c884220156b135fcfc" compoundref="_g_p_s_8h" startline="19">Time::second</references>
        <references refid="struct_time_1a3e439c70f6a863677313d61cb151bcdb" compoundref="_g_p_s_8h" startline="25">Time::year</references>
        <referencedby refid="_s_d_card_log_file_8h_1a2da7a28b7c83f5ea4e1bd15b623feccb" compoundref="_s_d_card_log_file_8cpp" startline="446" endline="669">SD_Logging</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1a16ae785967afa3a4b5195dff58027499" compoundref="_s_d_card_log_file_8cpp" startline="689" endline="707">SD_Logging_Event_Decisions</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1a678949359259dc4fc95b66f4a00535f0" compoundref="_s_d_card_log_file_8cpp" startline="720" endline="727">SD_Logging_Event_Messsage</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1ac0a7d3bbf990e2bbadf6ce2e5d1c4621" compoundref="_s_d_card_log_file_8cpp" startline="729" endline="754">SD_Logging_Event_MissionStep</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1a011f521e8ce1a08897e5d0f261a75476" compoundref="_s_d_card_log_file_8cpp" startline="709" endline="718">SD_Logging_Event_ParameterChange</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1a819cd54baa36220f4d1a808a7a64fe4a" compoundref="_s_d_card_log_file_8cpp" startline="757" endline="773">SD_Logging_Event_Usage</referencedby>
      </memberdef>
      <memberdef kind="function" id="_s_d_card_log_file_8cpp_1a2da7a28b7c83f5ea4e1bd15b623feccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SD_Logging</definition>
        <argsstring>(word LoggingMask)</argsstring>
        <name>SD_Logging</name>
        <param>
          <type>word</type>
          <declname>LoggingMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="446" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" bodystart="446" bodyend="669"/>
        <references refid="struct_i_m_u_struct_1a54d4fc4b92cc8b22d4b82bddbcaa5c8e" compoundref="_u_s_f_s___i_m_u_8h" startline="55">IMUStruct::Algorithm_Status</references>
        <references refid="struct_wing_sail_type_1a3ce4045cf7e44d3778244bb2433703d7" compoundref="_wingsail_8h" startline="25">WingSailType::Angle</references>
        <references refid="struct_navigation_data_type_1a3dd25db5457413aa9b9fd2391b931fba" compoundref="_navigation_8h" startline="99">NavigationDataType::AWA</references>
        <references refid="struct_i_m_u_struct_1a2b30f6763b4a63def638ed4494df3a79" compoundref="_u_s_f_s___i_m_u_8h" startline="53">IMUStruct::baro_pressure</references>
        <references refid="struct_i_m_u_struct_1a25f31097a90231ca2768ba51b67bbe70" compoundref="_u_s_f_s___i_m_u_8h" startline="54">IMUStruct::baro_temperature</references>
        <references refid="_s_d_card_log_file_8cpp_1a12f977b17bc11b1b5327695231ca20d5">BTState</references>
        <references refid="struct_navigation_data_type_1a5c5e393ae99ea8a925110d5b3c1bf3a9" compoundref="_navigation_8h" startline="68">NavigationDataType::BTW</references>
        <references refid="struct_navigation_data_type_1a98d8a4e836e020c670fc15ccd5a65270" compoundref="_navigation_8h" startline="71">NavigationDataType::CDA</references>
        <references refid="_s_d_card_log_file_8cpp_1a0fb170bbd3b5f9fcbe51bf4745c665fc" compoundref="_s_d_card_log_file_8cpp" startline="775" endline="791">Check_GPS_TimeStatus</references>
        <references refid="_s_d_card_log_file_8cpp_1a52a9858b6c2a22b0d426a833618afaae" compoundref="_s_d_card_log_file_8cpp" startline="671" endline="680">Check_LogFileSize</references>
        <references refid="struct_navigation_data_type_1a0c622bf013a97a3d3151b0cece6d7e58" compoundref="_navigation_8h" startline="80">NavigationDataType::COG</references>
        <references refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006">CommandPort</references>
        <references refid="struct_navigation_data_type_1aa238ada15ffd536f2125ee5be3503272" compoundref="_navigation_8h" startline="108">NavigationDataType::CourseType</references>
        <references refid="_telemetry_logging_8cpp_1a71884706f22f4eddff74dec1ffa0615e" compoundref="_telemetry_logging_8cpp" startline="551" endline="576">CourseTypeToString</references>
        <references refid="struct_navigation_data_type_1aa4ca740f628466165aa07de377723dda" compoundref="_navigation_8h" startline="73">NavigationDataType::CTE</references>
        <references refid="struct_navigation_data_type_1aee29812f10b4c37724fa37dbf94839ec" compoundref="_navigation_8h" startline="85">NavigationDataType::CTS</references>
        <references refid="struct_navigation_data_type_1ae2583f7b5f179a03372047db7426e224" compoundref="_navigation_8h" startline="61">NavigationDataType::Currentloc</references>
        <references refid="struct_navigation_data_type_1a2f9b0306d48f2d8ec67e4c00cfeae7bb" compoundref="_navigation_8h" startline="67">NavigationDataType::DTW</references>
        <references refid="_bluetooth_connection_8cpp_1a728eb292f166bc32c6c8c0e7f612347a" compoundref="_bluetooth_connection_8cpp" startline="117" endline="131">GetBTStatus</references>
        <references refid="_s_d_card_log_file_8cpp_1abfd08ed7f06fc22e2d32bd2a1e94fa3a" compoundref="_g_p_s_8cpp" startline="22">GPS_Last_Loc</references>
        <references refid="_s_d_card_log_file_8cpp_1a1063514a8da815eb7c6ce64b11f55500" compoundref="_g_p_s_8cpp" startline="23">GPS_Last_Message</references>
        <references refid="_g_p_s_8cpp_1aad9fb3151b07a5325e45216fdc81d8f8" compoundref="_g_p_s_8cpp" startline="204" endline="222">GPS_LocationIs_Valid</references>
        <references refid="struct_navigation_data_type_1a6853c1065bbe2eb7d8aa66881b4baa67" compoundref="_navigation_8h" startline="82">NavigationDataType::HDG</references>
        <references refid="struct_navigation_data_type_1a0628dd2915597f2ad61ebce64047789a" compoundref="_navigation_8h" startline="126">NavigationDataType::HDG_Err</references>
        <references refid="struct_navigation_data_type_1a381a4a0d4e70f8d8532bf71e4b07c8aa" compoundref="_navigation_8h" startline="125">NavigationDataType::HDG_Mag</references>
        <references refid="struct_navigation_data_type_1a3d29cedc948ea7b6dc05756597611dca" compoundref="_navigation_8h" startline="113">NavigationDataType::IsBTWSailable</references>
        <references refid="struct_location_1ae51548c2cf32311043ca19b94b9a9223" compoundref="_waypoints_8h" startline="22">Location::lat</references>
        <references refid="struct_location_1a5831f0aca9e51a15adb96fad465f72f8" compoundref="_waypoints_8h" startline="23">Location::lng</references>
        <references refid="_telemetry_logging_8h_1a1d9cfb5c83ea9b2fc6f9ea043dc1ec0c" compoundref="_telemetry_logging_8h" startline="20">Log_Attitude</references>
        <references refid="_telemetry_logging_8h_1a5d73ac57e372032c7c913f99597dfc9d" compoundref="_telemetry_logging_8h" startline="32">Log_Environment</references>
        <references refid="_telemetry_logging_8h_1a7533e06f6c417ae7a784f27582a42c3d" compoundref="_telemetry_logging_8h" startline="27">Log_GPS</references>
        <references refid="_telemetry_logging_8h_1a7572a523c2fd618a06fd7a534614f400" compoundref="_telemetry_logging_8h" startline="19">Log_Location</references>
        <references refid="_telemetry_logging_8h_1a4f46b3504d0ac19fc645c07b6e606f5d" compoundref="_telemetry_logging_8h" startline="25">Log_Navigation</references>
        <references refid="_telemetry_logging_8h_1ae46466466586d4fe45999a44acef682a" compoundref="_telemetry_logging_8h" startline="24">Log_Sailing</references>
        <references refid="_telemetry_logging_8h_1aa3fd2612eacdb5a3429f4eec31cc1799" compoundref="_telemetry_logging_8h" startline="29">Log_ServoOut</references>
        <references refid="_telemetry_logging_8h_1a113c360a30ba93384f39cb5b7fe0dc35" compoundref="_telemetry_logging_8h" startline="21">Log_Situation</references>
        <references refid="_telemetry_logging_8h_1aed0ac9611457c21d37efc74a510b5233" compoundref="_telemetry_logging_8h" startline="26">Log_System</references>
        <references refid="_telemetry_logging_8h_1a7d4ee58be2709708d06377cf76a48397" compoundref="_telemetry_logging_8h" startline="30">Log_Voltages</references>
        <references refid="_telemetry_logging_8h_1ae15d9b165097674dce717d85a6d6179f" compoundref="_telemetry_logging_8h" startline="22">Log_Waypoints</references>
        <references refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f">LogFile</references>
        <references refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" compoundref="_s_d_card_log_file_8cpp" startline="427" endline="444">LogTime</references>
        <references refid="_s_d_card_log_file_8cpp_1a6924c9cecb78ca1a791d8c5b2389a20e">loop_period_us</references>
        <references refid="struct_navigation_data_type_1af0a38d6d21a1faffa574439001ec5869" compoundref="_navigation_8h" startline="65">NavigationDataType::MaxCTE</references>
        <references refid="struct_navigation_data_type_1a24c98b6c68d08229cacbf92d625e879e" compoundref="_navigation_8h" startline="64">NavigationDataType::next_WP</references>
        <references refid="struct_i_m_u_struct_1a536470fdd356df9d7dc75dc9bfa111d3" compoundref="_u_s_f_s___i_m_u_8h" startline="48">IMUStruct::pitch</references>
        <references refid="_s_d_card_log_file_8cpp_1aea95619001504f641ab5c0b2f1f885dc">PowerSensorI</references>
        <references refid="_s_d_card_log_file_8cpp_1adfad02f502f8da0da9ddc814a3cfd259">PowerSensorV</references>
        <references refid="struct_navigation_data_type_1a2f69963f8d90b2f0f78fcc35aff8fa23" compoundref="_navigation_8h" startline="63">NavigationDataType::prev_WP</references>
        <references refid="struct_navigation_data_type_1ab65f1480bd5198b1b68ad1d9587480cf" compoundref="_navigation_8h" startline="70">NavigationDataType::RLB</references>
        <references refid="struct_i_m_u_struct_1a716242b0191f90e27f26a0a753ce4f9a" compoundref="_u_s_f_s___i_m_u_8h" startline="49">IMUStruct::roll</references>
        <references refid="struct_navigation_data_type_1ab5ef6e2650460b4f478630d9df336e33" compoundref="_navigation_8h" startline="127">NavigationDataType::ROLL_Avg</references>
        <references refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" compoundref="config_values_8h" startline="24">configValuesType::SDCardLogDelimiter</references>
        <references refid="structconfig_values_type_1a1be9d52398b2f132c5802946f7cc09a4" compoundref="config_values_8h" startline="22">configValuesType::SDCardLoggingMask</references>
        <references refid="struct_navigation_data_type_1a33d6c04bea298f0bf2725f9465d4bbfe" compoundref="_navigation_8h" startline="78">NavigationDataType::SOG_mps</references>
        <references refid="_s_d_card_log_file_8cpp_1a7be67ca7fd944a9f5bd6dc5e770eb9d7">SteeringServoOutput</references>
        <references refid="struct_navigation_data_type_1a31e3448e213613e7f4de468a11fd0076" compoundref="_navigation_8h" startline="104">NavigationDataType::TackDuration</references>
        <references refid="struct_navigation_data_type_1acf10b3360b7052e4d92e939cae7f22d5" compoundref="_navigation_8h" startline="89">NavigationDataType::TargetHDG</references>
        <references refid="struct_wing_sail_type_1a4fbdd3e6a40eb76f05030e4b31f476fe" compoundref="_wingsail_8h" startline="26">WingSailType::TrimTabAngle</references>
        <references refid="struct_navigation_data_type_1ac115a6382767a05b1c6d83d2a4432b5e" compoundref="_navigation_8h" startline="87">NavigationDataType::TurnHDG</references>
        <references refid="struct_navigation_data_type_1a7e0ea128b1fb164273bc7528fef07333" compoundref="_navigation_8h" startline="101">NavigationDataType::TWD</references>
        <references refid="struct_navigation_data_type_1a42a29fa0d8d158498a0938d880ceceec" compoundref="_navigation_8h" startline="102">NavigationDataType::TWS</references>
        <references refid="_s_d_card_log_file_8cpp_1a546169abc0a62fd2c162220444214ace">UseSimulatedGPS</references>
      </memberdef>
      <memberdef kind="function" id="_s_d_card_log_file_8cpp_1a52a9858b6c2a22b0d426a833618afaae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Check_LogFileSize</definition>
        <argsstring>(int CommandPort, word LoggingMask)</argsstring>
        <name>Check_LogFileSize</name>
        <param>
          <type>int</type>
          <declname>CommandPort</declname>
        </param>
        <param>
          <type>word</type>
          <declname>LoggingMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="671" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" bodystart="671" bodyend="680"/>
        <references refid="_s_d_card_log_file_8cpp_1a5b2e3893af461c1cde8ffa04b023a22f" compoundref="_s_d_card_log_file_8cpp" startline="682" endline="686">CloseThenOpenLogFile</references>
        <references refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f">LogFile</references>
        <references refid="structconfig_values_type_1a754b585ab8ab6b729faa0c4ca85aff36" compoundref="config_values_8h" startline="53">configValuesType::MaxFileSize</references>
        <referencedby refid="_s_d_card_log_file_8h_1a2da7a28b7c83f5ea4e1bd15b623feccb" compoundref="_s_d_card_log_file_8cpp" startline="446" endline="669">SD_Logging</referencedby>
      </memberdef>
      <memberdef kind="function" id="_s_d_card_log_file_8cpp_1a5b2e3893af461c1cde8ffa04b023a22f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CloseThenOpenLogFile</definition>
        <argsstring>(word LoggingMask)</argsstring>
        <name>CloseThenOpenLogFile</name>
        <param>
          <type>word</type>
          <declname>LoggingMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="682" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" bodystart="682" bodyend="686"/>
        <references refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006">CommandPort</references>
        <references refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f">LogFile</references>
        <references refid="_s_d_card_log_file_8cpp_1ae86aa9f9bf9aafaa103cc356b87bc3be" compoundref="_s_d_card_log_file_8cpp" startline="118" endline="419">SD_Logging_OpenFile</references>
        <referencedby refid="_s_d_card_log_file_8h_1a0fb170bbd3b5f9fcbe51bf4745c665fc" compoundref="_s_d_card_log_file_8cpp" startline="775" endline="791">Check_GPS_TimeStatus</referencedby>
        <referencedby refid="_s_d_card_log_file_8h_1a52a9858b6c2a22b0d426a833618afaae" compoundref="_s_d_card_log_file_8cpp" startline="671" endline="680">Check_LogFileSize</referencedby>
      </memberdef>
      <memberdef kind="function" id="_s_d_card_log_file_8cpp_1a16ae785967afa3a4b5195dff58027499" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SD_Logging_Event_Decisions</definition>
        <argsstring>(word LoggingMask)</argsstring>
        <name>SD_Logging_Event_Decisions</name>
        <param>
          <type>word</type>
          <declname>LoggingMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="689" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" bodystart="689" bodyend="707"/>
        <references refid="struct_state_values_struct_1a18691cbe7acc424d4e8f196119a5dd53" compoundref="_command_state___processor_8h" startline="33">StateValuesStruct::CommandState</references>
        <references refid="_telemetry_logging_8cpp_1a423068d07ce6b701c76aa5a642178ca5" compoundref="_telemetry_logging_8cpp" startline="382" endline="434">CommandStateToString</references>
        <references refid="_s_d_card_log_file_8cpp_1ade07205432a39d14d82f5e28c3c3c8cf">DecisionEvent</references>
        <references refid="_s_d_card_log_file_8cpp_1a4e68978287be769969d1c58c14401c1a">DecisionEventReason</references>
        <references refid="_telemetry_logging_8cpp_1aa65e04ac82e36146dbd76693c2cbd005" compoundref="_telemetry_logging_8cpp" startline="488" endline="549">DecisionEventReasonToString</references>
        <references refid="_telemetry_logging_8cpp_1a8b883936f30cc994ea34c686f10fbdfe" compoundref="_telemetry_logging_8cpp" startline="437" endline="486">DecisionEventToString</references>
        <references refid="_s_d_card_log_file_8cpp_1acf77702297e084409cf976092e15db6e">DecisionEventValue</references>
        <references refid="_telemetry_logging_8h_1a2ddfd05bec2aa512a2cd1461ae6314dd" compoundref="_telemetry_logging_8h" startline="28">Log_Decisions</references>
        <references refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f">LogFile</references>
        <references refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" compoundref="_s_d_card_log_file_8cpp" startline="427" endline="444">LogTime</references>
        <references refid="struct_state_values_struct_1a1e5042befd9d49f50e64fd2797fbda80" compoundref="_command_state___processor_8h" startline="34">StateValuesStruct::mission_index</references>
        <references refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" compoundref="config_values_8h" startline="24">configValuesType::SDCardLogDelimiter</references>
        <referencedby refid="_command_state___processor_8h_1aa45fbfa8fbe030f162163fbf7a60fd43" compoundref="_command_state___processor_8cpp" startline="71" endline="175">CommandState_Processor</referencedby>
        <referencedby refid="_mission_8h_1a25f17f52c627403a54f0a1df3900a35a" compoundref="_mission_8cpp" startline="83" endline="180">IsMissionStepComplete</referencedby>
        <referencedby refid="_sailing_navigation_8h_1a6d4d4bc42c67913f3d1502ef8da8c9f3" compoundref="_sailing_navigation_8cpp" startline="288" endline="368">LimitToSailingCourse</referencedby>
        <referencedby refid="_loiter_8h_1a52d59bd2a6c37492c79ffdd2da5fb43f" compoundref="_loiter_8cpp" startline="28" endline="97">LoiterCalcCTS</referencedby>
        <referencedby refid="_sailing_navigation_8h_1adeaaa4e3ef0f85f11afc6fea531e4e83" compoundref="_sailing_navigation_8cpp" startline="211" endline="257">SetTack</referencedby>
        <referencedby refid="_sailing_navigation_8h_1ad027995fa7fb0c90f681e0ad9b6315de" compoundref="_sailing_navigation_8cpp" startline="39" endline="125">UpdateCourseToSteer</referencedby>
      </memberdef>
      <memberdef kind="function" id="_s_d_card_log_file_8cpp_1a011f521e8ce1a08897e5d0f261a75476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SD_Logging_Event_ParameterChange</definition>
        <argsstring>(int ParameterIndex, char ParameterValue[12])</argsstring>
        <name>SD_Logging_Event_ParameterChange</name>
        <param>
          <type>int</type>
          <declname>ParameterIndex</declname>
        </param>
        <param>
          <type>char</type>
          <declname>ParameterValue</declname>
          <array>[12]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="709" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" bodystart="709" bodyend="718"/>
        <references refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f">LogFile</references>
        <references refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" compoundref="_s_d_card_log_file_8cpp" startline="427" endline="444">LogTime</references>
        <references refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" compoundref="config_values_8h" startline="24">configValuesType::SDCardLogDelimiter</references>
        <referencedby refid="_c_l_i_8h_1a0f12c566040e53c27b128289bb017c70" compoundref="_c_l_i_8cpp" startline="103" endline="1238">CLI_Processor</referencedby>
      </memberdef>
      <memberdef kind="function" id="_s_d_card_log_file_8cpp_1a678949359259dc4fc95b66f4a00535f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SD_Logging_Event_Messsage</definition>
        <argsstring>(String message)</argsstring>
        <name>SD_Logging_Event_Messsage</name>
        <param>
          <type>String</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="720" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" bodystart="720" bodyend="727"/>
        <references refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f">LogFile</references>
        <references refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" compoundref="_s_d_card_log_file_8cpp" startline="427" endline="444">LogTime</references>
        <referencedby refid="_s_d_card_log_file_8h_1ae86aa9f9bf9aafaa103cc356b87bc3be" compoundref="_s_d_card_log_file_8cpp" startline="118" endline="419">SD_Logging_OpenFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="_s_d_card_log_file_8cpp_1ac0a7d3bbf990e2bbadf6ce2e5d1c4621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SD_Logging_Event_MissionStep</definition>
        <argsstring>(int mission_index)</argsstring>
        <name>SD_Logging_Event_MissionStep</name>
        <param>
          <type>int</type>
          <declname>mission_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="729" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" bodystart="729" bodyend="754"/>
        <references refid="struct_mission_command_1a5cfe41601f9f6b00ec3e557f0547f3e5" compoundref="_mission_8h" startline="27">MissionCommand::boundary</references>
        <references refid="struct_mission_command_1a299f9beaa99d092803d233a358dafcf4" compoundref="_mission_8h" startline="25">MissionCommand::cmd</references>
        <references refid="struct_mission_command_1a055a0fda744513046135edf636de7281" compoundref="_mission_8h" startline="28">MissionCommand::controlMask</references>
        <references refid="struct_mission_command_1a1616af2b51234c7ee3f5e55a877d689d" compoundref="_mission_8h" startline="29">MissionCommand::duration</references>
        <references refid="_o_l_e_d___logging_8cpp_1a87806d88081f4e95a4fe0d30e19dbe3c" compoundref="_o_l_e_d___logging_8cpp" startline="1241" endline="1274">GetMissionCommandString</references>
        <references refid="struct_location_1ae51548c2cf32311043ca19b94b9a9223" compoundref="_waypoints_8h" startline="22">Location::lat</references>
        <references refid="struct_location_1a5831f0aca9e51a15adb96fad465f72f8" compoundref="_waypoints_8h" startline="23">Location::lng</references>
        <references refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f">LogFile</references>
        <references refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" compoundref="_s_d_card_log_file_8cpp" startline="427" endline="444">LogTime</references>
        <references refid="struct_mission_values_struct_1ad2dc919140026b256710e2ba680a07ce" compoundref="_mission_8h" startline="39">MissionValuesStruct::MissionList</references>
        <references refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" compoundref="config_values_8h" startline="24">configValuesType::SDCardLogDelimiter</references>
        <references refid="struct_mission_command_1a0e191ee386b81492da3ba46977efeedf" compoundref="_mission_8h" startline="30">MissionCommand::SteerAWA</references>
        <references refid="struct_mission_command_1a5400ca1048df713e7410dc6dea6d8f81" compoundref="_mission_8h" startline="31">MissionCommand::TrimTabAngle</references>
        <references refid="struct_mission_command_1ac293e5ddea78b48d1d26c97a4530e73f" compoundref="_mission_8h" startline="26">MissionCommand::waypoint</references>
        <referencedby refid="_mission_8h_1a40190fbe8db0259df7eb5e20c112e0f3" compoundref="_mission_8cpp" startline="32" endline="81">MissionUpdate</referencedby>
      </memberdef>
      <memberdef kind="function" id="_s_d_card_log_file_8cpp_1a819cd54baa36220f4d1a808a7a64fe4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SD_Logging_Event_Usage</definition>
        <argsstring>(word LoggingMask)</argsstring>
        <name>SD_Logging_Event_Usage</name>
        <param>
          <type>word</type>
          <declname>LoggingMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="757" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" bodystart="757" bodyend="773"/>
        <references refid="struct_vessel_usage_counters_struct_1acf9217437202c331a72e219355cadd40" compoundref="_wear_tracking_8h" startline="22">VesselUsageCountersStruct::intervalCounter</references>
        <references refid="_telemetry_logging_8h_1a58daf0618bb2452c5a9c6940fa800a95" compoundref="_telemetry_logging_8h" startline="31">Log_Usage</references>
        <references refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f">LogFile</references>
        <references refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" compoundref="_s_d_card_log_file_8cpp" startline="427" endline="444">LogTime</references>
        <references refid="struct_vessel_usage_counters_struct_1ae4fdf8859199b4dffefb20d43ed0ec66" compoundref="_wear_tracking_8h" startline="23">VesselUsageCountersStruct::PortRudderCounter</references>
        <references refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" compoundref="config_values_8h" startline="24">configValuesType::SDCardLogDelimiter</references>
        <references refid="struct_vessel_usage_counters_struct_1a6675c700a38cf60b2a332a72da951ad0" compoundref="_wear_tracking_8h" startline="24">VesselUsageCountersStruct::StarboardRudderCounter</references>
        <references refid="struct_vessel_usage_counters_struct_1a106b7cdd508568ab09ae7d07d6e777d7" compoundref="_wear_tracking_8h" startline="25">VesselUsageCountersStruct::TrimTabCounter</references>
        <referencedby refid="_s_d_card_log_file_8h_1ae86aa9f9bf9aafaa103cc356b87bc3be" compoundref="_s_d_card_log_file_8cpp" startline="118" endline="419">SD_Logging_OpenFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="_s_d_card_log_file_8cpp_1a0fb170bbd3b5f9fcbe51bf4745c665fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Check_GPS_TimeStatus</definition>
        <argsstring>(word LoggingMask)</argsstring>
        <name>Check_GPS_TimeStatus</name>
        <param>
          <type>word</type>
          <declname>LoggingMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" line="775" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp" bodystart="775" bodyend="791"/>
        <references refid="_s_d_card_log_file_8cpp_1a5b2e3893af461c1cde8ffa04b023a22f" compoundref="_s_d_card_log_file_8cpp" startline="682" endline="686">CloseThenOpenLogFile</references>
        <references refid="_g_p_s_8cpp_1a385f2fc75c9aa4e8c5331919821b7f74" compoundref="_g_p_s_8cpp" startline="224" endline="229">GPS_TimeIs_Valid</references>
        <referencedby refid="_s_d_card_log_file_8h_1a2da7a28b7c83f5ea4e1bd15b623feccb" compoundref="_s_d_card_log_file_8cpp" startline="446" endline="669">SD_Logging</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SD<sp/>Card<sp/>Logging<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>V1.0<sp/>3/8/2016<sp/>John<sp/>Semmens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>V1.8<sp/>29/10/2017<sp/>updated<sp/>for<sp/>new<sp/>IMU<sp/>BNO-055<sp/>rather<sp/>than<sp/>MPU-9250.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>V1.9<sp/>12/11/2017<sp/>updated<sp/>to<sp/>change<sp/>BRL<sp/>to<sp/>RLB.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>V1.10<sp/>15/4/2018<sp/>Added<sp/>Servo<sp/>output<sp/>logging<sp/>SVO<sp/>and<sp/>Voltage<sp/>montitoring<sp/>VLT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>V1.11<sp/>17/4/2018<sp/>bug<sp/>fix<sp/>Servo<sp/>output<sp/>logging<sp/>SVO<sp/>and<sp/>Voltage<sp/>montitoring<sp/>VLT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>V1.12<sp/>28/10/2018<sp/>changed<sp/>to<sp/>CurrentLocalTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>V1.13<sp/>25/4/2019<sp/>extended<sp/>SAI<sp/>to<sp/>include<sp/>Turn<sp/>Heading<sp/>and<sp/>Target<sp/>Heading,<sp/>and<sp/>added<sp/>Temp<sp/>and<sp/>Press<sp/>to<sp/>System.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>V1/14<sp/>11/6/2019<sp/>added<sp/>Trim<sp/>tab<sp/>Angle<sp/>to<sp/>SVO<sp/>sentence,<sp/>and<sp/>Wing<sp/>Angle<sp/>to<sp/>ENV.<sp/>and<sp/>IsBTWSailable<sp/>to<sp/>NAV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>V1.15<sp/>9/7/2019<sp/>added<sp/>Decision<sp/>Event<sp/>Value<sp/>to<sp/>logging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>V1.16<sp/>11/7/2019<sp/>added<sp/>Heading<sp/>Error<sp/>from<sp/>GPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_card_log_file_8h" kindref="compound">SDCardLogFile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SPI.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SdFat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_g_p_s_8h" kindref="compound">GPS.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_navigation_8h" kindref="compound">Navigation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_u_s_f_s___i_m_u_8h" kindref="compound">USFS_IMU.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_mission_8h" kindref="compound">Mission.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_values_8h" kindref="compound">configValues.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_command_state___processor_8h" kindref="compound">CommandState_Processor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_bluetooth_connection_8h" kindref="compound">BluetoothConnection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_wear_tracking_8h" kindref="compound">WearTracking.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_wingsail_8h" kindref="compound">Wingsail.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_mission_8h" kindref="compound">Mission.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_l_e_d___logging_8h" kindref="compound">OLED_Logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>SdFat<sp/><ref refid="_s_d_card_log_file_8cpp_1a15e6b7e1f0fb2d1e0fe1654721bb5302" kindref="member">sd</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>SdFile<sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006" kindref="member">CommandPort</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="_s_d_card_log_file_8cpp_1a2ee84cafeea3c7b85227917a71fe4143" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>SD_Card_CS_PIN<sp/>53<sp/>//<sp/>10<sp/>on<sp/>Nano,<sp/>53<sp/>on<sp/>Mega,<sp/>E3<sp/>on<sp/>Teensy<sp/>3.6<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_state_values_struct" kindref="compound">StateValuesStruct</ref><sp/><ref refid="_s_d_card_log_file_8cpp_1a84903d3dde78582cbc92053c3c18d444" kindref="member">StateValues</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_navigation_data_type" kindref="compound">NavigationDataType</ref><sp/><ref refid="_s_d_card_log_file_8cpp_1a6e6c124a8544f54a81bb39badabb0342" kindref="member">NavData</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_i_m_u_struct" kindref="compound">IMUStruct</ref><sp/><ref refid="_s_d_card_log_file_8cpp_1ab2750358545c3531197e99469fa8d2f4" kindref="member">myIMU</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a6924c9cecb78ca1a791d8c5b2389a20e" kindref="member">loop_period_us</ref>;<sp/></highlight><highlight class="comment">//<sp/>microseconds<sp/>between<sp/>successive<sp/>main<sp/>loop<sp/>executions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1abfd08ed7f06fc22e2d32bd2a1e94fa3a" kindref="member">GPS_Last_Loc</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>milliseconds<sp/>since<sp/>last<sp/>GPS<sp/>valid<sp/>location<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a1063514a8da815eb7c6ce64b11f55500" kindref="member">GPS_Last_Message</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>milliseconds<sp/>since<sp/>last<sp/>GPS<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a546169abc0a62fd2c162220444214ace" kindref="member">UseSimulatedGPS</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flag<sp/>to<sp/>disable<sp/>the<sp/>GPS<sp/>and<sp/>indicate<sp/>that<sp/>the<sp/>current<sp/>location<sp/>is<sp/>simulated<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structconfig_values_type" kindref="compound">configValuesType</ref><sp/><ref refid="_s_d_card_log_file_8cpp_1a1106f1eecd15a9233233ae672d651265" kindref="member">Configuration</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>HardwareSerial<sp/>*<ref refid="_s_d_card_log_file_8cpp_1aae3eed66759a369bc96c71a1c39733af" kindref="member">Serials</ref>[];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a4ec5de6d8488139a4db18674c3f07eb8" kindref="member">SD_Card_Present</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_time" kindref="compound">Time</ref><sp/><ref refid="_s_d_card_log_file_8cpp_1a723236e33d541fe926aafbf860757e71" kindref="member">CurrentLocalTime</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="_telemetry_logging_8h_1a6cbcc59f93ea8d5a2d807c3ca756c742" kindref="member">DecisionEventType</ref><sp/><ref refid="_s_d_card_log_file_8cpp_1ade07205432a39d14d82f5e28c3c3c8cf" kindref="member">DecisionEvent</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>in<sp/>event<sp/>based<sp/>logging<sp/>and<sp/>diagnosis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="_telemetry_logging_8h_1a1261fc1bbec34685101a32cee8aad0b3" kindref="member">DecisionEventReasonType</ref><sp/><ref refid="_s_d_card_log_file_8cpp_1a4e68978287be769969d1c58c14401c1a" kindref="member">DecisionEventReason</ref>;<sp/></highlight><highlight class="comment">//<sp/>used<sp/>in<sp/>event<sp/>based<sp/>logging<sp/>and<sp/>diagnosis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1acf77702297e084409cf976092e15db6e" kindref="member">DecisionEventValue</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>a<sp/>value<sp/>relevant<sp/>to<sp/>an<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_vessel_usage_counters_struct" kindref="compound">VesselUsageCountersStruct</ref><sp/><ref refid="_s_d_card_log_file_8cpp_1a55df2469571176804b2adcd40c552f56" kindref="member">VesselUsageCounters</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//extern<sp/>DriveMotorStruct<sp/>DriveMotor;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a7be67ca7fd944a9f5bd6dc5e770eb9d7" kindref="member">SteeringServoOutput</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1adfad02f502f8da0da9ddc814a3cfd259" kindref="member">PowerSensorV</ref>,<sp/><ref refid="_s_d_card_log_file_8cpp_1aea95619001504f641ab5c0b2f1f885dc" kindref="member">PowerSensorI</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="_bluetooth_connection_8h_1a3eb26161a7048e24adbf23c23a71b13b" kindref="member">BTStateType</ref><sp/><ref refid="_s_d_card_log_file_8cpp_1a12f977b17bc11b1b5327695231ca20d5" kindref="member">BTState</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_wing_sail_type" kindref="compound">WingSailType</ref><sp/><ref refid="_s_d_card_log_file_8cpp_1a8542255b0542bb99ec7ea703a72b7eb9" kindref="member">WingSail</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_mission_values_struct" kindref="compound">MissionValuesStruct</ref><sp/><ref refid="_s_d_card_log_file_8cpp_1ae7b7edb4669ddd6e193860f2b64c35cd" kindref="member">MissionValues</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a774c489d4a710f426e3ef7b97dd7d9d8" kindref="member">Version</ref>[];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="_s_d_card_log_file_8cpp_1a84b7ee25d4d43e3b6dd6b3193a2547f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a84b7ee25d4d43e3b6dd6b3193a2547f0" kindref="member">dateTime</ref>(uint16_t*<sp/>date,<sp/>uint16_t*<sp/>time)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.0<sp/>1/10/2016<sp/>John<sp/>Semmens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>year<sp/>=<sp/>int(2000<sp/>+<sp/>CurrentLocalTime.<ref refid="struct_time_1a3e439c70f6a863677313d61cb151bcdb" kindref="member">year</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>month<sp/>=<sp/>CurrentLocalTime.<ref refid="struct_time_1a279cf834011dd08136310594ec5e45f4" kindref="member">month</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>day<sp/>=<sp/>CurrentLocalTime.<ref refid="struct_time_1ad99bb2472136eac523275c97ec27cd2e" kindref="member">dayOfMonth</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>hour<sp/>=<sp/>CurrentLocalTime.<ref refid="struct_time_1a60a4ef2e2de0d8aaafe7992f7f5542e8" kindref="member">hour</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>minute<sp/>=<sp/>CurrentLocalTime.<ref refid="struct_time_1a1094a46e03270001fda7ee1bb08b2f23" kindref="member">minute</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>second<sp/>=<sp/>CurrentLocalTime.<ref refid="struct_time_1a843c6d240942c2c884220156b135fcfc" kindref="member">second</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>YOUR<sp/>SKETCH<sp/>SHOULD<sp/>UPDATE<sp/>THESE<sp/>SIX<sp/>Values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EACH<sp/>TIME<sp/>BEFORE<sp/>CREATING<sp/>YOUR<sp/>SD<sp/>CARD<sp/>FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>*date<sp/>=<sp/>FAT_DATE(year,<sp/>month,<sp/>day);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>*time<sp/>=<sp/>FAT_TIME(hour,<sp/>minute,<sp/>second);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.0<sp/>1/10/2016<sp/>John<sp/>Semmens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;YYYY&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;MM&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;DD&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;HH&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;mm&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;ss&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="_s_d_card_log_file_8h_1a1775521876cf2fce1a5961363e0a2fb1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a1775521876cf2fce1a5961363e0a2fb1" kindref="member">SD_Logging_Init</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006" kindref="member">CommandPort</ref>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.0<sp/>1/10/2016<sp/>John<sp/>Semmens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.1<sp/>22/10/2016<sp/>updated<sp/>to<sp/>support<sp/>parameterised<sp/>serial<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.2<sp/>3/11/2016<sp/>added<sp/>flag<sp/>for<sp/>the<sp/>presence<sp/>of<sp/>the<sp/>SD<sp/>Card</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<ref refid="_s_d_card_log_file_8cpp_1aae3eed66759a369bc96c71a1c39733af" kindref="member">Serials</ref>[<ref refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006" kindref="member">CommandPort</ref>]).print(F(</highlight><highlight class="stringliteral">&quot;MSG,Initializing<sp/>SD<sp/>card...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>THIS<sp/>LINE<sp/>SETS<sp/>YOUR<sp/>SKETCH<sp/>TO<sp/>SAVE<sp/>YOUR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TIME<sp/>AND<sp/>DATE<sp/>INTO<sp/>ANY<sp/>FILE<sp/>YOU<sp/>CREATE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>SdFile::dateTimeCallback(<ref refid="_s_d_card_log_file_8cpp_1a84b7ee25d4d43e3b6dd6b3193a2547f0" kindref="member">dateTime</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_s_d_card_log_file_8cpp_1a15e6b7e1f0fb2d1e0fe1654721bb5302" kindref="member">sd</ref>.begin(<ref refid="_s_d_card_log_file_8cpp_1a2ee84cafeea3c7b85227917a71fe4143" kindref="member">SD_Card_CS_PIN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="_s_d_card_log_file_8cpp_1aae3eed66759a369bc96c71a1c39733af" kindref="member">Serials</ref>[<ref refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006" kindref="member">CommandPort</ref>]).println(F(</highlight><highlight class="stringliteral">&quot;Initialization<sp/>failed.<sp/>Card<sp/>may<sp/>not<sp/>be<sp/>present.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a4ec5de6d8488139a4db18674c3f07eb8" kindref="member">SD_Card_Present</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="_s_d_card_log_file_8cpp_1aae3eed66759a369bc96c71a1c39733af" kindref="member">Serials</ref>[<ref refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006" kindref="member">CommandPort</ref>]).println(F(</highlight><highlight class="stringliteral">&quot;Initialization<sp/>done.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a4ec5de6d8488139a4db18674c3f07eb8" kindref="member">SD_Card_Present</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="_s_d_card_log_file_8h_1ae86aa9f9bf9aafaa103cc356b87bc3be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1ae86aa9f9bf9aafaa103cc356b87bc3be" kindref="member">SD_Logging_OpenFile</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006" kindref="member">CommandPort</ref>,word<sp/>LoggingMask){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.0<sp/>10/10/2016<sp/>John<sp/>Semmens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.1<sp/>22/10/2016<sp/>updated<sp/>to<sp/>support<sp/>parameterised<sp/>serial<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.2<sp/>30/10/2017<sp/>added<sp/>IMU<sp/>status<sp/>to<sp/>Attitude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>8.3<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//String<sp/>year<sp/>=<sp/>&quot;20&quot;<sp/>+<sp/>String(CurrentTime.year);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>month<sp/>=<sp/>(CurrentLocalTime.<ref refid="struct_time_1a279cf834011dd08136310594ec5e45f4" kindref="member">month</ref><sp/>&lt;<sp/>10<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>String(CurrentLocalTime.<ref refid="struct_time_1a279cf834011dd08136310594ec5e45f4" kindref="member">month</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>day<sp/>=<sp/>(CurrentLocalTime.<ref refid="struct_time_1ad99bb2472136eac523275c97ec27cd2e" kindref="member">dayOfMonth</ref><sp/>&lt;<sp/>10<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>String(CurrentLocalTime.<ref refid="struct_time_1ad99bb2472136eac523275c97ec27cd2e" kindref="member">dayOfMonth</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>hour<sp/>=<sp/>(CurrentLocalTime.<ref refid="struct_time_1a60a4ef2e2de0d8aaafe7992f7f5542e8" kindref="member">hour</ref><sp/>&lt;<sp/>10<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>String(CurrentLocalTime.<ref refid="struct_time_1a60a4ef2e2de0d8aaafe7992f7f5542e8" kindref="member">hour</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>minute<sp/>=<sp/>(CurrentLocalTime.<ref refid="struct_time_1a1094a46e03270001fda7ee1bb08b2f23" kindref="member">minute</ref><sp/>&lt;<sp/>10<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>String(CurrentLocalTime.<ref refid="struct_time_1a1094a46e03270001fda7ee1bb08b2f23" kindref="member">minute</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//String<sp/>second<sp/>=<sp/>(CurrentLocalTime.second<sp/>&lt;<sp/>10<sp/>?<sp/>&quot;0&quot;<sp/>:<sp/>&quot;&quot;)<sp/>+<sp/>String(CurrentLocalTime.second);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>LogFileName<sp/>=<sp/><sp/>month<sp/>+<sp/>day<sp/>+<sp/>hour<sp/>+<sp/>minute<sp/>+</highlight><highlight class="stringliteral">&quot;.log&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<ref refid="_s_d_card_log_file_8cpp_1aae3eed66759a369bc96c71a1c39733af" kindref="member">Serials</ref>[<ref refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006" kindref="member">CommandPort</ref>]).print(F(</highlight><highlight class="stringliteral">&quot;MSG,Open<sp/>SD<sp/>Card<sp/>Logfile:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<ref refid="_s_d_card_log_file_8cpp_1aae3eed66759a369bc96c71a1c39733af" kindref="member">Serials</ref>[<ref refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006" kindref="member">CommandPort</ref>]).println(LogFileName);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1ada59fb3a7bdd9f073c8604058431c358" kindref="member">OpenSDLogFile</ref>(LogFileName);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(30);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<ref refid="_s_d_card_log_file_8cpp_1aae3eed66759a369bc96c71a1c39733af" kindref="member">Serials</ref>[<ref refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006" kindref="member">CommandPort</ref>]).print(F(</highlight><highlight class="stringliteral">&quot;MSG,SD<sp/>Card<sp/>Logging<sp/>Mask:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<ref refid="_s_d_card_log_file_8cpp_1aae3eed66759a369bc96c71a1c39733af" kindref="member">Serials</ref>[<ref refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006" kindref="member">CommandPort</ref>]).println(Configuration.<ref refid="structconfig_values_type_1a1be9d52398b2f132c5802946f7cc09a4" kindref="member">SDCardLoggingMask</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Location<sp/><sp/>loc<sp/>-<sp/>Time,<sp/>Lat,<sp/>Lon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Data&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Field1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Field2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Field3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Field4&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Field5&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Field6&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Field7&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Field8&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Field9&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Field10&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>sd<sp/>card<sp/>logging<sp/>Header<sp/>based<sp/>on<sp/>selected<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a7572a523c2fd618a06fd7a534614f400" kindref="member">Log_Location</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Location<sp/><sp/>loc<sp/>-<sp/>Time,<sp/>Lat,<sp/>Lon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;LOC&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;LAT&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;LON&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;COG&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println(F(</highlight><highlight class="stringliteral">&quot;SOG&quot;</highlight><highlight class="normal">));<sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m/s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a1d9cfb5c83ea9b2fc6f9ea043dc1ec0c" kindref="member">Log_Attitude</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Attitude<sp/>att<sp/>-<sp/>Time,<sp/>Compass,<sp/>Pitch,<sp/>Roll,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;ATT&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;HDG_T&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Pitch&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Roll&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Status&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;ROLL_Avg&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;HDG_Mag&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;HDG_Err&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a113c360a30ba93384f39cb5b7fe0dc35" kindref="member">Log_Situation</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Situation<sp/>sit<sp/>-<sp/>Time,<sp/>BTW,<sp/>DTW,<sp/>CTE,<sp/>CDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;SIT&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;BTW&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;DTW&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;CTE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println(F(</highlight><highlight class="stringliteral">&quot;CDA&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1ae15d9b165097674dce717d85a6d6179f" kindref="member">Log_Waypoints</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Waypoints<sp/>way<sp/>-<sp/>Time,<sp/>previous<sp/>waypoint<sp/>Lat,<sp/>Lon,<sp/>next<sp/>waypoint<sp/>Lat,<sp/>Lon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;WAY&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;LAT0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;LON0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;LAT1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;LON1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println(F(</highlight><highlight class="stringliteral">&quot;RLB&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1ae46466466586d4fe45999a44acef682a" kindref="member">Log_Sailing</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Sailing<sp/><sp/>sai<sp/>-<sp/>Time,<sp/>CTS,<sp/>HDG,<sp/>BTW,<sp/>WA,<sp/><sp/><sp/>CTE<sp/>,<sp/>Max<sp/>CTE<sp/>,TackTime,TurnHDG,<sp/>TargetHDG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;SAI&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;CTS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;HDG_T&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;BTW&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;AWA&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;CTE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;MaxCTE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;TT&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;TurnHDG&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;TargetHDG&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;CourseType&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a4f46b3504d0ac19fc645c07b6e606f5d" kindref="member">Log_Navigation</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Navigation<sp/>nav<sp/>-<sp/>Time,<sp/>BTW,<sp/>DTW,<sp/>RLB,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;NAV&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;BTW&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;DTW&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;RLB&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println(F(</highlight><highlight class="stringliteral">&quot;Sailable&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1aed0ac9611457c21d37efc74a510b5233" kindref="member">Log_System</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_System<sp/>=<sp/>0x0080;<sp/>//<sp/>sys,<sp/>looptime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;SYS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Loop&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;FileSize&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Temp&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Press&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a7533e06f6c417ae7a784f27582a42c3d" kindref="member">Log_GPS</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_GPS<sp/>=<sp/>0x0100;<sp/>//<sp/>sys,<sp/>GPS<sp/>state<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;GPS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;LAT&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;LON&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Last_Loc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Last_Msg&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;SimulatedGPS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println(F(</highlight><highlight class="stringliteral">&quot;Loc_Valid&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a2ddfd05bec2aa512a2cd1461ae6314dd" kindref="member">Log_Decisions</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Decisions<sp/>=<sp/>0x0200;<sp/>//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;DEC&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;MI&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;CS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;DE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;DER&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;DEV&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1aa3fd2612eacdb5a3429f4eec31cc1799" kindref="member">Log_ServoOut</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_ServoOut<sp/>=<sp/>0x0400;<sp/>//<sp/>SVO<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;SVO&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;STR&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;TTA&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a7d4ee58be2709708d06377cf76a48397" kindref="member">Log_Voltages</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Voltages<sp/>=<sp/>0x0800;<sp/>//<sp/>VLT<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;VLT&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;PSV&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println(F(</highlight><highlight class="stringliteral">&quot;PSI&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a58daf0618bb2452c5a9c6940fa800a95" kindref="member">Log_Usage</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Usage<sp/><sp/>use<sp/>-<sp/>Time<sp/>-<sp/>10<sp/>min<sp/>counter,<sp/>port<sp/>rudder<sp/>servo,<sp/>stbd<sp/>rudder,<sp/>trim<sp/>tab<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>=<sp/>0x1000;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;USE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;10min&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;PortRudder&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;StarboardRudder&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;TrimTabCounter&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a5d73ac57e372032c7c913f99597dfc9d" kindref="member">Log_Environment</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Usage<sp/><sp/>ENV<sp/>-<sp/>Time<sp/>-<sp/>TWD,<sp/>AWA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Log_Environment<sp/>=<sp/>0x2000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;ENV&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;TWD&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;TWS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;AWA&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Temp&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;Press&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;WingAngle&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log<sp/>the<sp/>mission<sp/>step<sp/><sp/>-<sp/>Time,<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;MIS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;mission_index&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;cmd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;boundary&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;controlMask&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;SteerAWA&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;TrimTabAngle&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;waypoint.lat&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;waypoint.lng&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_change<sp/>of<sp/>parameter<sp/>-<sp/>Time,<sp/>parameter<sp/>index,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;PRS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1afb2236a1a3e397f4ac1bc2a364e9d320" kindref="member">LogTimeHeader</ref>();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(</highlight><highlight class="stringliteral">&quot;ParameterIndex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(</highlight><highlight class="stringliteral">&quot;ParameterValue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>log<sp/>software<sp/>version<sp/>and<sp/>other<sp/>userful<sp/>data<sp/>at<sp/>the<sp/>start<sp/>of<sp/>each<sp/>log<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>log<sp/>the<sp/>OS<sp/>version<sp/>to<sp/>the<sp/>SD<sp/>Card</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a678949359259dc4fc95b66f4a00535f0" kindref="member">SD_Logging_Event_Messsage</ref>(<ref refid="_s_d_card_log_file_8cpp_1a774c489d4a710f426e3ef7b97dd7d9d8" kindref="member">Version</ref>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>log<sp/>the<sp/>usage<sp/>values<sp/>at<sp/>start<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a819cd54baa36220f4d1a808a7a64fe4a" kindref="member">SD_Logging_Event_Usage</ref>(Configuration.<ref refid="structconfig_values_type_1a1be9d52398b2f132c5802946f7cc09a4" kindref="member">SDCardLoggingMask</ref>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.flush();</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="_s_d_card_log_file_8h_1ada59fb3a7bdd9f073c8604058431c358" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1ada59fb3a7bdd9f073c8604058431c358" kindref="member">OpenSDLogFile</ref>(String<sp/>LogFileName)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>the<sp/>file.<sp/>note<sp/>that<sp/>only<sp/>one<sp/>file<sp/>can<sp/>be<sp/>open<sp/>at<sp/>a<sp/>time,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>you<sp/>have<sp/>to<sp/>close<sp/>this<sp/>one<sp/>before<sp/>opening<sp/>another.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.open(LogFileName.c_str(),<sp/>O_CREAT<sp/>|<sp/>O_WRITE);</highlight></codeline>
<codeline lineno="425"><highlight class="normal">};</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.0<sp/>1/10/2016<sp/>John<sp/>Semmens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);<sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;20&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(CurrentLocalTime.<ref refid="struct_time_1a3e439c70f6a863677313d61cb151bcdb" kindref="member">year</ref>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(CurrentLocalTime.<ref refid="struct_time_1a279cf834011dd08136310594ec5e45f4" kindref="member">month</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(CurrentLocalTime.<ref refid="struct_time_1ad99bb2472136eac523275c97ec27cd2e" kindref="member">dayOfMonth</ref>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(CurrentLocalTime.<ref refid="struct_time_1a60a4ef2e2de0d8aaafe7992f7f5542e8" kindref="member">hour</ref>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(CurrentLocalTime.<ref refid="struct_time_1a1094a46e03270001fda7ee1bb08b2f23" kindref="member">minute</ref>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(CurrentLocalTime.<ref refid="struct_time_1a843c6d240942c2c884220156b135fcfc" kindref="member">second</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="_s_d_card_log_file_8h_1a2da7a28b7c83f5ea4e1bd15b623feccb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a2da7a28b7c83f5ea4e1bd15b623feccb" kindref="member">SD_Logging</ref>(word<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>log<sp/>data<sp/>to<sp/>the<sp/><sp/>SD<sp/>Card<sp/>data<sp/>based<sp/>on<sp/>selected<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.0<sp/>4/8/2016<sp/>John<sp/>Semmens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.1<sp/>3/9/2016<sp/>reorganised<sp/>for<sp/>logging<sp/>to<sp/>use<sp/>a<sp/>bit<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.2<sp/>1/11/2016<sp/>changed<sp/>ATT<sp/>to<sp/>use<sp/>True<sp/>Hdg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.3<sp/>30/10/2017<sp/>added<sp/>IMU<sp/>status<sp/>to<sp/>Attitude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.4<sp/>10/12/2017<sp/>added<sp/>Check_LogFileSize<sp/>to<sp/>this<sp/>logging<sp/>procedure,<sp/>rather<sp/>than<sp/>calling<sp/>separately.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>FloatString[16];</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_bluetooth_connection_8h_1a3eb26161a7048e24adbf23c23a71b13b" kindref="member">BTStateType</ref><sp/>BTStatePrev;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a7572a523c2fd618a06fd7a534614f400" kindref="member">Log_Location</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Location<sp/><sp/>loc<sp/>-<sp/>Time,<sp/>Lat,<sp/>Lon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;LOC&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(dtostrf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(NavData.<ref refid="struct_navigation_data_type_1ae2583f7b5f179a03372047db7426e224" kindref="member">Currentloc</ref>.<ref refid="struct_location_1ae51548c2cf32311043ca19b94b9a9223" kindref="member">lat</ref>)<sp/>/<sp/>10000000UL,<sp/>10,<sp/>5,FloatString));</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(dtostrf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(NavData.<ref refid="struct_navigation_data_type_1ae2583f7b5f179a03372047db7426e224" kindref="member">Currentloc</ref>.<ref refid="struct_location_1a5831f0aca9e51a15adb96fad465f72f8" kindref="member">lng</ref>)<sp/>/<sp/>10000000UL,<sp/>10,<sp/>5,<sp/>FloatString));</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a0c622bf013a97a3d3151b0cece6d7e58" kindref="member">COG</ref>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a33d6c04bea298f0bf2725f9465d4bbfe" kindref="member">SOG_mps</ref>);<sp/></highlight><highlight class="comment">//<sp/>m/s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a1d9cfb5c83ea9b2fc6f9ea043dc1ec0c" kindref="member">Log_Attitude</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Attitude<sp/>att<sp/>-<sp/>Time,<sp/>Compass<sp/>true,<sp/>Pitch,<sp/>Roll,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;ATT&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a6853c1065bbe2eb7d8aa66881b4baa67" kindref="member">HDG</ref>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)myIMU.<ref refid="struct_i_m_u_struct_1a536470fdd356df9d7dc75dc9bfa111d3" kindref="member">pitch</ref>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)myIMU.<ref refid="struct_i_m_u_struct_1a716242b0191f90e27f26a0a753ce4f9a" kindref="member">roll</ref>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(myIMU.<ref refid="struct_i_m_u_struct_1a54d4fc4b92cc8b22d4b82bddbcaa5c8e" kindref="member">Algorithm_Status</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1ab5ef6e2650460b4f478630d9df336e33" kindref="member">ROLL_Avg</ref>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a381a4a0d4e70f8d8532bf71e4b07c8aa" kindref="member">HDG_Mag</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a0628dd2915597f2ad61ebce64047789a" kindref="member">HDG_Err</ref>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a113c360a30ba93384f39cb5b7fe0dc35" kindref="member">Log_Situation</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Situation<sp/>sit<sp/>-<sp/>Time,<sp/>BTW,<sp/>DTW,<sp/>CTE,<sp/>CDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;SIT&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a5c5e393ae99ea8a925110d5b3c1bf3a9" kindref="member">BTW</ref>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a2f9b0306d48f2d8ec67e4c00cfeae7bb" kindref="member">DTW</ref>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1aa4ca740f628466165aa07de377723dda" kindref="member">CTE</ref>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a98d8a4e836e020c670fc15ccd5a65270" kindref="member">CDA</ref>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1ae15d9b165097674dce717d85a6d6179f" kindref="member">Log_Waypoints</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Waypoints<sp/>way<sp/>-<sp/>Time,<sp/>previous<sp/>waypoint<sp/>Lat,<sp/>Lon,<sp/>next<sp/>waypoint<sp/>Lat,<sp/>Lon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;WAY&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(dtostrf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(NavData.<ref refid="struct_navigation_data_type_1a2f69963f8d90b2f0f78fcc35aff8fa23" kindref="member">prev_WP</ref>.<ref refid="struct_location_1ae51548c2cf32311043ca19b94b9a9223" kindref="member">lat</ref>)<sp/>/<sp/>10000000UL,<sp/>10,<sp/>5,<sp/>FloatString));</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(dtostrf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(NavData.<ref refid="struct_navigation_data_type_1a2f69963f8d90b2f0f78fcc35aff8fa23" kindref="member">prev_WP</ref>.<ref refid="struct_location_1a5831f0aca9e51a15adb96fad465f72f8" kindref="member">lng</ref>)<sp/>/<sp/>10000000UL,<sp/>10,<sp/>5,<sp/>FloatString));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(dtostrf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(NavData.<ref refid="struct_navigation_data_type_1a24c98b6c68d08229cacbf92d625e879e" kindref="member">next_WP</ref>.<ref refid="struct_location_1ae51548c2cf32311043ca19b94b9a9223" kindref="member">lat</ref>)<sp/>/<sp/>10000000UL,<sp/>10,<sp/>5,<sp/>FloatString));</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(dtostrf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(NavData.<ref refid="struct_navigation_data_type_1a24c98b6c68d08229cacbf92d625e879e" kindref="member">next_WP</ref>.<ref refid="struct_location_1a5831f0aca9e51a15adb96fad465f72f8" kindref="member">lng</ref>)<sp/>/<sp/>10000000UL,<sp/>10,<sp/>5,<sp/>FloatString));</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1ab65f1480bd5198b1b68ad1d9587480cf" kindref="member">RLB</ref>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1ae46466466586d4fe45999a44acef682a" kindref="member">Log_Sailing</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Sailing<sp/><sp/>sai<sp/>-<sp/>Time,<sp/>CTS,<sp/>HDG,<sp/>BTW,<sp/>WA,<sp/><sp/><sp/>CTE<sp/>,<sp/>Max<sp/>CTE<sp/>,TackTime,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;SAI&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1aee29812f10b4c37724fa37dbf94839ec" kindref="member">CTS</ref>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a6853c1065bbe2eb7d8aa66881b4baa67" kindref="member">HDG</ref>);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a5c5e393ae99ea8a925110d5b3c1bf3a9" kindref="member">BTW</ref>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a3dd25db5457413aa9b9fd2391b931fba" kindref="member">AWA</ref>);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1aa4ca740f628466165aa07de377723dda" kindref="member">CTE</ref>);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1af0a38d6d21a1faffa574439001ec5869" kindref="member">MaxCTE</ref>);<sp/></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a31e3448e213613e7f4de468a11fd0076" kindref="member">TackDuration</ref>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1ac115a6382767a05b1c6d83d2a4432b5e" kindref="member">TurnHDG</ref>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1acf10b3360b7052e4d92e939cae7f22d5" kindref="member">TargetHDG</ref>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(<ref refid="_telemetry_logging_8cpp_1a71884706f22f4eddff74dec1ffa0615e" kindref="member">CourseTypeToString</ref>(NavData.<ref refid="struct_navigation_data_type_1aa238ada15ffd536f2125ee5be3503272" kindref="member">CourseType</ref>));</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a4f46b3504d0ac19fc645c07b6e606f5d" kindref="member">Log_Navigation</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Navigation<sp/>nav<sp/>-<sp/>Time,<sp/>BTW,<sp/>DTW,<sp/>BRL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;NAV&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a5c5e393ae99ea8a925110d5b3c1bf3a9" kindref="member">BTW</ref>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a2f9b0306d48f2d8ec67e4c00cfeae7bb" kindref="member">DTW</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1ab65f1480bd5198b1b68ad1d9587480cf" kindref="member">RLB</ref>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NavData.<ref refid="struct_navigation_data_type_1a3d29cedc948ea7b6dc05756597611dca" kindref="member">IsBTWSailable</ref>)<sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println(</highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println(</highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1aed0ac9611457c21d37efc74a510b5233" kindref="member">Log_System</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_System<sp/>=<sp/>0x0080;<sp/>//<sp/>sys,<sp/>looptime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;SYS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(<ref refid="_s_d_card_log_file_8cpp_1a6924c9cecb78ca1a791d8c5b2389a20e" kindref="member">loop_period_us</ref>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(<ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.fileSize());</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)myIMU.<ref refid="struct_i_m_u_struct_1a25f31097a90231ca2768ba51b67bbe70" kindref="member">baro_temperature</ref>);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)myIMU.<ref refid="struct_i_m_u_struct_1a2b30f6763b4a63def638ed4494df3a79" kindref="member">baro_pressure</ref>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a7533e06f6c417ae7a784f27582a42c3d" kindref="member">Log_GPS</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_GPS<sp/>=<sp/>0x0100;<sp/>//<sp/>sys,<sp/>GPS<sp/>state<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;GPS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(dtostrf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(NavData.<ref refid="struct_navigation_data_type_1ae2583f7b5f179a03372047db7426e224" kindref="member">Currentloc</ref>.<ref refid="struct_location_1ae51548c2cf32311043ca19b94b9a9223" kindref="member">lat</ref>)<sp/>/<sp/>10000000UL,<sp/>10,<sp/>5,<sp/>FloatString));</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(dtostrf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(NavData.<ref refid="struct_navigation_data_type_1ae2583f7b5f179a03372047db7426e224" kindref="member">Currentloc</ref>.<ref refid="struct_location_1a5831f0aca9e51a15adb96fad465f72f8" kindref="member">lng</ref>)<sp/>/<sp/>10000000UL,<sp/>10,<sp/>5,<sp/>FloatString));</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(<ref refid="_s_d_card_log_file_8cpp_1abfd08ed7f06fc22e2d32bd2a1e94fa3a" kindref="member">GPS_Last_Loc</ref>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(<ref refid="_s_d_card_log_file_8cpp_1a1063514a8da815eb7c6ce64b11f55500" kindref="member">GPS_Last_Message</ref>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(<ref refid="_s_d_card_log_file_8cpp_1a546169abc0a62fd2c162220444214ace" kindref="member">UseSimulatedGPS</ref>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println(<ref refid="_g_p_s_8cpp_1aad9fb3151b07a5325e45216fdc81d8f8" kindref="member">GPS_LocationIs_Valid</ref>(NavData.<ref refid="struct_navigation_data_type_1ae2583f7b5f179a03372047db7426e224" kindref="member">Currentloc</ref>));</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1aa3fd2612eacdb5a3429f4eec31cc1799" kindref="member">Log_ServoOut</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_ServoOut<sp/>=<sp/>0x0400;<sp/>//<sp/>SVO<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;SVO&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(<ref refid="_s_d_card_log_file_8cpp_1a7be67ca7fd944a9f5bd6dc5e770eb9d7" kindref="member">SteeringServoOutput</ref>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(WingSail.<ref refid="struct_wing_sail_type_1a4fbdd3e6a40eb76f05030e4b31f476fe" kindref="member">TrimTabAngle</ref>);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a7d4ee58be2709708d06377cf76a48397" kindref="member">Log_Voltages</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Voltages<sp/>=<sp/>0x0800;<sp/>//<sp/>VLT<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;VLT&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(<ref refid="_s_d_card_log_file_8cpp_1adfad02f502f8da0da9ddc814a3cfd259" kindref="member">PowerSensorV</ref>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println(<ref refid="_s_d_card_log_file_8cpp_1aea95619001504f641ab5c0b2f1f885dc" kindref="member">PowerSensorI</ref>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a5d73ac57e372032c7c913f99597dfc9d" kindref="member">Log_Environment</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Usage<sp/><sp/>ENV<sp/>-<sp/>Time<sp/>-<sp/>TWD,<sp/>AWA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Log_Environment<sp/>=<sp/>0x2000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;ENV&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a7e0ea128b1fb164273bc7528fef07333" kindref="member">TWD</ref>);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a42a29fa0d8d158498a0938d880ceceec" kindref="member">TWS</ref>);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(NavData.<ref refid="struct_navigation_data_type_1a3dd25db5457413aa9b9fd2391b931fba" kindref="member">AWA</ref>);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)myIMU.<ref refid="struct_i_m_u_struct_1a25f31097a90231ca2768ba51b67bbe70" kindref="member">baro_temperature</ref>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)myIMU.<ref refid="struct_i_m_u_struct_1a2b30f6763b4a63def638ed4494df3a79" kindref="member">baro_pressure</ref>);<sp/></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(WingSail.<ref refid="struct_wing_sail_type_1a3ce4045cf7e44d3778244bb2433703d7" kindref="member">Angle</ref>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>for<sp/>a<sp/>change<sp/>in<sp/>Bluetooth<sp/>State<sp/>and<sp/>then<sp/>log<sp/>a<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BTStatePrev<sp/>!=<sp/><ref refid="_s_d_card_log_file_8cpp_1a12f977b17bc11b1b5327695231ca20d5" kindref="member">BTState</ref>)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;MSG&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(</highlight><highlight class="stringliteral">&quot;BT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println(<ref refid="_bluetooth_connection_8cpp_1a728eb292f166bc32c6c8c0e7f612347a" kindref="member">GetBTStatus</ref>(<ref refid="_s_d_card_log_file_8cpp_1a12f977b17bc11b1b5327695231ca20d5" kindref="member">BTState</ref>));</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>BTStatePrev<sp/>=<sp/><ref refid="_s_d_card_log_file_8cpp_1a12f977b17bc11b1b5327695231ca20d5" kindref="member">BTState</ref>;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.flush();</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>current<sp/>log<sp/>file<sp/>has<sp/>reached<sp/>or<sp/>exceeded<sp/>the<sp/>configured<sp/>file<sp/>size<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a52a9858b6c2a22b0d426a833618afaae" kindref="member">Check_LogFileSize</ref>(<ref refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006" kindref="member">CommandPort</ref>,<sp/>Configuration.<ref refid="structconfig_values_type_1a1be9d52398b2f132c5802946f7cc09a4" kindref="member">SDCardLoggingMask</ref>);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>GPS<sp/>Time<sp/>validity<sp/>changes<sp/>to<sp/>valid<sp/>then<sp/>close<sp/>and<sp/>open<sp/>the<sp/>SD<sp/>Card<sp/>Logfile.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>helpful<sp/>because<sp/>the<sp/>timestamps<sp/>on<sp/>the<sp/>previous<sp/>file<sp/>will<sp/>be<sp/>wrong.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0fb170bbd3b5f9fcbe51bf4745c665fc" kindref="member">Check_GPS_TimeStatus</ref>(Configuration.<ref refid="structconfig_values_type_1a1be9d52398b2f132c5802946f7cc09a4" kindref="member">SDCardLoggingMask</ref>);</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="_s_d_card_log_file_8h_1a52a9858b6c2a22b0d426a833618afaae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a52a9858b6c2a22b0d426a833618afaae" kindref="member">Check_LogFileSize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006" kindref="member">CommandPort</ref>,word<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>current<sp/>log<sp/>file<sp/>has<sp/>reached<sp/>or<sp/>exceeded<sp/>the<sp/>configured<sp/>file<sp/>size<sp/>limit<sp/>(in<sp/>kb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>limit<sp/>is<sp/>reached<sp/>then<sp/>close<sp/>and<sp/>open<sp/>a<sp/>new<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.0<sp/>11/10/2016<sp/>John<sp/>Semmens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.fileSize()<sp/>&gt;=<sp/>(uint32_t(Configuration.<ref refid="structconfig_values_type_1a754b585ab8ab6b729faa0c4ca85aff36" kindref="member">MaxFileSize</ref>)*1024)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a5b2e3893af461c1cde8ffa04b023a22f" kindref="member">CloseThenOpenLogFile</ref>(LoggingMask);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682" refid="_s_d_card_log_file_8h_1a5b2e3893af461c1cde8ffa04b023a22f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a5b2e3893af461c1cde8ffa04b023a22f" kindref="member">CloseThenOpenLogFile</ref>(word<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.close();</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1ae86aa9f9bf9aafaa103cc356b87bc3be" kindref="member">SD_Logging_OpenFile</ref>(<ref refid="_s_d_card_log_file_8cpp_1aadcc1cb4a3163b28898cf7865b944006" kindref="member">CommandPort</ref>,<sp/>LoggingMask);</highlight></codeline>
<codeline lineno="686"><highlight class="normal">};</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689" refid="_s_d_card_log_file_8h_1a16ae785967afa3a4b5195dff58027499" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a16ae785967afa3a4b5195dff58027499" kindref="member">SD_Logging_Event_Decisions</ref>(word<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="690"><highlight class="normal">{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a2ddfd05bec2aa512a2cd1461ae6314dd" kindref="member">Log_Decisions</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Decisions<sp/><sp/>dec<sp/>-<sp/>Time,<sp/>command<sp/>state,<sp/>decision,<sp/>decsion<sp/>reason,<sp/>and<sp/>Decision<sp/>event<sp/>Value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;DEC&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(StateValues.<ref refid="struct_state_values_struct_1a1e5042befd9d49f50e64fd2797fbda80" kindref="member">mission_index</ref>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(<ref refid="_telemetry_logging_8cpp_1a423068d07ce6b701c76aa5a642178ca5" kindref="member">CommandStateToString</ref>(StateValues.<ref refid="struct_state_values_struct_1a18691cbe7acc424d4e8f196119a5dd53" kindref="member">CommandState</ref>));</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(<ref refid="_telemetry_logging_8cpp_1a8b883936f30cc994ea34c686f10fbdfe" kindref="member">DecisionEventToString</ref>(<ref refid="_s_d_card_log_file_8cpp_1ade07205432a39d14d82f5e28c3c3c8cf" kindref="member">DecisionEvent</ref>));</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(<ref refid="_telemetry_logging_8cpp_1aa65e04ac82e36146dbd76693c2cbd005" kindref="member">DecisionEventReasonToString</ref>(<ref refid="_s_d_card_log_file_8cpp_1a4e68978287be769969d1c58c14401c1a" kindref="member">DecisionEventReason</ref>));</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(<ref refid="_s_d_card_log_file_8cpp_1acf77702297e084409cf976092e15db6e" kindref="member">DecisionEventValue</ref>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709" refid="_s_d_card_log_file_8h_1a011f521e8ce1a08897e5d0f261a75476" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a011f521e8ce1a08897e5d0f261a75476" kindref="member">SD_Logging_Event_ParameterChange</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ParameterIndex,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ParameterValue[12])</highlight></codeline>
<codeline lineno="710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_change<sp/>of<sp/>parameter<sp/>-<sp/>Time,<sp/>parameter<sp/>index,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;PRS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(ParameterIndex);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(ParameterValue);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="_s_d_card_log_file_8h_1a678949359259dc4fc95b66f4a00535f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a678949359259dc4fc95b66f4a00535f0" kindref="member">SD_Logging_Event_Messsage</ref>(String<sp/>message)</highlight></codeline>
<codeline lineno="721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log<sp/>a<sp/>message<sp/><sp/>-<sp/>Time,<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;MSG&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(message);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729" refid="_s_d_card_log_file_8h_1ac0a7d3bbf990e2bbadf6ce2e5d1c4621" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1ac0a7d3bbf990e2bbadf6ce2e5d1c4621" kindref="member">SD_Logging_Event_MissionStep</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mission_index)</highlight></codeline>
<codeline lineno="730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>FloatString[16];</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log<sp/>the<sp/>mission<sp/>step<sp/><sp/>-<sp/>Time,<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;MIS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(mission_index);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(<ref refid="_o_l_e_d___logging_8cpp_1a87806d88081f4e95a4fe0d30e19dbe3c" kindref="member">GetMissionCommandString</ref>(MissionValues.<ref refid="struct_mission_values_struct_1ad2dc919140026b256710e2ba680a07ce" kindref="member">MissionList</ref>[mission_index].<ref refid="struct_mission_command_1a299f9beaa99d092803d233a358dafcf4" kindref="member">cmd</ref>));</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(MissionValues.<ref refid="struct_mission_values_struct_1ad2dc919140026b256710e2ba680a07ce" kindref="member">MissionList</ref>[mission_index].<ref refid="struct_mission_command_1a1616af2b51234c7ee3f5e55a877d689d" kindref="member">duration</ref>);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(MissionValues.<ref refid="struct_mission_values_struct_1ad2dc919140026b256710e2ba680a07ce" kindref="member">MissionList</ref>[mission_index].<ref refid="struct_mission_command_1a5cfe41601f9f6b00ec3e557f0547f3e5" kindref="member">boundary</ref>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(MissionValues.<ref refid="struct_mission_values_struct_1ad2dc919140026b256710e2ba680a07ce" kindref="member">MissionList</ref>[mission_index].<ref refid="struct_mission_command_1a055a0fda744513046135edf636de7281" kindref="member">controlMask</ref>);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(MissionValues.<ref refid="struct_mission_values_struct_1ad2dc919140026b256710e2ba680a07ce" kindref="member">MissionList</ref>[mission_index].<ref refid="struct_mission_command_1a0e191ee386b81492da3ba46977efeedf" kindref="member">SteerAWA</ref>);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(MissionValues.<ref refid="struct_mission_values_struct_1ad2dc919140026b256710e2ba680a07ce" kindref="member">MissionList</ref>[mission_index].<ref refid="struct_mission_command_1a5400ca1048df713e7410dc6dea6d8f81" kindref="member">TrimTabAngle</ref>);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(dtostrf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(MissionValues.<ref refid="struct_mission_values_struct_1ad2dc919140026b256710e2ba680a07ce" kindref="member">MissionList</ref>[mission_index].<ref refid="struct_mission_command_1ac293e5ddea78b48d1d26c97a4530e73f" kindref="member">waypoint</ref>.<ref refid="struct_location_1ae51548c2cf32311043ca19b94b9a9223" kindref="member">lat</ref>)<sp/>/<sp/>10000000UL,<sp/>10,<sp/>5,<sp/>FloatString));</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(dtostrf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(MissionValues.<ref refid="struct_mission_values_struct_1ad2dc919140026b256710e2ba680a07ce" kindref="member">MissionList</ref>[mission_index].<ref refid="struct_mission_command_1ac293e5ddea78b48d1d26c97a4530e73f" kindref="member">waypoint</ref>.<ref refid="struct_location_1a5831f0aca9e51a15adb96fad465f72f8" kindref="member">lng</ref>)<sp/>/<sp/>10000000UL,<sp/>10,<sp/>5,<sp/>FloatString));</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757" refid="_s_d_card_log_file_8h_1a819cd54baa36220f4d1a808a7a64fe4a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a819cd54baa36220f4d1a808a7a64fe4a" kindref="member">SD_Logging_Event_Usage</ref>(word<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="758"><highlight class="normal">{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_telemetry_logging_8h_1a58daf0618bb2452c5a9c6940fa800a95" kindref="member">Log_Usage</ref><sp/>&amp;<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log_Usage<sp/><sp/>USE<sp/>-<sp/>Time,<sp/>port<sp/>rudder,<sp/>starboard<sp/>rudder,<sp/>trim<sp/>tab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(F(</highlight><highlight class="stringliteral">&quot;USE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a038581324a0e7e3878d3ab86aff53ecd" kindref="member">LogTime</ref>();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(VesselUsageCounters.<ref refid="struct_vessel_usage_counters_struct_1acf9217437202c331a72e219355cadd40" kindref="member">intervalCounter</ref>);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(VesselUsageCounters.<ref refid="struct_vessel_usage_counters_struct_1ae4fdf8859199b4dffefb20d43ed0ec66" kindref="member">PortRudderCounter</ref>);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(VesselUsageCounters.<ref refid="struct_vessel_usage_counters_struct_1a6675c700a38cf60b2a332a72da951ad0" kindref="member">StarboardRudderCounter</ref>);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(Configuration.<ref refid="structconfig_values_type_1af730e3fa0e2cea723fc44c27048354ca" kindref="member">SDCardLogDelimiter</ref>);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.print(VesselUsageCounters.<ref refid="struct_vessel_usage_counters_struct_1a106b7cdd508568ab09ae7d07d6e777d7" kindref="member">TrimTabCounter</ref>);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a0ee7871fe49013f9085ee7743478510f" kindref="member">LogFile</ref>.println();</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775" refid="_s_d_card_log_file_8h_1a0fb170bbd3b5f9fcbe51bf4745c665fc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_card_log_file_8cpp_1a0fb170bbd3b5f9fcbe51bf4745c665fc" kindref="member">Check_GPS_TimeStatus</ref>(word<sp/>LoggingMask)</highlight></codeline>
<codeline lineno="776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>monitor<sp/>the<sp/>GPS<sp/>Time<sp/>validity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it<sp/>changes<sp/>from<sp/>invalid<sp/>to<sp/>valid<sp/>then<sp/>close<sp/>and<sp/>open<sp/>the<sp/>SD<sp/>Card<sp/>Logfile.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>helpful<sp/>because<sp/>the<sp/>timestamps<sp/>on<sp/>the<sp/>previous<sp/>file<sp/>will<sp/>be<sp/>wrong.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.0<sp/>29/4/2019<sp/>John<sp/>Semmens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PrevStatus;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Status<sp/>=<sp/><ref refid="_g_p_s_8cpp_1a385f2fc75c9aa4e8c5331919821b7f74" kindref="member">GPS_TimeIs_Valid</ref>();</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Status<sp/>&amp;&amp;<sp/>!PrevStatus)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_card_log_file_8cpp_1a5b2e3893af461c1cde8ffa04b023a22f" kindref="member">CloseThenOpenLogFile</ref>(LoggingMask);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>PrevStatus<sp/>=<sp/>Status;</highlight></codeline>
<codeline lineno="791"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SDCardLogFile.cpp"/>
  </compounddef>
</doxygen>
