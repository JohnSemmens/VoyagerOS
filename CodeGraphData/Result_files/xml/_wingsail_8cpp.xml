<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_wingsail_8cpp" kind="file">
    <compoundname>Wingsail.cpp</compoundname>
    <includes refid="_wingsail_8h" local="yes">Wingsail.h</includes>
    <includes refid="config_values_8h" local="yes">configValues.h</includes>
    <includes refid="_command_state___processor_8h" local="yes">CommandState_Processor.h</includes>
    <includes refid="_radio_control_8h" local="yes">RadioControl.h</includes>
    <includes refid="_navigation_8h" local="yes">Navigation.h</includes>
    <includes refid="_loiter_8h" local="yes">Loiter.h</includes>
    <includes refid="_g_p_s_8h" local="yes">GPS.h</includes>
    <includes refid="_bluetooth_connection_8h" local="yes">BluetoothConnection.h</includes>
    <includes refid="_m_p_u9250_8h" local="yes">MPU9250.h</includes>
    <includes refid="_wind_angle__2950_8h" local="yes">WindAngle_2950.h</includes>
    <includes refid="_wear_tracking_8h" local="yes">WearTracking.h</includes>
    <includes refid="_mission_8h" local="yes">Mission.h</includes>
    <incdepgraph>
      <node id="1039">
        <label>BluetoothConnection.h</label>
        <link refid="_bluetooth_connection_8h"/>
        <childnode refid="1030" relation="include">
        </childnode>
      </node>
      <node id="1041">
        <label>SPI.h</label>
      </node>
      <node id="1033">
        <label>Waypoints.h</label>
        <link refid="_waypoints_8h"/>
        <childnode refid="1030" relation="include">
        </childnode>
      </node>
      <node id="1029">
        <label>Wingsail.h</label>
        <link refid="_wingsail_8h"/>
        <childnode refid="1030" relation="include">
        </childnode>
      </node>
      <node id="1032">
        <label>Navigation.h</label>
        <link refid="_navigation_8h"/>
        <childnode refid="1030" relation="include">
        </childnode>
        <childnode refid="1033" relation="include">
        </childnode>
      </node>
      <node id="1044">
        <label>WearTracking.h</label>
        <link refid="_wear_tracking_8h"/>
        <childnode refid="1030" relation="include">
        </childnode>
        <childnode refid="1045" relation="include">
        </childnode>
      </node>
      <node id="1046">
        <label>Mission.h</label>
        <link refid="_mission_8h"/>
        <childnode refid="1033" relation="include">
        </childnode>
        <childnode refid="1030" relation="include">
        </childnode>
      </node>
      <node id="1038">
        <label>GPS.h</label>
        <link refid="_g_p_s_8h"/>
        <childnode refid="1030" relation="include">
        </childnode>
        <childnode refid="1033" relation="include">
        </childnode>
      </node>
      <node id="1028">
        <label>D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp</label>
        <link refid="Wingsail.cpp"/>
        <childnode refid="1029" relation="include">
        </childnode>
        <childnode refid="1031" relation="include">
        </childnode>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1035" relation="include">
        </childnode>
        <childnode refid="1032" relation="include">
        </childnode>
        <childnode refid="1036" relation="include">
        </childnode>
        <childnode refid="1038" relation="include">
        </childnode>
        <childnode refid="1039" relation="include">
        </childnode>
        <childnode refid="1040" relation="include">
        </childnode>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
      </node>
      <node id="1036">
        <label>Loiter.h</label>
        <link refid="_loiter_8h"/>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1033" relation="include">
        </childnode>
      </node>
      <node id="1031">
        <label>configValues.h</label>
        <link refid="config_values_8h"/>
        <childnode refid="1030" relation="include">
        </childnode>
        <childnode refid="1032" relation="include">
        </childnode>
        <childnode refid="1034" relation="include">
        </childnode>
      </node>
      <node id="1042">
        <label>Wire.h</label>
      </node>
      <node id="1043">
        <label>WindAngle_2950.h</label>
        <link refid="_wind_angle__2950_8h"/>
        <childnode refid="1030" relation="include">
        </childnode>
      </node>
      <node id="1037">
        <label>Arduino.h</label>
      </node>
      <node id="1035">
        <label>RadioControl.h</label>
        <link refid="_radio_control_8h"/>
        <childnode refid="1030" relation="include">
        </childnode>
      </node>
      <node id="1040">
        <label>MPU9250.h</label>
        <link refid="_m_p_u9250_8h"/>
        <childnode refid="1041" relation="include">
        </childnode>
        <childnode refid="1042" relation="include">
        </childnode>
      </node>
      <node id="1030">
        <label>arduino.h</label>
      </node>
      <node id="1034">
        <label>CommandState_Processor.h</label>
        <link refid="_command_state___processor_8h"/>
        <childnode refid="1030" relation="include">
        </childnode>
        <childnode refid="1033" relation="include">
        </childnode>
      </node>
      <node id="1045">
        <label>Filters.h</label>
        <link refid="_filters_8h"/>
        <childnode refid="1030" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_wingsail_8cpp_1aae3eed66759a369bc96c71a1c39733af" prot="public" static="no" mutable="no">
        <type>HardwareSerial *</type>
        <definition>HardwareSerial* Serials[]</definition>
        <argsstring>[]</argsstring>
        <name>Serials</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="18" column="1"/>
        <referencedby refid="_wingsail_8h_1a31ec22cdae42b2cba5dcd378ea9119e4" compoundref="_wingsail_8cpp" startline="209" endline="226">WingSailServo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_wingsail_8cpp_1a12f977b17bc11b1b5327695231ca20d5" prot="public" static="no" mutable="no">
        <type><ref refid="_bluetooth_connection_8h_1a3eb26161a7048e24adbf23c23a71b13b" kindref="member">BTStateType</ref></type>
        <definition>BTStateType BTState</definition>
        <argsstring></argsstring>
        <name>BTState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="19" column="1"/>
        <referencedby refid="_wingsail_8h_1a31ec22cdae42b2cba5dcd378ea9119e4" compoundref="_wingsail_8cpp" startline="209" endline="226">WingSailServo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_wingsail_8cpp_1a1106f1eecd15a9233233ae672d651265" prot="public" static="no" mutable="no">
        <type><ref refid="structconfig_values_type" kindref="compound">configValuesType</ref></type>
        <definition>configValuesType Configuration</definition>
        <argsstring></argsstring>
        <name>Configuration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="21" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_wingsail_8cpp_1a8542255b0542bb99ec7ea703a72b7eb9" prot="public" static="no" mutable="no">
        <type><ref refid="struct_wing_sail_type" kindref="compound">WingSailType</ref></type>
        <definition>WingSailType WingSail</definition>
        <argsstring></argsstring>
        <name>WingSail</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="22" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_wingsail_8cpp_1a84903d3dde78582cbc92053c3c18d444" prot="public" static="no" mutable="no">
        <type><ref refid="struct_state_values_struct" kindref="compound">StateValuesStruct</ref></type>
        <definition>StateValuesStruct StateValues</definition>
        <argsstring></argsstring>
        <name>StateValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="23" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_wingsail_8cpp_1a6e6c124a8544f54a81bb39badabb0342" prot="public" static="no" mutable="no">
        <type><ref refid="struct_navigation_data_type" kindref="compound">NavigationDataType</ref></type>
        <definition>NavigationDataType NavData</definition>
        <argsstring></argsstring>
        <name>NavData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="24" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_wingsail_8cpp_1aaba928d8db82c396578c10f915447c21" prot="public" static="no" mutable="no">
        <type><ref refid="struct_loiter_struct" kindref="compound">LoiterStruct</ref></type>
        <definition>LoiterStruct LoiterData</definition>
        <argsstring></argsstring>
        <name>LoiterData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="25" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_wingsail_8cpp_1a32f693d1f86e14f17d5fc04b2b7bc310" prot="public" static="no" mutable="no">
        <type><ref refid="struct_r_c___i_n___type" kindref="compound">RC_IN_Type</ref></type>
        <definition>RC_IN_Type RC_IN</definition>
        <argsstring></argsstring>
        <name>RC_IN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="26" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_wingsail_8cpp_1a13974f1660839d8bc696129bad2abf64" prot="public" static="no" mutable="no">
        <type><ref refid="class_m_p_u9250" kindref="compound">MPU9250</ref></type>
        <definition>MPU9250 WingSailAngleSensor</definition>
        <argsstring></argsstring>
        <name>WingSailAngleSensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="27" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_wingsail_8cpp_1af6df8aacbd109200ab0a3e21dc4a16bc" prot="public" static="no" mutable="no">
        <type><ref refid="class_wear_counter" kindref="compound">WearCounter</ref></type>
        <definition>WearCounter TrimTabUsage</definition>
        <argsstring></argsstring>
        <name>TrimTabUsage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="28" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_wingsail_8cpp_1ae7b7edb4669ddd6e193860f2b64c35cd" prot="public" static="no" mutable="no">
        <type><ref refid="struct_mission_values_struct" kindref="compound">MissionValuesStruct</ref></type>
        <definition>MissionValuesStruct MissionValues</definition>
        <argsstring></argsstring>
        <name>MissionValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="29" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_wingsail_8cpp_1ac3dffda353afb2aeae4cd3ebb4e7bb48" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t Deadband</definition>
        <argsstring></argsstring>
        <name>Deadband</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="31" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" bodystart="31" bodyend="-1"/>
        <referencedby refid="class_wear_counter_1a1464c6ffb3aa95bf2f49b9a2826b20a7" compoundref="_wear_tracking_8cpp" startline="32" endline="55">WearCounter::TrackServoUsage</referencedby>
        <referencedby refid="_wingsail_8h_1a31ec22cdae42b2cba5dcd378ea9119e4" compoundref="_wingsail_8cpp" startline="209" endline="226">WingSailServo</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_wingsail_8cpp_1a980e54911d45d0d7649bd4d438b39e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wingsail_init</definition>
        <argsstring>(void)</argsstring>
        <name>wingsail_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="33" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" bodystart="33" bodyend="38"/>
        <references refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" compoundref="_wingsail_8h" startline="27">WingSailType::State</references>
        <references refid="_wingsail_8cpp_1a3c064dc624242f614329a0b4ec2d6725" compoundref="_wingsail_8cpp" startline="40" endline="130">wingsail_update</references>
        <references refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aa1440dd1a2f93d441d49cb034d1643808" compoundref="_wingsail_8h" startline="20">wsForward</references>
      </memberdef>
      <memberdef kind="function" id="_wingsail_8cpp_1a3c064dc624242f614329a0b4ec2d6725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wingsail_update</definition>
        <argsstring>(void)</argsstring>
        <name>wingsail_update</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="40" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" bodystart="40" bodyend="130"/>
        <references refid="_wingsail_8cpp_1a20ba7e5f970a210221a675db25c6f7c4" compoundref="_wingsail_8cpp" startline="132" endline="140">AutoSetWingSail</references>
        <references refid="struct_r_c___i_n___type_1a0285a84cc630ea71388ed7c20d256982" compoundref="_radio_control_8h" startline="13">RC_IN_Type::Channel</references>
        <references refid="struct_mission_command_1a299f9beaa99d092803d233a358dafcf4" compoundref="_mission_8h" startline="25">MissionCommand::cmd</references>
        <references refid="struct_state_values_struct_1a18691cbe7acc424d4e8f196119a5dd53" compoundref="_command_state___processor_8h" startline="33">StateValuesStruct::CommandState</references>
        <references refid="_mission_8h_1a9a8271f8e60f510f0275d51e026f9398ab5d9734d8cb7ee4687e055eb495b1adc" compoundref="_mission_8h" startline="20">ctSteerWindCourse</references>
        <references refid="struct_navigation_data_type_1ae2583f7b5f179a03372047db7426e224" compoundref="_navigation_8h" startline="61">NavigationDataType::Currentloc</references>
        <references refid="_g_p_s_8cpp_1aad9fb3151b07a5325e45216fdc81d8f8" compoundref="_g_p_s_8cpp" startline="204" endline="222">GPS_LocationIs_Valid</references>
        <references refid="struct_state_values_struct_1a11d6c742b6b3f57b1c39ddf6fc485e52" compoundref="_command_state___processor_8h" startline="39">StateValuesStruct::home_is_set</references>
        <references refid="struct_loiter_struct_1a110d7b3503543115a934173af03f4445" compoundref="_loiter_8h" startline="24">LoiterStruct::LoiterState</references>
        <references refid="_loiter_8h_1ab7d55392ee7236e35a6dee0ea6d75342a79380229b91a5962563cf2bd6b62f009" compoundref="_loiter_8h" startline="15">lsNotLoitering</references>
        <references refid="struct_state_values_struct_1a1e5042befd9d49f50e64fd2797fbda80" compoundref="_command_state___processor_8h" startline="34">StateValuesStruct::mission_index</references>
        <references refid="struct_mission_values_struct_1ad2dc919140026b256710e2ba680a07ce" compoundref="_mission_8h" startline="39">MissionValuesStruct::MissionList</references>
        <references refid="struct_navigation_data_type_1a9a9a7db641287de17319847055378893" compoundref="_navigation_8h" startline="76">NavigationDataType::next_WP_valid</references>
        <references refid="structconfig_values_type_1a5e92833efd357eaf9312f7e4e0e059a4" compoundref="config_values_8h" startline="66">configValuesType::RC_IN_Channel_Sail</references>
        <references refid="_wingsail_8cpp_1afda16181b0eed12d7dd9b7b7218d996f" compoundref="_wingsail_8cpp" startline="142" endline="147">SetTrimTabAngle</references>
        <references refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" compoundref="_wingsail_8h" startline="27">WingSailType::State</references>
        <references refid="struct_mission_command_1a5400ca1048df713e7410dc6dea6d8f81" compoundref="_mission_8h" startline="31">MissionCommand::TrimTabAngle</references>
        <references refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849a788434e058e81627c8b23e2785c5a146" compoundref="_command_state___processor_8h" startline="19">vcsFollowMission</references>
        <references refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849a4e3577b9131bff5af128607fd8ba0117" compoundref="_command_state___processor_8h" startline="17">vcsFullManual</references>
        <references refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849adabd724d3ef0f9779c154b7217ca77ed" compoundref="_command_state___processor_8h" startline="16">vcsIdle</references>
        <references refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849a24b054787811ac78038bbfb8218aa510" compoundref="_command_state___processor_8h" startline="25">vcsLoiter</references>
        <references refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849ab9f34ea97a85ffeb3c6478caab358972" compoundref="_command_state___processor_8h" startline="18">vcsPartialManual</references>
        <references refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849acd42ee135e713ad2bd3ec7ca06fa1ce5" compoundref="_command_state___processor_8h" startline="24">vcsResetMissionIndex</references>
        <references refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849aed81b318c267cda354efbc6a79fa0f1d" compoundref="_command_state___processor_8h" startline="22">vcsReturnToHome</references>
        <references refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849a951462981e5580f78d5a7f1e6d4a015c" compoundref="_command_state___processor_8h" startline="23">vcsSetHome</references>
        <references refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849aabc769c72c93e1080f1943387c22cb00" compoundref="_command_state___processor_8h" startline="20">vcsSteerMagneticCourse</references>
        <references refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849aedd9283fbe13f9b9f1c62d7a1b699db9" compoundref="_command_state___processor_8h" startline="21">vcsSteerWindCourse</references>
        <references refid="_wingsail_8cpp_1a31ec22cdae42b2cba5dcd378ea9119e4" compoundref="_wingsail_8cpp" startline="209" endline="226">WingSailServo</references>
        <references refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aa1440dd1a2f93d441d49cb034d1643808" compoundref="_wingsail_8h" startline="20">wsForward</references>
        <references refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aad69bda912cf7298b18a18fefafeaa5b9" compoundref="_wingsail_8h" startline="19">wsIdle</references>
        <referencedby refid="_wingsail_8h_1a980e54911d45d0d7649bd4d438b39e7f" compoundref="_wingsail_8cpp" startline="33" endline="38">wingsail_init</referencedby>
        <referencedby refid="_wingsail_8h_1ae05017f13ac421391cf717b6c696786e" compoundref="_wingsail_8cpp" startline="257" endline="271">Wingsail_TrackTackChange</referencedby>
      </memberdef>
      <memberdef kind="function" id="_wingsail_8cpp_1a20ba7e5f970a210221a675db25c6f7c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AutoSetWingSail</definition>
        <argsstring>(WingSailStateType WingSailState)</argsstring>
        <name>AutoSetWingSail</name>
        <param>
          <type><ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7a" kindref="member">WingSailStateType</ref></type>
          <declname>WingSailState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="132" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" bodystart="132" bodyend="140"/>
        <references refid="struct_wing_sail_type_1a3ce4045cf7e44d3778244bb2433703d7" compoundref="_wingsail_8h" startline="25">WingSailType::Angle</references>
        <references refid="_wingsail_8cpp_1ac15c04fc20ba8254376a6fbd3c871c61" compoundref="_wingsail_8cpp" startline="151" endline="198">CalcTrimTabAngle</references>
        <references refid="_wingsail_8cpp_1afda16181b0eed12d7dd9b7b7218d996f" compoundref="_wingsail_8cpp" startline="142" endline="147">SetTrimTabAngle</references>
        <references refid="struct_wing_sail_type_1a4fbdd3e6a40eb76f05030e4b31f476fe" compoundref="_wingsail_8h" startline="26">WingSailType::TrimTabAngle</references>
        <referencedby refid="_wingsail_8h_1a3c064dc624242f614329a0b4ec2d6725" compoundref="_wingsail_8cpp" startline="40" endline="130">wingsail_update</referencedby>
      </memberdef>
      <memberdef kind="function" id="_wingsail_8cpp_1afda16181b0eed12d7dd9b7b7218d996f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetTrimTabAngle</definition>
        <argsstring>(int TrimTabAngle)</argsstring>
        <name>SetTrimTabAngle</name>
        <param>
          <type>int</type>
          <declname>TrimTabAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="142" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" bodystart="142" bodyend="147"/>
        <references refid="struct_wing_sail_type_1a2f492aeb2e6eae96f33ace184673cad5" compoundref="_wingsail_8h" startline="28">WingSailType::Servo_microseconds</references>
        <references refid="_wingsail_8cpp_1a081db0efb55b69c0c5f385e5d42940c0" compoundref="_wingsail_8cpp" startline="201" endline="207">TrimTabAngle_to_us</references>
        <references refid="_wingsail_8cpp_1a31ec22cdae42b2cba5dcd378ea9119e4" compoundref="_wingsail_8cpp" startline="209" endline="226">WingSailServo</references>
        <referencedby refid="_wingsail_8h_1a20ba7e5f970a210221a675db25c6f7c4" compoundref="_wingsail_8cpp" startline="132" endline="140">AutoSetWingSail</referencedby>
        <referencedby refid="_wingsail_8h_1a3c064dc624242f614329a0b4ec2d6725" compoundref="_wingsail_8cpp" startline="40" endline="130">wingsail_update</referencedby>
      </memberdef>
      <memberdef kind="function" id="_wingsail_8cpp_1ac15c04fc20ba8254376a6fbd3c871c61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CalcTrimTabAngle</definition>
        <argsstring>(int WingSailAngle, WingSailStateType WingSailState)</argsstring>
        <name>CalcTrimTabAngle</name>
        <param>
          <type>int</type>
          <declname>WingSailAngle</declname>
        </param>
        <param>
          <type><ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7a" kindref="member">WingSailStateType</ref></type>
          <declname>WingSailState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="151" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" bodystart="151" bodyend="198"/>
        <references refid="_wingsail_8cpp_1a43c6b7ccb81d4aa6185463972e436255" compoundref="_wingsail_8cpp" startline="228" endline="255">IdentifyCurrentTack</references>
        <references refid="struct_wing_sail_type_1a675de4c9d822a31a4da1fb3e779856b5" compoundref="_wingsail_8h" startline="29">WingSailType::Tack</references>
        <references refid="structconfig_values_type_1a5de1574374a7457242a06a189aec690f" compoundref="config_values_8h" startline="121">configValuesType::TrimTabDefaultAngle</references>
        <references refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aa1440dd1a2f93d441d49cb034d1643808" compoundref="_wingsail_8h" startline="20">wsForward</references>
        <references refid="_wingsail_8h_1ad989b71e930a6d1a60b91decc2554ef5ac7b7419f237f72bb6d751da714389eb7" compoundref="_wingsail_8h" startline="13">wsHeadToWind</references>
        <references refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aad69bda912cf7298b18a18fefafeaa5b9" compoundref="_wingsail_8h" startline="19">wsIdle</references>
        <references refid="_wingsail_8h_1ad989b71e930a6d1a60b91decc2554ef5a5a33dc3f97dc93527342ce4397c591d3" compoundref="_wingsail_8h" startline="14">wsPortTack</references>
        <references refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aaadff6a56b80faca718ecaf98c0163367" compoundref="_wingsail_8h" startline="21">wsReverse</references>
        <references refid="_wingsail_8h_1ad989b71e930a6d1a60b91decc2554ef5aa97aec89db94a86435fedfd2fbff8783" compoundref="_wingsail_8h" startline="15">wsStarboardTack</references>
        <referencedby refid="_wingsail_8h_1a20ba7e5f970a210221a675db25c6f7c4" compoundref="_wingsail_8cpp" startline="132" endline="140">AutoSetWingSail</referencedby>
      </memberdef>
      <memberdef kind="function" id="_wingsail_8cpp_1a081db0efb55b69c0c5f385e5d42940c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TrimTabAngle_to_us</definition>
        <argsstring>(int TrimTabAngle)</argsstring>
        <name>TrimTabAngle_to_us</name>
        <param>
          <type>int</type>
          <declname>TrimTabAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="201" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" bodystart="201" bodyend="207"/>
        <references refid="structconfig_values_type_1aa57d2d289c80384c0c56c5b95b731807" compoundref="config_values_8h" startline="119">configValuesType::TrimTabOffset</references>
        <references refid="structconfig_values_type_1ad0e88567b91c76388a29d2568d6d0e5e" compoundref="config_values_8h" startline="118">configValuesType::TrimTabScale</references>
        <referencedby refid="_wingsail_8h_1afda16181b0eed12d7dd9b7b7218d996f" compoundref="_wingsail_8cpp" startline="142" endline="147">SetTrimTabAngle</referencedby>
      </memberdef>
      <memberdef kind="function" id="_wingsail_8cpp_1a31ec22cdae42b2cba5dcd378ea9119e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WingSailServo</definition>
        <argsstring>(int SailIn_us)</argsstring>
        <name>WingSailServo</name>
        <param>
          <type>int</type>
          <declname>SailIn_us</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="209" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" bodystart="209" bodyend="226"/>
        <references refid="structconfig_values_type_1a59efead0f04f26233f9b1dfb3ec52945" compoundref="config_values_8h" startline="96">configValuesType::BluetoothPort</references>
        <references refid="_wingsail_8cpp_1a12f977b17bc11b1b5327695231ca20d5">BTState</references>
        <references refid="_bluetooth_connection_8h_1a3eb26161a7048e24adbf23c23a71b13bad253364cc2926eb617b0833335fe4467" compoundref="_bluetooth_connection_8h" startline="12">Connected</references>
        <references refid="_wingsail_8cpp_1ac3dffda353afb2aeae4cd3ebb4e7bb48" compoundref="_wingsail_8cpp" startline="31">Deadband</references>
        <references refid="_wingsail_8cpp_1aae3eed66759a369bc96c71a1c39733af">Serials</references>
        <references refid="class_wear_counter_1a1464c6ffb3aa95bf2f49b9a2826b20a7" compoundref="_wear_tracking_8cpp" startline="32" endline="55">WearCounter::TrackServoUsage</references>
        <referencedby refid="_wingsail_8h_1afda16181b0eed12d7dd9b7b7218d996f" compoundref="_wingsail_8cpp" startline="142" endline="147">SetTrimTabAngle</referencedby>
        <referencedby refid="_wingsail_8h_1a3c064dc624242f614329a0b4ec2d6725" compoundref="_wingsail_8cpp" startline="40" endline="130">wingsail_update</referencedby>
      </memberdef>
      <memberdef kind="function" id="_wingsail_8cpp_1a43c6b7ccb81d4aa6185463972e436255" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IdentifyCurrentTack</definition>
        <argsstring>(int WingSailAngle)</argsstring>
        <name>IdentifyCurrentTack</name>
        <param>
          <type>int</type>
          <declname>WingSailAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="228" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" bodystart="228" bodyend="255"/>
        <references refid="struct_wing_sail_type_1a675de4c9d822a31a4da1fb3e779856b5" compoundref="_wingsail_8h" startline="29">WingSailType::Tack</references>
        <references refid="_wingsail_8h_1ad989b71e930a6d1a60b91decc2554ef5ac7b7419f237f72bb6d751da714389eb7" compoundref="_wingsail_8h" startline="13">wsHeadToWind</references>
        <references refid="_wingsail_8h_1ad989b71e930a6d1a60b91decc2554ef5a5a33dc3f97dc93527342ce4397c591d3" compoundref="_wingsail_8h" startline="14">wsPortTack</references>
        <references refid="_wingsail_8h_1ad989b71e930a6d1a60b91decc2554ef5aa97aec89db94a86435fedfd2fbff8783" compoundref="_wingsail_8h" startline="15">wsStarboardTack</references>
        <referencedby refid="_wingsail_8h_1ac15c04fc20ba8254376a6fbd3c871c61" compoundref="_wingsail_8cpp" startline="151" endline="198">CalcTrimTabAngle</referencedby>
        <referencedby refid="_wingsail_8h_1ae05017f13ac421391cf717b6c696786e" compoundref="_wingsail_8cpp" startline="257" endline="271">Wingsail_TrackTackChange</referencedby>
      </memberdef>
      <memberdef kind="function" id="_wingsail_8cpp_1ae05017f13ac421391cf717b6c696786e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Wingsail_TrackTackChange</definition>
        <argsstring>(void)</argsstring>
        <name>Wingsail_TrackTackChange</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" line="257" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp" bodystart="257" bodyend="271"/>
        <references refid="struct_wing_sail_type_1a3ce4045cf7e44d3778244bb2433703d7" compoundref="_wingsail_8h" startline="25">WingSailType::Angle</references>
        <references refid="_wingsail_8cpp_1a43c6b7ccb81d4aa6185463972e436255" compoundref="_wingsail_8cpp" startline="228" endline="255">IdentifyCurrentTack</references>
        <references refid="struct_wing_sail_type_1a675de4c9d822a31a4da1fb3e779856b5" compoundref="_wingsail_8h" startline="29">WingSailType::Tack</references>
        <references refid="_wingsail_8cpp_1a3c064dc624242f614329a0b4ec2d6725" compoundref="_wingsail_8cpp" startline="40" endline="130">wingsail_update</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_wingsail_8h" kindref="compound">Wingsail.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_values_8h" kindref="compound">configValues.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_command_state___processor_8h" kindref="compound">CommandState_Processor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_radio_control_8h" kindref="compound">RadioControl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_navigation_8h" kindref="compound">Navigation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_loiter_8h" kindref="compound">Loiter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_g_p_s_8h" kindref="compound">GPS.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_bluetooth_connection_8h" kindref="compound">BluetoothConnection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_m_p_u9250_8h" kindref="compound">MPU9250.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_wind_angle__2950_8h" kindref="compound">WindAngle_2950.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_wear_tracking_8h" kindref="compound">WearTracking.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_mission_8h" kindref="compound">Mission.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>HardwareSerial<sp/>*<ref refid="_wingsail_8cpp_1aae3eed66759a369bc96c71a1c39733af" kindref="member">Serials</ref>[];</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="_bluetooth_connection_8h_1a3eb26161a7048e24adbf23c23a71b13b" kindref="member">BTStateType</ref><sp/><ref refid="_wingsail_8cpp_1a12f977b17bc11b1b5327695231ca20d5" kindref="member">BTState</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structconfig_values_type" kindref="compound">configValuesType</ref><sp/><ref refid="_wingsail_8cpp_1a1106f1eecd15a9233233ae672d651265" kindref="member">Configuration</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stucture<sp/>holding<sp/>Configuration<sp/>values;<sp/>preset<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_wing_sail_type" kindref="compound">WingSailType</ref><sp/><ref refid="_wingsail_8cpp_1a8542255b0542bb99ec7ea703a72b7eb9" kindref="member">WingSail</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_state_values_struct" kindref="compound">StateValuesStruct</ref><sp/><ref refid="_wingsail_8cpp_1a84903d3dde78582cbc92053c3c18d444" kindref="member">StateValues</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_navigation_data_type" kindref="compound">NavigationDataType</ref><sp/><ref refid="_wingsail_8cpp_1a6e6c124a8544f54a81bb39badabb0342" kindref="member">NavData</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_loiter_struct" kindref="compound">LoiterStruct</ref><sp/><ref refid="_wingsail_8cpp_1aaba928d8db82c396578c10f915447c21" kindref="member">LoiterData</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_r_c___i_n___type" kindref="compound">RC_IN_Type</ref><sp/><ref refid="_wingsail_8cpp_1a32f693d1f86e14f17d5fc04b2b7bc310" kindref="member">RC_IN</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u9250" kindref="compound">MPU9250</ref><sp/><ref refid="_wingsail_8cpp_1a13974f1660839d8bc696129bad2abf64" kindref="member">WingSailAngleSensor</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>IMU<sp/>including<sp/>Magnetic<sp/>Compass<sp/>and<sp/>Gyro<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_wear_counter" kindref="compound">WearCounter</ref><sp/><ref refid="_wingsail_8cpp_1af6df8aacbd109200ab0a3e21dc4a16bc" kindref="member">TrimTabUsage</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_mission_values_struct" kindref="compound">MissionValuesStruct</ref><sp/><ref refid="_wingsail_8cpp_1ae7b7edb4669ddd6e193860f2b64c35cd" kindref="member">MissionValues</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="_wingsail_8cpp_1ac3dffda353afb2aeae4cd3ebb4e7bb48" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="_wingsail_8cpp_1ac3dffda353afb2aeae4cd3ebb4e7bb48" kindref="member">Deadband</ref><sp/>=<sp/>10;<sp/></highlight><highlight class="comment">//<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="_wingsail_8h_1a980e54911d45d0d7649bd4d438b39e7f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8cpp_1a980e54911d45d0d7649bd4d438b39e7f" kindref="member">wingsail_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>forward,<sp/>at<sp/>least<sp/>until<sp/>we<sp/>have<sp/>control<sp/>over<sp/>the<sp/>state.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref><sp/>=<sp/><ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aa1440dd1a2f93d441d49cb034d1643808" kindref="member">wsForward</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1a3c064dc624242f614329a0b4ec2d6725" kindref="member">wingsail_update</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="_wingsail_8h_1a3c064dc624242f614329a0b4ec2d6725" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8cpp_1a3c064dc624242f614329a0b4ec2d6725" kindref="member">wingsail_update</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//static<sp/>uint16_t<sp/>prev_SailIn_us;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>SailIn_us;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sailing<sp/>mode<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>idle/foward/manual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(StateValues.<ref refid="struct_state_values_struct_1a18691cbe7acc424d4e8f196119a5dd53" kindref="member">CommandState</ref>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849a788434e058e81627c8b23e2785c5a146" kindref="member">vcsFollowMission</ref>:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>following<sp/>mission<sp/>and<sp/>not<sp/>steering<sp/>a<sp/>wind<sp/>course<sp/>as<sp/>a<sp/>mission<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MissionValues.<ref refid="struct_mission_values_struct_1ad2dc919140026b256710e2ba680a07ce" kindref="member">MissionList</ref>[StateValues.<ref refid="struct_state_values_struct_1a1e5042befd9d49f50e64fd2797fbda80" kindref="member">mission_index</ref>].<ref refid="struct_mission_command_1a299f9beaa99d092803d233a358dafcf4" kindref="member">cmd</ref><sp/>!=<sp/><ref refid="_mission_8h_1a9a8271f8e60f510f0275d51e026f9398ab5d9734d8cb7ee4687e055eb495b1adc" kindref="member">MissionCommandType::ctSteerWindCourse</ref>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_g_p_s_8cpp_1aad9fb3151b07a5325e45216fdc81d8f8" kindref="member">GPS_LocationIs_Valid</ref>(NavData.<ref refid="struct_navigation_data_type_1ae2583f7b5f179a03372047db7426e224" kindref="member">Currentloc</ref>)<sp/>&amp;&amp;<sp/>NavData.<ref refid="struct_navigation_data_type_1a9a9a7db641287de17319847055378893" kindref="member">next_WP_valid</ref>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>sail<sp/>to<sp/>forward<sp/>sailing<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref><sp/>=<sp/><ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aa1440dd1a2f93d441d49cb034d1643808" kindref="member">wsForward</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1a20ba7e5f970a210221a675db25c6f7c4" kindref="member">AutoSetWingSail</ref>(WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>sail<sp/>to<sp/>idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref><sp/>=<sp/><ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aad69bda912cf7298b18a18fefafeaa5b9" kindref="member">wsIdle</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1a20ba7e5f970a210221a675db25c6f7c4" kindref="member">AutoSetWingSail</ref>(WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>following<sp/>mission<sp/>and<sp/>we<sp/>are<sp/>steering<sp/>a<sp/>wind<sp/>course<sp/>as<sp/>a<sp/>mission<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>explicitly<sp/>set<sp/>the<sp/>TrimTab<sp/>Angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1afda16181b0eed12d7dd9b7b7218d996f" kindref="member">SetTrimTabAngle</ref>(MissionValues.<ref refid="struct_mission_values_struct_1ad2dc919140026b256710e2ba680a07ce" kindref="member">MissionList</ref>[StateValues.<ref refid="struct_state_values_struct_1a1e5042befd9d49f50e64fd2797fbda80" kindref="member">mission_index</ref>].<ref refid="struct_mission_command_1a5400ca1048df713e7410dc6dea6d8f81" kindref="member">TrimTabAngle</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849a24b054787811ac78038bbfb8218aa510" kindref="member">vcsLoiter</ref>:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_g_p_s_8cpp_1aad9fb3151b07a5325e45216fdc81d8f8" kindref="member">GPS_LocationIs_Valid</ref>(NavData.<ref refid="struct_navigation_data_type_1ae2583f7b5f179a03372047db7426e224" kindref="member">Currentloc</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LoiterData.<ref refid="struct_loiter_struct_1a110d7b3503543115a934173af03f4445" kindref="member">LoiterState</ref><sp/>!=<sp/><ref refid="_loiter_8h_1ab7d55392ee7236e35a6dee0ea6d75342a79380229b91a5962563cf2bd6b62f009" kindref="member">LoiterStateType::lsNotLoitering</ref>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>sail<sp/>to<sp/>forward<sp/>sailing<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref><sp/>=<sp/><ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aa1440dd1a2f93d441d49cb034d1643808" kindref="member">wsForward</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1a20ba7e5f970a210221a675db25c6f7c4" kindref="member">AutoSetWingSail</ref>(WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>sail<sp/>to<sp/>idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref><sp/>=<sp/><ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aad69bda912cf7298b18a18fefafeaa5b9" kindref="member">wsIdle</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1a20ba7e5f970a210221a675db25c6f7c4" kindref="member">AutoSetWingSail</ref>(WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849aed81b318c267cda354efbc6a79fa0f1d" kindref="member">vcsReturnToHome</ref>:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_g_p_s_8cpp_1aad9fb3151b07a5325e45216fdc81d8f8" kindref="member">GPS_LocationIs_Valid</ref>(NavData.<ref refid="struct_navigation_data_type_1ae2583f7b5f179a03372047db7426e224" kindref="member">Currentloc</ref>)<sp/>&amp;&amp;<sp/>StateValues.<ref refid="struct_state_values_struct_1a11d6c742b6b3f57b1c39ddf6fc485e52" kindref="member">home_is_set</ref>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>sail<sp/>to<sp/>forward<sp/>sailing<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref><sp/>=<sp/><ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aa1440dd1a2f93d441d49cb034d1643808" kindref="member">wsForward</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1a20ba7e5f970a210221a675db25c6f7c4" kindref="member">AutoSetWingSail</ref>(WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>sail<sp/>to<sp/>idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref><sp/>=<sp/><ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aad69bda912cf7298b18a18fefafeaa5b9" kindref="member">wsIdle</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1a20ba7e5f970a210221a675db25c6f7c4" kindref="member">AutoSetWingSail</ref>(WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849ab9f34ea97a85ffeb3c6478caab358972" kindref="member">vcsPartialManual</ref>:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849a951462981e5580f78d5a7f1e6d4a015c" kindref="member">vcsSetHome</ref>:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849acd42ee135e713ad2bd3ec7ca06fa1ce5" kindref="member">vcsResetMissionIndex</ref>:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849aabc769c72c93e1080f1943387c22cb00" kindref="member">vcsSteerMagneticCourse</ref>:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849aedd9283fbe13f9b9f1c62d7a1b699db9" kindref="member">vcsSteerWindCourse</ref>:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref><sp/>=<sp/><ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aa1440dd1a2f93d441d49cb034d1643808" kindref="member">wsForward</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1a20ba7e5f970a210221a675db25c6f7c4" kindref="member">AutoSetWingSail</ref>(WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849a4e3577b9131bff5af128607fd8ba0117" kindref="member">vcsFullManual</ref>:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pass<sp/>through<sp/>the<sp/>RC<sp/>Input<sp/>channels<sp/>to<sp/>the<sp/>BT<sp/>Serial<sp/>Servo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SailIn_us<sp/>=<sp/>RC_IN.<ref refid="struct_r_c___i_n___type_1a0285a84cc630ea71388ed7c20d256982" kindref="member">Channel</ref>[Configuration.<ref refid="structconfig_values_type_1a5e92833efd357eaf9312f7e4e0e059a4" kindref="member">RC_IN_Channel_Sail</ref>];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1a31ec22cdae42b2cba5dcd378ea9119e4" kindref="member">WingSailServo</ref>(SailIn_us);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_command_state___processor_8h_1ad6c3f1694dc706db045d7e47aea8c849adabd724d3ef0f9779c154b7217ca77ed" kindref="member">vcsIdle</ref>:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref><sp/>=<sp/><ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aad69bda912cf7298b18a18fefafeaa5b9" kindref="member">wsIdle</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1a20ba7e5f970a210221a675db25c6f7c4" kindref="member">AutoSetWingSail</ref>(WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref><sp/>=<sp/><ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aad69bda912cf7298b18a18fefafeaa5b9" kindref="member">wsIdle</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1a20ba7e5f970a210221a675db25c6f7c4" kindref="member">AutoSetWingSail</ref>(WingSail.<ref refid="struct_wing_sail_type_1ac06c0bf011f21961f298a94ff0b9163a" kindref="member">State</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="130"><highlight class="normal">};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="_wingsail_8h_1a20ba7e5f970a210221a675db25c6f7c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8cpp_1a20ba7e5f970a210221a675db25c6f7c4" kindref="member">AutoSetWingSail</ref>(<ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7a" kindref="member">WingSailStateType</ref><sp/>WingSailState)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>trim<sp/>tab<sp/>in<sp/>accordance<sp/>with<sp/>current<sp/>conditions,<sp/>and<sp/>current<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>WingSail.<ref refid="struct_wing_sail_type_1a4fbdd3e6a40eb76f05030e4b31f476fe" kindref="member">TrimTabAngle</ref><sp/>=<sp/><ref refid="_wingsail_8cpp_1ac15c04fc20ba8254376a6fbd3c871c61" kindref="member">CalcTrimTabAngle</ref>(WingSail.<ref refid="struct_wing_sail_type_1a3ce4045cf7e44d3778244bb2433703d7" kindref="member">Angle</ref>,<sp/>WingSailState);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1afda16181b0eed12d7dd9b7b7218d996f" kindref="member">SetTrimTabAngle</ref>(WingSail.<ref refid="struct_wing_sail_type_1a4fbdd3e6a40eb76f05030e4b31f476fe" kindref="member">TrimTabAngle</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//WingSail.Servo_microseconds<sp/>=<sp/>TrimTabAngle_to_us(WingSail.TrimTabAngle);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//WingSailServo(WingSail.Servo_microseconds);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="_wingsail_8h_1afda16181b0eed12d7dd9b7b7218d996f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8cpp_1afda16181b0eed12d7dd9b7b7218d996f" kindref="member">SetTrimTabAngle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TrimTabAngle)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>trim<sp/>tab<sp/>angle<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>WingSail.<ref refid="struct_wing_sail_type_1a2f492aeb2e6eae96f33ace184673cad5" kindref="member">Servo_microseconds</ref><sp/>=<sp/><ref refid="_wingsail_8cpp_1a081db0efb55b69c0c5f385e5d42940c0" kindref="member">TrimTabAngle_to_us</ref>(TrimTabAngle);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1a31ec22cdae42b2cba5dcd378ea9119e4" kindref="member">WingSailServo</ref>(WingSail.<ref refid="struct_wing_sail_type_1a2f492aeb2e6eae96f33ace184673cad5" kindref="member">Servo_microseconds</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="_wingsail_8h_1ac15c04fc20ba8254376a6fbd3c871c61" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8cpp_1ac15c04fc20ba8254376a6fbd3c871c61" kindref="member">CalcTrimTabAngle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WingSailAngle,<sp/><ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7a" kindref="member">WingSailStateType</ref><sp/>WingSailState)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>required<sp/>angle<sp/>to<sp/>apply<sp/>to<sp/>the<sp/>TrimTab<sp/>to<sp/>drive<sp/>the<sp/>vessel<sp/>in<sp/>accordance<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wingsail<sp/>state,<sp/>and<sp/>the<sp/>current<sp/>wind<sp/>angle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.1<sp/>update<sp/>to<sp/>add<sp/>Config<sp/>TrimTabDefaultAngle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1a43c6b7ccb81d4aa6185463972e436255" kindref="member">IdentifyCurrentTack</ref>(WingSailAngle);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TrimTabAngle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(WingSailState)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aad69bda912cf7298b18a18fefafeaa5b9" kindref="member">WingSailStateType::wsIdle</ref>:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrimTabAngle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aa1440dd1a2f93d441d49cb034d1643808" kindref="member">WingSailStateType::wsForward</ref>:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(WingSail.<ref refid="struct_wing_sail_type_1a675de4c9d822a31a4da1fb3e779856b5" kindref="member">Tack</ref>)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8h_1ad989b71e930a6d1a60b91decc2554ef5a5a33dc3f97dc93527342ce4397c591d3" kindref="member">WingSailTackType::wsPortTack</ref>:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrimTabAngle<sp/>=<sp/>-Configuration.<ref refid="structconfig_values_type_1a5de1574374a7457242a06a189aec690f" kindref="member">TrimTabDefaultAngle</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8h_1ad989b71e930a6d1a60b91decc2554ef5aa97aec89db94a86435fedfd2fbff8783" kindref="member">WingSailTackType::wsStarboardTack</ref>:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrimTabAngle<sp/>=<sp/>+Configuration.<ref refid="structconfig_values_type_1a5de1574374a7457242a06a189aec690f" kindref="member">TrimTabDefaultAngle</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8h_1ad989b71e930a6d1a60b91decc2554ef5ac7b7419f237f72bb6d751da714389eb7" kindref="member">WingSailTackType::wsHeadToWind</ref>:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrimTabAngle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8h_1ae4a51ad4476d76756e3e48ba6ca7fc7aaadff6a56b80faca718ecaf98c0163367" kindref="member">WingSailStateType::wsReverse</ref>:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(WingSail.<ref refid="struct_wing_sail_type_1a675de4c9d822a31a4da1fb3e779856b5" kindref="member">Tack</ref>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8h_1ad989b71e930a6d1a60b91decc2554ef5a5a33dc3f97dc93527342ce4397c591d3" kindref="member">WingSailTackType::wsPortTack</ref>:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrimTabAngle<sp/>=<sp/>+Configuration.<ref refid="structconfig_values_type_1a5de1574374a7457242a06a189aec690f" kindref="member">TrimTabDefaultAngle</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8h_1ad989b71e930a6d1a60b91decc2554ef5aa97aec89db94a86435fedfd2fbff8783" kindref="member">WingSailTackType::wsStarboardTack</ref>:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrimTabAngle<sp/>=<sp/>-Configuration.<ref refid="structconfig_values_type_1a5de1574374a7457242a06a189aec690f" kindref="member">TrimTabDefaultAngle</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8h_1ad989b71e930a6d1a60b91decc2554ef5ac7b7419f237f72bb6d751da714389eb7" kindref="member">WingSailTackType::wsHeadToWind</ref>:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrimTabAngle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrimTabAngle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TrimTabAngle;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="_wingsail_8h_1a081db0efb55b69c0c5f385e5d42940c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8cpp_1a081db0efb55b69c0c5f385e5d42940c0" kindref="member">TrimTabAngle_to_us</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TrimTabAngle)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>requested<sp/>trim<sp/>tab<sp/>angle<sp/>to<sp/>the<sp/>corresponding<sp/>Servo<sp/>Signal<sp/>in<sp/>microseconds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ServoMicroSeconds<sp/>=<sp/>(Configuration.<ref refid="structconfig_values_type_1ad0e88567b91c76388a29d2568d6d0e5e" kindref="member">TrimTabScale</ref><sp/>*<sp/>TrimTabAngle)<sp/>+<sp/>Configuration.<ref refid="structconfig_values_type_1aa57d2d289c80384c0c56c5b95b731807" kindref="member">TrimTabOffset</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ServoMicroSeconds;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="_wingsail_8h_1a31ec22cdae42b2cba5dcd378ea9119e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8cpp_1a31ec22cdae42b2cba5dcd378ea9119e4" kindref="member">WingSailServo</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SailIn_us)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>the<sp/>serial<sp/>message<sp/>to<sp/>the<sp/>Bluetooth<sp/>Servo,<sp/>but<sp/>only<sp/>if<sp/>connected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/>prev_SailIn_us;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((abs(SailIn_us<sp/>-<sp/>prev_SailIn_us)<sp/>&gt;=<sp/><ref refid="_wingsail_8cpp_1ac3dffda353afb2aeae4cd3ebb4e7bb48" kindref="member">Deadband</ref>)<sp/>&amp;&amp;<sp/>(<ref refid="_wingsail_8cpp_1a12f977b17bc11b1b5327695231ca20d5" kindref="member">BTState</ref><sp/>==<sp/><ref refid="_bluetooth_connection_8h_1a3eb26161a7048e24adbf23c23a71b13bad253364cc2926eb617b0833335fe4467" kindref="member">BTStateType::Connected</ref>))</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_SailIn_us<sp/>=<sp/>SailIn_us;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>the<sp/>serial<sp/>message<sp/>for<sp/>the<sp/>servo<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//WingSailServo(SailIn_us);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>the<sp/>serial<sp/>message<sp/>for<sp/>the<sp/>servo<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="_wingsail_8cpp_1aae3eed66759a369bc96c71a1c39733af" kindref="member">Serials</ref>[Configuration.<ref refid="structconfig_values_type_1a59efead0f04f26233f9b1dfb3ec52945" kindref="member">BluetoothPort</ref>]).print(</highlight><highlight class="stringliteral">&quot;srv,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="_wingsail_8cpp_1aae3eed66759a369bc96c71a1c39733af" kindref="member">Serials</ref>[Configuration.<ref refid="structconfig_values_type_1a59efead0f04f26233f9b1dfb3ec52945" kindref="member">BluetoothPort</ref>]).println(SailIn_us);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrimTabUsage.<ref refid="class_wear_counter_1a1464c6ffb3aa95bf2f49b9a2826b20a7" kindref="member">TrackServoUsage</ref>(SailIn_us);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal">};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="_wingsail_8h_1a43c6b7ccb81d4aa6185463972e436255" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8cpp_1a43c6b7ccb81d4aa6185463972e436255" kindref="member">IdentifyCurrentTack</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WingSailAngle)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>whether<sp/>the<sp/>sail<sp/>is<sp/>on<sp/>port<sp/>tack<sp/>or<sp/>starboard<sp/>tack<sp/>based<sp/>on<sp/>Wing<sp/>Angle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>useful<sp/>for<sp/>identifying<sp/>transitions<sp/>of<sp/>the<sp/>wingsail<sp/>through<sp/>manoeuvres.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wingsail<sp/>Angle<sp/>varies<sp/>from<sp/>-180<sp/>to<sp/>0<sp/>to<sp/>+180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V1.0<sp/>5/2/2018<sp/>John<sp/>Semmens.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HeadToWindAngle<sp/>=<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>was<sp/>5<sp/>now<sp/>3<sp/>degrees<sp/>25/6/2020</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>port<sp/>tack<sp/>is<sp/>more<sp/>than<sp/>x<sp/>degrees<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WingSailAngle<sp/>&lt;=<sp/>-HeadToWindAngle)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WingSail.<ref refid="struct_wing_sail_type_1a675de4c9d822a31a4da1fb3e779856b5" kindref="member">Tack</ref><sp/>=<sp/><ref refid="_wingsail_8h_1ad989b71e930a6d1a60b91decc2554ef5a5a33dc3f97dc93527342ce4397c591d3" kindref="member">wsPortTack</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>starboard<sp/>tack<sp/>is<sp/>more<sp/>than<sp/>x<sp/>degrees<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WingSailAngle<sp/>&gt;=<sp/>+HeadToWindAngle)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WingSail.<ref refid="struct_wing_sail_type_1a675de4c9d822a31a4da1fb3e779856b5" kindref="member">Tack</ref><sp/>=<sp/><ref refid="_wingsail_8h_1ad989b71e930a6d1a60b91decc2554ef5aa97aec89db94a86435fedfd2fbff8783" kindref="member">wsStarboardTack</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Head<sp/>to<sp/>Wind<sp/>is<sp/>within<sp/>x<sp/>degrees<sp/>of<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WingSailAngle<sp/>&gt;<sp/>-HeadToWindAngle<sp/>&amp;&amp;<sp/>WingSailAngle<sp/>&lt;<sp/>HeadToWindAngle)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WingSail.<ref refid="struct_wing_sail_type_1a675de4c9d822a31a4da1fb3e779856b5" kindref="member">Tack</ref><sp/>=<sp/><ref refid="_wingsail_8h_1ad989b71e930a6d1a60b91decc2554ef5ac7b7419f237f72bb6d751da714389eb7" kindref="member">wsHeadToWind</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal">};</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="_wingsail_8h_1ae05017f13ac421391cf717b6c696786e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8cpp_1ae05017f13ac421391cf717b6c696786e" kindref="member">Wingsail_TrackTackChange</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>in<sp/>the<sp/>fast<sp/>loop<sp/>50ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_wingsail_8h_1ad989b71e930a6d1a60b91decc2554ef5" kindref="member">WingSailTackType</ref><sp/>WingSailTackPrev;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1a43c6b7ccb81d4aa6185463972e436255" kindref="member">IdentifyCurrentTack</ref>(WingSail.<ref refid="struct_wing_sail_type_1a3ce4045cf7e44d3778244bb2433703d7" kindref="member">Angle</ref>);<sp/></highlight><highlight class="comment">//<sp/>convert<sp/>WingSail<sp/>Angle<sp/>to<sp/>a<sp/>WingSail.Tack<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there&apos;s<sp/>a<sp/>change<sp/>of<sp/>Wingsail<sp/>Tack<sp/>Status,<sp/>then<sp/>send<sp/>an<sp/>update<sp/>to<sp/>the<sp/>wingsail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WingSailTackPrev<sp/>!=<sp/>WingSail.<ref refid="struct_wing_sail_type_1a675de4c9d822a31a4da1fb3e779856b5" kindref="member">Tack</ref>)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WingSailTackPrev<sp/>=<sp/>WingSail.<ref refid="struct_wing_sail_type_1a675de4c9d822a31a4da1fb3e779856b5" kindref="member">Tack</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_wingsail_8cpp_1a3c064dc624242f614329a0b4ec2d6725" kindref="member">wingsail_update</ref>();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Wingsail.cpp"/>
  </compounddef>
</doxygen>
