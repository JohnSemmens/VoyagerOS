<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_scheduler_cooperative_8cpp" kind="file">
    <compoundname>SchedulerCooperative.cpp</compoundname>
    <includes refid="_scheduler_cooperative_8h" local="yes">SchedulerCooperative.h</includes>
    <incdepgraph>
      <node id="675">
        <label>D:/Cloud/OneDrive/Voyager/VoyagerOS/SchedulerCooperative.cpp</label>
        <link refid="SchedulerCooperative.cpp"/>
        <childnode refid="676" relation="include">
        </childnode>
      </node>
      <node id="677">
        <label>arduino.h</label>
      </node>
      <node id="676">
        <label>SchedulerCooperative.h</label>
        <link refid="_scheduler_cooperative_8h"/>
        <childnode refid="677" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_scheduler_cooperative_8cpp_1ad9c7af17f5ddccf27be7d3225f9a1964" prot="public" static="yes" mutable="no">
        <type>const long</type>
        <definition>const long MaxNumberOfTasks</definition>
        <argsstring></argsstring>
        <name>MaxNumberOfTasks</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SchedulerCooperative.cpp" line="10" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SchedulerCooperative.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_scheduler_cooperative_8cpp_1a7b2d8f89598fb72e5ab86a30f0f22c5b" prot="public" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long TaskList[MaxNumberOfTasks]</definition>
        <argsstring>[MaxNumberOfTasks]</argsstring>
        <name>TaskList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SchedulerCooperative.cpp" line="14" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SchedulerCooperative.cpp" bodystart="14" bodyend="-1"/>
        <referencedby refid="_scheduler_cooperative_8h_1ac10e2415498c3aef7fb7b549547919ac" compoundref="_scheduler_cooperative_8cpp" startline="37" endline="39">SchedulerInit</referencedby>
        <referencedby refid="_scheduler_cooperative_8h_1acb78d8245c10c8a3008c0d4a225455e0" compoundref="_scheduler_cooperative_8cpp" startline="18" endline="32">SchedulerTick</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_scheduler_cooperative_8cpp_1acd302cc94706fb5bd7868c537e79ec28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SchedulerTick</definition>
        <argsstring>(int TaskIndex, void(*action)(void *), unsigned long interval_ms)</argsstring>
        <name>SchedulerTick</name>
        <param>
          <type>int</type>
          <declname>TaskIndex</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>action</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>interval_ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SchedulerCooperative.cpp" line="18" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SchedulerCooperative.cpp" bodystart="18" bodyend="32"/>
        <references refid="_scheduler_cooperative_8cpp_1a7b2d8f89598fb72e5ab86a30f0f22c5b" compoundref="_scheduler_cooperative_8cpp" startline="14">TaskList</references>
      </memberdef>
      <memberdef kind="function" id="_scheduler_cooperative_8cpp_1ac10e2415498c3aef7fb7b549547919ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SchedulerInit</definition>
        <argsstring>(void)</argsstring>
        <name>SchedulerInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SchedulerCooperative.cpp" line="37" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/SchedulerCooperative.cpp" bodystart="37" bodyend="39"/>
        <references refid="_scheduler_cooperative_8cpp_1a7b2d8f89598fb72e5ab86a30f0f22c5b" compoundref="_scheduler_cooperative_8cpp" startline="14">TaskList</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>scheduler<sp/>allows<sp/>for<sp/>tasks<sp/>to<sp/>be<sp/>called<sp/>at<sp/>regular<sp/>intervals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>does<sp/>not<sp/>use<sp/>interupts,<sp/>in<sp/>order<sp/>to<sp/>maintain<sp/>compatibility<sp/>with<sp/>libraries<sp/>that<sp/>do,<sp/>such<sp/>as<sp/>the<sp/>wire<sp/>library.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>functions<sp/>rely<sp/>on<sp/>the<sp/>millis()<sp/>function,<sp/>which<sp/>provides<sp/>the<sp/>number<sp/>of<sp/>ms<sp/>since<sp/>the<sp/>arduino<sp/>was<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>rolls<sp/>over<sp/>after<sp/>about<sp/>50<sp/>days,<sp/>but<sp/>this<sp/>should<sp/>have<sp/>no<sp/>affect<sp/>on<sp/>this<sp/>scheduler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>V1.0<sp/>31/7/2016<sp/>John<sp/>Semmens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_scheduler_cooperative_8h" kindref="compound">SchedulerCooperative.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nominate<sp/>a<sp/>maximum<sp/>number<sp/>of<sp/>tasks<sp/>to<sp/>be<sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="_scheduler_cooperative_8cpp_1ad9c7af17f5ddccf27be7d3225f9a1964" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="_scheduler_cooperative_8cpp_1ad9c7af17f5ddccf27be7d3225f9a1964" kindref="member">MaxNumberOfTasks</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>array<sp/>holding<sp/>the<sp/>times<sp/>in<sp/>ms<sp/>for<sp/>the<sp/>next<sp/>running<sp/>of<sp/>each<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="_scheduler_cooperative_8cpp_1a7b2d8f89598fb72e5ab86a30f0f22c5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="_scheduler_cooperative_8cpp_1a7b2d8f89598fb72e5ab86a30f0f22c5b" kindref="member">TaskList</ref>[<ref refid="_scheduler_cooperative_8cpp_1ad9c7af17f5ddccf27be7d3225f9a1964" kindref="member">MaxNumberOfTasks</ref>];</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>SchedulerTick<sp/>function<sp/>should<sp/>be<sp/>called<sp/>regularly<sp/>to<sp/>see<sp/>if<sp/>it<sp/>is<sp/>time<sp/>to<sp/>run<sp/>each<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>be<sp/>called<sp/>in<sp/>the<sp/>LOOP<sp/>for<sp/>each<sp/>Task<sp/>to<sp/>be<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="_scheduler_cooperative_8h_1acb78d8245c10c8a3008c0d4a225455e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_scheduler_cooperative_8cpp_1acd302cc94706fb5bd7868c537e79ec28" kindref="member">SchedulerTick</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TaskIndex,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*action)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>interval_ms)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TaskIndex:<sp/>index<sp/>to<sp/>Task/function<sp/>being<sp/>processed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>action:<sp/>task/function<sp/>name<sp/>to<sp/>be<sp/>run<sp/>if<sp/>its<sp/>time<sp/>to<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interval_ms:<sp/>task<sp/>running<sp/>interval<sp/>in<sp/>milliseconds.<sp/>e.g<sp/>1000<sp/>ms<sp/>is<sp/>the<sp/>interval<sp/>of<sp/>one<sp/>second.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>example:<sp/>SchedulerTick(0,&amp;loop_1s,1000);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentTime<sp/>&gt;<sp/><ref refid="_scheduler_cooperative_8cpp_1a7b2d8f89598fb72e5ab86a30f0f22c5b" kindref="member">TaskList</ref>[TaskIndex])</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_scheduler_cooperative_8cpp_1a7b2d8f89598fb72e5ab86a30f0f22c5b" kindref="member">TaskList</ref>[TaskIndex]<sp/>=<sp/>currentTime<sp/>+<sp/>interval_ms;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action(NULL);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>Task<sp/>time<sp/>array<sp/>to<sp/>zero.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>called<sp/>once<sp/>in<sp/>the<sp/>SETUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="_scheduler_cooperative_8h_1ac10e2415498c3aef7fb7b549547919ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_scheduler_cooperative_8cpp_1ac10e2415498c3aef7fb7b549547919ac" kindref="member">SchedulerInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="_scheduler_cooperative_8cpp_1a7b2d8f89598fb72e5ab86a30f0f22c5b" kindref="member">TaskList</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_scheduler_cooperative_8cpp_1a7b2d8f89598fb72e5ab86a30f0f22c5b" kindref="member">TaskList</ref>));</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/SchedulerCooperative.cpp"/>
  </compounddef>
</doxygen>
