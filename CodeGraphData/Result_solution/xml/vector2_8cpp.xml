<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="vector2_8cpp" kind="file">
    <compoundname>vector2.cpp</compoundname>
    <includes refid="vector2_8h" local="yes">vector2.h</includes>
    <includes refid="_a_p___math_8h" local="yes">AP_Math.h</includes>
    <incdepgraph>
      <node id="950">
        <label>D:/Cloud/OneDrive/Voyager/VoyagerOS/vector2.cpp</label>
        <link refid="vector2.cpp"/>
        <childnode refid="951" relation="include">
        </childnode>
        <childnode refid="954" relation="include">
        </childnode>
      </node>
      <node id="951">
        <label>vector2.h</label>
        <link refid="vector2_8h"/>
        <childnode refid="952" relation="include">
        </childnode>
        <childnode refid="953" relation="include">
        </childnode>
      </node>
      <node id="953">
        <label>stdint.h</label>
      </node>
      <node id="952">
        <label>math.h</label>
      </node>
      <node id="954">
        <label>AP_Math.h</label>
        <link refid="_a_p___math_8h"/>
        <childnode refid="955" relation="include">
        </childnode>
        <childnode refid="952" relation="include">
        </childnode>
        <childnode refid="953" relation="include">
        </childnode>
        <childnode refid="951" relation="include">
        </childnode>
      </node>
      <node id="956">
        <label>arduino.h</label>
      </node>
      <node id="955">
        <label>Misc.h</label>
        <link refid="_misc_8h"/>
        <childnode refid="956" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>vector3.cpp</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>Andrew<sp/>Tridgell<sp/>2012</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>along</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vector2_8h" kindref="compound">vector2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_p___math_8h" kindref="compound">AP_Math.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="24" refid="struct_vector2_1aa3fb4888aabfb97476cadbf0f0954107" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_1aa3fb4888aabfb97476cadbf0f0954107" kindref="member">Vector2&lt;T&gt;::length</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="25"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_a_p___math_8cpp_1afd3767d48a7b20f6d5220a4f8007af00" kindref="member">pythagorous2</ref>(x,<sp/>y);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dot<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="32" refid="struct_vector2_1a9e25e26dc47ede54ee2b49678aecdccf" refkind="member"><highlight class="normal">T<sp/><ref refid="struct_vector2_1a8f8c4696055343467132d30e63e53133" kindref="member">Vector2&lt;T&gt;::operator *</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>&amp;v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="33"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x*v.<ref refid="struct_vector2_1a78fa1f2ed5e261c7fbeb8f3536a1ee34" kindref="member">x</ref><sp/>+<sp/>y*v.<ref refid="struct_vector2_1a6cfed8355591aa269f4dba43bd806ef9" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cross<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="39" refid="struct_vector2_1a8bff04e728523673e801cba766a36340" refkind="member"><highlight class="normal">T<sp/><ref refid="struct_vector2_1a8bff04e728523673e801cba766a36340" kindref="member">Vector2&lt;T&gt;::operator %</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>&amp;v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="40"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x*v.<ref refid="struct_vector2_1a6cfed8355591aa269f4dba43bd806ef9" kindref="member">y</ref><sp/>-<sp/>y*v.<ref refid="struct_vector2_1a78fa1f2ed5e261c7fbeb8f3536a1ee34" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="45" refid="struct_vector2_1aa137a081895a38fb3fc9004ee8b3e9e6" refkind="member"><highlight class="normal"><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>&amp;<ref refid="struct_vector2_1aa137a081895a38fb3fc9004ee8b3e9e6" kindref="member">Vector2&lt;T&gt;::operator *=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>num)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>x*=num;<sp/>y*=num;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="52" refid="struct_vector2_1a6f1809eea0c00be8bcf13b84b11e1863" refkind="member"><highlight class="normal"><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>&amp;<ref refid="struct_vector2_1a6f1809eea0c00be8bcf13b84b11e1863" kindref="member">Vector2&lt;T&gt;::operator /=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>num)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>/=<sp/>num;<sp/>y<sp/>/=<sp/>num;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="59" refid="struct_vector2_1ad082d775fe10dcb8555316e1e1e90ca3" refkind="member"><highlight class="normal"><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>&amp;<ref refid="struct_vector2_1ad082d775fe10dcb8555316e1e1e90ca3" kindref="member">Vector2&lt;T&gt;::operator -=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>&amp;v)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>v.<ref refid="struct_vector2_1a78fa1f2ed5e261c7fbeb8f3536a1ee34" kindref="member">x</ref>;<sp/>y<sp/>-=<sp/>v.<ref refid="struct_vector2_1a6cfed8355591aa269f4dba43bd806ef9" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="66" refid="struct_vector2_1a621f53a54b59510fd0a535a809493573" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_1a621f53a54b59510fd0a535a809493573" kindref="member">Vector2&lt;T&gt;::is_nan</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="67"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isnan(x)<sp/>||<sp/>isnan(y);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="72" refid="struct_vector2_1ae673155db89ff79a1238470641f5c108" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_1ae673155db89ff79a1238470641f5c108" kindref="member">Vector2&lt;T&gt;::is_inf</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="73"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isinf(x)<sp/>||<sp/>isinf(y);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="78" refid="struct_vector2_1a57e0f40e5d38e326dd57da0c9d2775bb" refkind="member"><highlight class="normal"><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>&amp;<ref refid="struct_vector2_1a57e0f40e5d38e326dd57da0c9d2775bb" kindref="member">Vector2&lt;T&gt;::operator +=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>&amp;v)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>x+=v.<ref refid="struct_vector2_1a78fa1f2ed5e261c7fbeb8f3536a1ee34" kindref="member">x</ref>;<sp/>y+=v.<ref refid="struct_vector2_1a6cfed8355591aa269f4dba43bd806ef9" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="85" refid="struct_vector2_1a83351b02b216e8f203eb65de847b8cc5" refkind="member"><highlight class="normal"><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/><ref refid="struct_vector2_1a83351b02b216e8f203eb65de847b8cc5" kindref="member">Vector2&lt;T&gt;::operator /</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>num)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="86"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref>(x/num,<sp/>y/num);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="91" refid="struct_vector2_1a8f8c4696055343467132d30e63e53133" refkind="member"><highlight class="normal"><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/><ref refid="struct_vector2_1a8f8c4696055343467132d30e63e53133" kindref="member">Vector2&lt;T&gt;::operator *</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>num)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="92"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref>(x*num,<sp/>y*num);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="97" refid="struct_vector2_1a0876cb3cf0c05e2f92c24c9892e76076" refkind="member"><highlight class="normal"><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/><ref refid="struct_vector2_1ad07366013f058992e1d83abe3fe2356d" kindref="member">Vector2&lt;T&gt;::operator -</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>&amp;v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="98"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref>(x-v.<ref refid="struct_vector2_1a78fa1f2ed5e261c7fbeb8f3536a1ee34" kindref="member">x</ref>,<sp/>y-v.<ref refid="struct_vector2_1a6cfed8355591aa269f4dba43bd806ef9" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="103" refid="struct_vector2_1a594e6c112dcf84f37446b0c16ff38fe3" refkind="member"><highlight class="normal"><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/><ref refid="struct_vector2_1a594e6c112dcf84f37446b0c16ff38fe3" kindref="member">Vector2&lt;T&gt;::operator +</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>&amp;v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="104"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref>(x+v.<ref refid="struct_vector2_1a78fa1f2ed5e261c7fbeb8f3536a1ee34" kindref="member">x</ref>,<sp/>y+v.<ref refid="struct_vector2_1a6cfed8355591aa269f4dba43bd806ef9" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="109" refid="struct_vector2_1ad07366013f058992e1d83abe3fe2356d" refkind="member"><highlight class="normal"><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/><ref refid="struct_vector2_1ad07366013f058992e1d83abe3fe2356d" kindref="member">Vector2&lt;T&gt;::operator -</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="110"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref>(-x,-y);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="115" refid="struct_vector2_1a671b97043b72f4de1f3a899ff084431b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_1a671b97043b72f4de1f3a899ff084431b" kindref="member">Vector2&lt;T&gt;::operator ==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>&amp;v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="116"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x==v.<ref refid="struct_vector2_1a78fa1f2ed5e261c7fbeb8f3536a1ee34" kindref="member">x</ref><sp/>&amp;&amp;<sp/>y==v.<ref refid="struct_vector2_1a6cfed8355591aa269f4dba43bd806ef9" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="121" refid="struct_vector2_1a51db87f649eb5433d1aee76979192201" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_1a51db87f649eb5433d1aee76979192201" kindref="member">Vector2&lt;T&gt;::operator !=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>&amp;v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="122"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x!=v.<ref refid="struct_vector2_1a78fa1f2ed5e261c7fbeb8f3536a1ee34" kindref="member">x</ref><sp/>&amp;&amp;<sp/>y!=v.<ref refid="struct_vector2_1a6cfed8355591aa269f4dba43bd806ef9" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="127" refid="struct_vector2_1a62830d89ee7cd308a7d12caf352f1be9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_1a5309e5cd1d486cadaeae49d9ff476178" kindref="member">Vector2&lt;T&gt;::angle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>&amp;v2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="128"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>this-&gt;length()<sp/>*<sp/>v2.<ref refid="struct_vector2_1aa3fb4888aabfb97476cadbf0f0954107" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cosv<sp/>=<sp/>((*this)<sp/>*<sp/>v2)<sp/>/<sp/>len;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabsf(cosv)<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acosf(cosv);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>only<sp/>define<sp/>for<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_1aa3fb4888aabfb97476cadbf0f0954107" kindref="member">Vector2&lt;float&gt;::length</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_1a8f8c4696055343467132d30e63e53133" kindref="member">Vector2&lt;float&gt;::operator *</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/>&amp;v)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_1a8bff04e728523673e801cba766a36340" kindref="member">Vector2&lt;float&gt;::operator %</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/>&amp;v)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/>&amp;<ref refid="struct_vector2_1aa137a081895a38fb3fc9004ee8b3e9e6" kindref="member">Vector2&lt;float&gt;::operator *=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/>&amp;<ref refid="struct_vector2_1a6f1809eea0c00be8bcf13b84b11e1863" kindref="member">Vector2&lt;float&gt;::operator /=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/>&amp;<ref refid="struct_vector2_1ad082d775fe10dcb8555316e1e1e90ca3" kindref="member">Vector2&lt;float&gt;::operator -=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/>&amp;<ref refid="struct_vector2_1a57e0f40e5d38e326dd57da0c9d2775bb" kindref="member">Vector2&lt;float&gt;::operator +=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/><ref refid="struct_vector2_1a83351b02b216e8f203eb65de847b8cc5" kindref="member">Vector2&lt;float&gt;::operator /</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/><ref refid="struct_vector2_1a8f8c4696055343467132d30e63e53133" kindref="member">Vector2&lt;float&gt;::operator *</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/><ref refid="struct_vector2_1a594e6c112dcf84f37446b0c16ff38fe3" kindref="member">Vector2&lt;float&gt;::operator +</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/>&amp;v)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/><ref refid="struct_vector2_1ad07366013f058992e1d83abe3fe2356d" kindref="member">Vector2&lt;float&gt;::operator -</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/>&amp;v)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/><ref refid="struct_vector2_1ad07366013f058992e1d83abe3fe2356d" kindref="member">Vector2&lt;float&gt;::operator -</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_1a671b97043b72f4de1f3a899ff084431b" kindref="member">Vector2&lt;float&gt;::operator ==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/>&amp;v)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_1a51db87f649eb5433d1aee76979192201" kindref="member">Vector2&lt;float&gt;::operator !=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/>&amp;v)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_1a621f53a54b59510fd0a535a809493573" kindref="member">Vector2&lt;float&gt;::is_nan</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_1ae673155db89ff79a1238470641f5c108" kindref="member">Vector2&lt;float&gt;::is_inf</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_1a5309e5cd1d486cadaeae49d9ff476178" kindref="member">Vector2&lt;float&gt;::angle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2" kindref="compound">Vector2&lt;float&gt;</ref><sp/>&amp;v)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
    </programlisting>
    <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/vector2.cpp"/>
  </compounddef>
</doxygen>
