<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_adafruit___g_f_x_8cpp" kind="file">
    <compoundname>Adafruit_GFX.cpp</compoundname>
    <includes refid="_adafruit___g_f_x_8h" local="yes">Adafruit_GFX.h</includes>
    <includes local="no">C:/Program Files (x86)/Windows Kits/10/Include/10.0.10240.0/ucrt/inttypes.h</includes>
    <includes local="no">D:/Program Files (x86)/Arduino/hardware/tools/avr/avr/include/util/delay_basic.h</includes>
    <includes local="no">C:/Program Files (x86)/Windows Kits/10/Include/10.0.10240.0/ucrt/math.h</includes>
    <includes refid="glcdfont_8c" local="yes">glcdfont.c</includes>
    <incdepgraph>
      <node id="45">
        <label>Adafruit_GFX.h</label>
        <link refid="_adafruit___g_f_x_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>Print.h</label>
      </node>
      <node id="52">
        <label>glcdfont.c</label>
        <link refid="glcdfont_8c"/>
      </node>
      <node id="51">
        <label>C:/Program Files (x86)/Windows Kits/10/Include/10.0.10240.0/ucrt/math.h</label>
      </node>
      <node id="44">
        <label>D:/Cloud/OneDrive/Voyager/VoyagerOS/Adafruit_GFX.cpp</label>
        <link refid="Adafruit_GFX.cpp"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>C:/Program Files (x86)/Windows Kits/10/Include/10.0.10240.0/ucrt/inttypes.h</label>
      </node>
      <node id="50">
        <label>D:/Program Files (x86)/Arduino/hardware/tools/avr/avr/include/util/delay_basic.h</label>
      </node>
      <node id="46">
        <label>Arduino.h</label>
      </node>
      <node id="48">
        <label>gfxfont.h</label>
        <link refid="gfxfont_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_adafruit___g_f_x_8cpp_1a0d5d72a58654d35bb9c564263d1ede9a" prot="public" static="no">
        <name>pgm_read_pointer</name>
        <param><defname>addr</defname></param>
        <initializer>((void *)<ref refid="_8_voyager_o_s_8vsarduino_8h_1abb68859ac5dfa6a09ac048b4037a83b6" kindref="member">pgm_read_dword</ref>(addr))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Adafruit_GFX.cpp" line="60" column="10" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/Adafruit_GFX.cpp" bodystart="60" bodyend="-1"/>
        <referencedby refid="class_adafruit___g_f_x_1a21c19ed786f8291613d082e81ad4e3c4" compoundref="_adafruit___g_f_x_8cpp" startline="940" endline="996">Adafruit_GFX::charBounds</referencedby>
        <referencedby refid="class_adafruit___g_f_x_1ab7f5a29b3a3dffe30c6a3f4c1f604a5a" compoundref="_adafruit___g_f_x_8cpp" startline="710" endline="807">Adafruit_GFX::drawChar</referencedby>
        <referencedby refid="class_adafruit___g_f_x_1a8773d92cafa93d3f749fb55c535d8f2e" compoundref="_adafruit___g_f_x_8cpp" startline="810" endline="858">Adafruit_GFX::write</referencedby>
      </memberdef>
      <memberdef kind="define" id="_adafruit___g_f_x_8cpp_1a4e000513b9464b4b8a13b6ac95f87f80" prot="public" static="no">
        <name>_swap_int16_t</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>{ int16_t t = a; a = b; b = t; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Adafruit_GFX.cpp" line="70" column="9" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/Adafruit_GFX.cpp" bodystart="70" bodyend="-1"/>
        <referencedby refid="class_adafruit___g_f_x_1aa0ff662c2b2b48c3bac51f98c777776d" compoundref="_adafruit___g_f_x_8cpp" startline="202" endline="216">Adafruit_GFX::drawLine</referencedby>
        <referencedby refid="class_adafruit___g_f_x_1a4cd646a3d9c9d5b3ee50010d0aa387cd" compoundref="_adafruit___g_f_x_8cpp" startline="380" endline="458">Adafruit_GFX::fillTriangle</referencedby>
        <referencedby refid="class_adafruit___g_f_x_1ae1e5204b9251a04a57c821f69a8e638b" compoundref="_adafruit___g_f_x_8cpp" startline="88" endline="126">Adafruit_GFX::writeLine</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">This<sp/>is<sp/>the<sp/>core<sp/>graphics<sp/>library<sp/>for<sp/>all<sp/>our<sp/>displays,<sp/>providing<sp/>a<sp/>common</highlight></codeline>
<codeline lineno="3"><highlight class="comment">set<sp/>of<sp/>graphics<sp/>primitives<sp/>(points,<sp/>lines,<sp/>circles,<sp/>etc.).<sp/><sp/>It<sp/>needs<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="4"><highlight class="comment">paired<sp/>with<sp/>a<sp/>hardware-specific<sp/>library<sp/>for<sp/>each<sp/>display<sp/>device<sp/>we<sp/>carry</highlight></codeline>
<codeline lineno="5"><highlight class="comment">(to<sp/>handle<sp/>the<sp/>lower-level<sp/>functions).</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">Adafruit<sp/>invests<sp/>time<sp/>and<sp/>resources<sp/>providing<sp/>this<sp/>open<sp/>source<sp/>code,<sp/>please</highlight></codeline>
<codeline lineno="8"><highlight class="comment">support<sp/>Adafruit<sp/>&amp;<sp/>open-source<sp/>hardware<sp/>by<sp/>purchasing<sp/>products<sp/>from<sp/>Adafruit!</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">Copyright<sp/>(c)<sp/>2013<sp/>Adafruit<sp/>Industries.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment">-<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">-<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight></codeline>
<codeline lineno="21"><highlight class="comment">THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment">AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment">IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment">ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment">LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment">CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment">SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment">INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment">CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment">ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment">POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_adafruit___g_f_x_8h" kindref="compound">Adafruit_GFX.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glcdfont_8c" kindref="compound">glcdfont.c</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__AVR__</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;avr/pgmspace.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(ESP8266)<sp/>||<sp/>defined(ESP32)</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;pgmspace.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Many<sp/>(but<sp/>maybe<sp/>not<sp/>all)<sp/>non-AVR<sp/>board<sp/>installs<sp/>define<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>compatibility<sp/>with<sp/>existing<sp/>PROGMEM-reading<sp/>AVR<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Do<sp/>our<sp/>own<sp/>checks<sp/>and<sp/>defines<sp/>here<sp/>for<sp/>good<sp/>measure...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>pgm_read_byte</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#define<sp/>pgm_read_byte(addr)<sp/>(*(const<sp/>unsigned<sp/>char<sp/>*)(addr))</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>pgm_read_word</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#define<sp/>pgm_read_word(addr)<sp/>(*(const<sp/>unsigned<sp/>short<sp/>*)(addr))</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>pgm_read_dword</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#define<sp/>pgm_read_dword(addr)<sp/>(*(const<sp/>unsigned<sp/>long<sp/>*)(addr))</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pointers<sp/>are<sp/>a<sp/>peculiar<sp/>case...typically<sp/>16-bit<sp/>on<sp/>AVR<sp/>boards,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>32<sp/>bits<sp/>elsewhere.<sp/><sp/>Try<sp/>to<sp/>accommodate<sp/>both...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__INT_MAX__)<sp/>||<sp/>(__INT_MAX__<sp/>&gt;<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="60" refid="_adafruit___g_f_x_8cpp_1a0d5d72a58654d35bb9c564263d1ede9a" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#define<sp/>pgm_read_pointer(addr)<sp/>((void<sp/>*)pgm_read_dword(addr))</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#define<sp/>pgm_read_pointer(addr)<sp/>((void<sp/>*)pgm_read_word(addr))</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>min</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>min(a,b)<sp/>(((a)<sp/>&lt;<sp/>(b))<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_swap_int16_t</highlight></codeline>
<codeline lineno="70" refid="_adafruit___g_f_x_8cpp_1a4e000513b9464b4b8a13b6ac95f87f80" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_swap_int16_t(a,<sp/>b)<sp/>{<sp/>int16_t<sp/>t<sp/>=<sp/>a;<sp/>a<sp/>=<sp/>b;<sp/>b<sp/>=<sp/>t;<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_adafruit___g_f_x_1a6f6f1abccf677eac244fa17d105133ea" refkind="member"><highlight class="normal"><ref refid="class_adafruit___g_f_x_1a6f6f1abccf677eac244fa17d105133ea" kindref="member">Adafruit_GFX::Adafruit_GFX</ref>(int16_t<sp/>w,<sp/>int16_t<sp/>h):</highlight></codeline>
<codeline lineno="74"><highlight class="normal">WIDTH(w),<sp/>HEIGHT(h)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9bb0cbc2455f64dce2a5ec36307aa94" kindref="member">_height</ref><sp/><sp/><sp/>=<sp/><ref refid="class_adafruit___g_f_x_1a6b3665babcb73df381563016e9f71bdb" kindref="member">HEIGHT</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a37a479d28fb11906ce516e983b1af926" kindref="member">rotation</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aebe0a38f6e6fd59cb81620c4696286c9" kindref="member">cursor_y</ref><sp/><sp/>=<sp/><ref refid="class_adafruit___g_f_x_1a8f8983cea8d81a7c8e9d05eef36318e2" kindref="member">cursor_x</ref><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a8c6d23a386651136fd9530a5b7046591" kindref="member">textcolor</ref><sp/>=<sp/><ref refid="class_adafruit___g_f_x_1a23e7a4efcab0b1588dc0cafa14b1fac1" kindref="member">textbgcolor</ref><sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ad6bd603e01861212829d536312a7190b" kindref="member">wrap</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aaef3d4d239641084cd3825a8b1042e01" kindref="member">_cp437</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bresenham&apos;s<sp/>algorithm<sp/>-<sp/>thx<sp/>wikpedia</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_adafruit___g_f_x_1ae1e5204b9251a04a57c821f69a8e638b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1ae1e5204b9251a04a57c821f69a8e638b" kindref="member">Adafruit_GFX::writeLine</ref>(int16_t<sp/>x0,<sp/>int16_t<sp/>y0,<sp/>int16_t<sp/>x1,<sp/>int16_t<sp/>y1,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>steep<sp/>=<sp/>abs(y1<sp/>-<sp/>y0)<sp/>&gt;<sp/>abs(x1<sp/>-<sp/>x0);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(steep)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_adafruit___g_f_x_8cpp_1a4e000513b9464b4b8a13b6ac95f87f80" kindref="member">_swap_int16_t</ref>(x0,<sp/>y0);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_adafruit___g_f_x_8cpp_1a4e000513b9464b4b8a13b6ac95f87f80" kindref="member">_swap_int16_t</ref>(x1,<sp/>y1);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&gt;<sp/>x1)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_adafruit___g_f_x_8cpp_1a4e000513b9464b4b8a13b6ac95f87f80" kindref="member">_swap_int16_t</ref>(x0,<sp/>x1);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_adafruit___g_f_x_8cpp_1a4e000513b9464b4b8a13b6ac95f87f80" kindref="member">_swap_int16_t</ref>(y0,<sp/>y1);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>dx,<sp/>dy;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>x1<sp/>-<sp/>x0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>abs(y1<sp/>-<sp/>y0);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>err<sp/>=<sp/>dx<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>ystep;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>&lt;<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ystep<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ystep<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>x0&lt;=x1;<sp/>x0++)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(steep)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(y0,<sp/>x0,<sp/>color);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0,<sp/>y0,<sp/>color);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>-=<sp/>dy;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>+=<sp/>ystep;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>+=<sp/>dx;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">Adafruit_GFX::startWrite</ref>(){</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overwrite<sp/>in<sp/>subclasses<sp/>if<sp/>desired!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">Adafruit_GFX::writePixel</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/>uint16_t<sp/>color){</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overwrite<sp/>in<sp/>subclasses<sp/>if<sp/>startWrite<sp/>is<sp/>defined!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab7fbf72885c873266f9c7eb53b5c8896" kindref="member">drawPixel</ref>(x,<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(x,y)<sp/>is<sp/>topmost<sp/>point;<sp/>if<sp/>unsure,<sp/>calling<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>sort<sp/>endpoints<sp/>or<sp/>call<sp/>writeLine()<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="class_adafruit___g_f_x_1ae12d09670433af17e666a203b51715f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1ae12d09670433af17e666a203b51715f7" kindref="member">Adafruit_GFX::writeFastVLine</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>h,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overwrite<sp/>in<sp/>subclasses<sp/>if<sp/>startWrite<sp/>is<sp/>defined!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can<sp/>be<sp/>just<sp/>writeLine(x,<sp/>y,<sp/>x,<sp/>y+h-1,<sp/>color);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>writeFillRect(x,<sp/>y,<sp/>1,<sp/>h,<sp/>color);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a1cffbb1d69c5faf49cd0cff27686a837" kindref="member">drawFastVLine</ref>(x,<sp/>y,<sp/>h,<sp/>color);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(x,y)<sp/>is<sp/>leftmost<sp/>point;<sp/>if<sp/>unsure,<sp/>calling<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>sort<sp/>endpoints<sp/>or<sp/>call<sp/>writeLine()<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="class_adafruit___g_f_x_1ad85469e8be73f90932058fba1d4e5cbd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1ad85469e8be73f90932058fba1d4e5cbd" kindref="member">Adafruit_GFX::writeFastHLine</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>w,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overwrite<sp/>in<sp/>subclasses<sp/>if<sp/>startWrite<sp/>is<sp/>defined!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Example:<sp/>writeLine(x,<sp/>y,<sp/>x+w-1,<sp/>y,<sp/>color);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>writeFillRect(x,<sp/>y,<sp/>w,<sp/>1,<sp/>color);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a4d42e7cc577c1eb5b06fe656786c9c79" kindref="member">drawFastHLine</ref>(x,<sp/>y,<sp/>w,<sp/>color);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="class_adafruit___g_f_x_1a60133faeabc10f9d909674bc4c5aabc6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a60133faeabc10f9d909674bc4c5aabc6" kindref="member">Adafruit_GFX::writeFillRect</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/>int16_t<sp/>w,<sp/>int16_t<sp/>h,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overwrite<sp/>in<sp/>subclasses<sp/>if<sp/>desired!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa43cf1dfe6c17d040a0f1fd5ffbe9d69" kindref="member">fillRect</ref>(x,y,w,h,color);</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">Adafruit_GFX::endWrite</ref>(){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overwrite<sp/>in<sp/>subclasses<sp/>if<sp/>startWrite<sp/>is<sp/>defined!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(x,y)<sp/>is<sp/>topmost<sp/>point;<sp/>if<sp/>unsure,<sp/>calling<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>sort<sp/>endpoints<sp/>or<sp/>call<sp/>drawLine()<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="class_adafruit___g_f_x_1a1cffbb1d69c5faf49cd0cff27686a837" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a1cffbb1d69c5faf49cd0cff27686a837" kindref="member">Adafruit_GFX::drawFastVLine</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>h,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>in<sp/>subclasses<sp/>if<sp/>desired!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ae1e5204b9251a04a57c821f69a8e638b" kindref="member">writeLine</ref>(x,<sp/>y,<sp/>x,<sp/>y+h-1,<sp/>color);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(x,y)<sp/>is<sp/>leftmost<sp/>point;<sp/>if<sp/>unsure,<sp/>calling<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>sort<sp/>endpoints<sp/>or<sp/>call<sp/>drawLine()<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="class_adafruit___g_f_x_1a4d42e7cc577c1eb5b06fe656786c9c79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a4d42e7cc577c1eb5b06fe656786c9c79" kindref="member">Adafruit_GFX::drawFastHLine</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>w,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>in<sp/>subclasses<sp/>if<sp/>desired!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ae1e5204b9251a04a57c821f69a8e638b" kindref="member">writeLine</ref>(x,<sp/>y,<sp/>x+w-1,<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="class_adafruit___g_f_x_1aa43cf1dfe6c17d040a0f1fd5ffbe9d69" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1aa43cf1dfe6c17d040a0f1fd5ffbe9d69" kindref="member">Adafruit_GFX::fillRect</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/>int16_t<sp/>w,<sp/>int16_t<sp/>h,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>in<sp/>subclasses<sp/>if<sp/>desired!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int16_t<sp/>i=x;<sp/>i&lt;x+w;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ae12d09670433af17e666a203b51715f7" kindref="member">writeFastVLine</ref>(i,<sp/>y,<sp/>h,<sp/>color);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="class_adafruit___g_f_x_1a2b2730aaf2208990928f9c0f85558527" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a2b2730aaf2208990928f9c0f85558527" kindref="member">Adafruit_GFX::fillScreen</ref>(uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>in<sp/>subclasses<sp/>if<sp/>desired!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa43cf1dfe6c17d040a0f1fd5ffbe9d69" kindref="member">fillRect</ref>(0,<sp/>0,<sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref>,<sp/><ref refid="class_adafruit___g_f_x_1ab9bb0cbc2455f64dce2a5ec36307aa94" kindref="member">_height</ref>,<sp/>color);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="class_adafruit___g_f_x_1aa0ff662c2b2b48c3bac51f98c777776d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1aa0ff662c2b2b48c3bac51f98c777776d" kindref="member">Adafruit_GFX::drawLine</ref>(int16_t<sp/>x0,<sp/>int16_t<sp/>y0,<sp/>int16_t<sp/>x1,<sp/>int16_t<sp/>y1,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>in<sp/>subclasses<sp/>if<sp/>desired!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x0<sp/>==<sp/>x1){</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y0<sp/>&gt;<sp/>y1)<sp/><ref refid="_adafruit___g_f_x_8cpp_1a4e000513b9464b4b8a13b6ac95f87f80" kindref="member">_swap_int16_t</ref>(y0,<sp/>y1);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a1cffbb1d69c5faf49cd0cff27686a837" kindref="member">drawFastVLine</ref>(x0,<sp/>y0,<sp/>y1<sp/>-<sp/>y0<sp/>+<sp/>1,<sp/>color);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y0<sp/>==<sp/>y1){</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x0<sp/>&gt;<sp/>x1)<sp/><ref refid="_adafruit___g_f_x_8cpp_1a4e000513b9464b4b8a13b6ac95f87f80" kindref="member">_swap_int16_t</ref>(x0,<sp/>x1);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a4d42e7cc577c1eb5b06fe656786c9c79" kindref="member">drawFastHLine</ref>(x0,<sp/>y0,<sp/>x1<sp/>-<sp/>x0<sp/>+<sp/>1,<sp/>color);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ae1e5204b9251a04a57c821f69a8e638b" kindref="member">writeLine</ref>(x0,<sp/>y0,<sp/>x1,<sp/>y1,<sp/>color);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>circle<sp/>outline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="class_adafruit___g_f_x_1a648d2d6765e488b4556e802167d885fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a648d2d6765e488b4556e802167d885fb" kindref="member">Adafruit_GFX::drawCircle</ref>(int16_t<sp/>x0,<sp/>int16_t<sp/>y0,<sp/>int16_t<sp/>r,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>f<sp/>=<sp/>1<sp/>-<sp/>r;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>ddF_x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>ddF_y<sp/>=<sp/>-2<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>y<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/><sp/>,<sp/>y0+r,<sp/>color);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/><sp/>,<sp/>y0-r,<sp/>color);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0+r,<sp/>y0<sp/><sp/>,<sp/>color);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0-r,<sp/>y0<sp/><sp/>,<sp/>color);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(x&lt;y)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y--;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ddF_y<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>+=<sp/>ddF_y;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x++;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ddF_x<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>+=<sp/>ddF_x;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/>+<sp/>x,<sp/>y0<sp/>+<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/>-<sp/>x,<sp/>y0<sp/>+<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/>+<sp/>x,<sp/>y0<sp/>-<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/>-<sp/>x,<sp/>y0<sp/>-<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/>+<sp/>y,<sp/>y0<sp/>+<sp/>x,<sp/>color);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/>-<sp/>y,<sp/>y0<sp/>+<sp/>x,<sp/>color);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/>+<sp/>y,<sp/>y0<sp/>-<sp/>x,<sp/>color);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/>-<sp/>y,<sp/>y0<sp/>-<sp/>x,<sp/>color);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="class_adafruit___g_f_x_1a3f2dd7b698e7b95ebf9fecf992ff802e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a3f2dd7b698e7b95ebf9fecf992ff802e" kindref="member">Adafruit_GFX::drawCircleHelper</ref>(<sp/>int16_t<sp/>x0,<sp/>int16_t<sp/>y0,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>r,<sp/>uint8_t<sp/>cornername,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>f<sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>-<sp/>r;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>ddF_x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>ddF_y<sp/>=<sp/>-2<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>x<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>y<sp/><sp/><sp/><sp/><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(x&lt;y)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y--;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ddF_y<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/><sp/><sp/><sp/><sp/>+=<sp/>ddF_y;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x++;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ddF_x<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/><sp/><sp/><sp/><sp/>+=<sp/>ddF_x;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cornername<sp/>&amp;<sp/>0x4)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/>+<sp/>x,<sp/>y0<sp/>+<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/>+<sp/>y,<sp/>y0<sp/>+<sp/>x,<sp/>color);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cornername<sp/>&amp;<sp/>0x2)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/>+<sp/>x,<sp/>y0<sp/>-<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/>+<sp/>y,<sp/>y0<sp/>-<sp/>x,<sp/>color);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cornername<sp/>&amp;<sp/>0x8)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/>-<sp/>y,<sp/>y0<sp/>+<sp/>x,<sp/>color);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/>-<sp/>x,<sp/>y0<sp/>+<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cornername<sp/>&amp;<sp/>0x1)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/>-<sp/>y,<sp/>y0<sp/>-<sp/>x,<sp/>color);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x0<sp/>-<sp/>x,<sp/>y0<sp/>-<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="class_adafruit___g_f_x_1a623e031e58492fb41e9fde6a05d97c12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a623e031e58492fb41e9fde6a05d97c12" kindref="member">Adafruit_GFX::fillCircle</ref>(int16_t<sp/>x0,<sp/>int16_t<sp/>y0,<sp/>int16_t<sp/>r,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ae12d09670433af17e666a203b51715f7" kindref="member">writeFastVLine</ref>(x0,<sp/>y0-r,<sp/>2*r+1,<sp/>color);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a2242d3560b08c6480084152b6660052a" kindref="member">fillCircleHelper</ref>(x0,<sp/>y0,<sp/>r,<sp/>3,<sp/>0,<sp/>color);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>do<sp/>circles<sp/>and<sp/>roundrects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="class_adafruit___g_f_x_1a2242d3560b08c6480084152b6660052a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a2242d3560b08c6480084152b6660052a" kindref="member">Adafruit_GFX::fillCircleHelper</ref>(int16_t<sp/>x0,<sp/>int16_t<sp/>y0,<sp/>int16_t<sp/>r,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>cornername,<sp/>int16_t<sp/>delta,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>f<sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>-<sp/>r;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>ddF_x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>ddF_y<sp/>=<sp/>-2<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>x<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>y<sp/><sp/><sp/><sp/><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(x&lt;y)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y--;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ddF_y<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/><sp/><sp/><sp/><sp/>+=<sp/>ddF_y;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x++;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ddF_x<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/><sp/><sp/><sp/><sp/>+=<sp/>ddF_x;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cornername<sp/>&amp;<sp/>0x1)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ae12d09670433af17e666a203b51715f7" kindref="member">writeFastVLine</ref>(x0+x,<sp/>y0-y,<sp/>2*y+1+delta,<sp/>color);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ae12d09670433af17e666a203b51715f7" kindref="member">writeFastVLine</ref>(x0+y,<sp/>y0-x,<sp/>2*x+1+delta,<sp/>color);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cornername<sp/>&amp;<sp/>0x2)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ae12d09670433af17e666a203b51715f7" kindref="member">writeFastVLine</ref>(x0-x,<sp/>y0-y,<sp/>2*y+1+delta,<sp/>color);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ae12d09670433af17e666a203b51715f7" kindref="member">writeFastVLine</ref>(x0-y,<sp/>y0-x,<sp/>2*x+1+delta,<sp/>color);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="class_adafruit___g_f_x_1a9ec2c2ab426503e4f7deddb93bb916f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a9ec2c2ab426503e4f7deddb93bb916f6" kindref="member">Adafruit_GFX::drawRect</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/>int16_t<sp/>w,<sp/>int16_t<sp/>h,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ad85469e8be73f90932058fba1d4e5cbd" kindref="member">writeFastHLine</ref>(x,<sp/>y,<sp/>w,<sp/>color);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ad85469e8be73f90932058fba1d4e5cbd" kindref="member">writeFastHLine</ref>(x,<sp/>y+h-1,<sp/>w,<sp/>color);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ae12d09670433af17e666a203b51715f7" kindref="member">writeFastVLine</ref>(x,<sp/>y,<sp/>h,<sp/>color);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ae12d09670433af17e666a203b51715f7" kindref="member">writeFastVLine</ref>(x+w-1,<sp/>y,<sp/>h,<sp/>color);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>rounded<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="class_adafruit___g_f_x_1ab496b247abec724ef80e17a30257972b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1ab496b247abec724ef80e17a30257972b" kindref="member">Adafruit_GFX::drawRoundRect</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/>int16_t<sp/>w,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>h,<sp/>int16_t<sp/>r,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smarter<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ad85469e8be73f90932058fba1d4e5cbd" kindref="member">writeFastHLine</ref>(x+r<sp/><sp/>,<sp/>y<sp/><sp/><sp/><sp/>,<sp/>w-2*r,<sp/>color);<sp/></highlight><highlight class="comment">//<sp/>Top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ad85469e8be73f90932058fba1d4e5cbd" kindref="member">writeFastHLine</ref>(x+r<sp/><sp/>,<sp/>y+h-1,<sp/>w-2*r,<sp/>color);<sp/></highlight><highlight class="comment">//<sp/>Bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ae12d09670433af17e666a203b51715f7" kindref="member">writeFastVLine</ref>(x<sp/><sp/><sp/><sp/>,<sp/>y+r<sp/><sp/>,<sp/>h-2*r,<sp/>color);<sp/></highlight><highlight class="comment">//<sp/>Left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ae12d09670433af17e666a203b51715f7" kindref="member">writeFastVLine</ref>(x+w-1,<sp/>y+r<sp/><sp/>,<sp/>h-2*r,<sp/>color);<sp/></highlight><highlight class="comment">//<sp/>Right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>four<sp/>corners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a3f2dd7b698e7b95ebf9fecf992ff802e" kindref="member">drawCircleHelper</ref>(x+r<sp/><sp/><sp/><sp/>,<sp/>y+r<sp/><sp/><sp/><sp/>,<sp/>r,<sp/>1,<sp/>color);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a3f2dd7b698e7b95ebf9fecf992ff802e" kindref="member">drawCircleHelper</ref>(x+w-r-1,<sp/>y+r<sp/><sp/><sp/><sp/>,<sp/>r,<sp/>2,<sp/>color);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a3f2dd7b698e7b95ebf9fecf992ff802e" kindref="member">drawCircleHelper</ref>(x+w-r-1,<sp/>y+h-r-1,<sp/>r,<sp/>4,<sp/>color);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a3f2dd7b698e7b95ebf9fecf992ff802e" kindref="member">drawCircleHelper</ref>(x+r<sp/><sp/><sp/><sp/>,<sp/>y+h-r-1,<sp/>r,<sp/>8,<sp/>color);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fill<sp/>a<sp/>rounded<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="class_adafruit___g_f_x_1a78dc59f6a508bcd3d5ac7af957b8b1ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a78dc59f6a508bcd3d5ac7af957b8b1ac" kindref="member">Adafruit_GFX::fillRoundRect</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/>int16_t<sp/>w,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>h,<sp/>int16_t<sp/>r,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smarter<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a60133faeabc10f9d909674bc4c5aabc6" kindref="member">writeFillRect</ref>(x+r,<sp/>y,<sp/>w-2*r,<sp/>h,<sp/>color);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>four<sp/>corners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a2242d3560b08c6480084152b6660052a" kindref="member">fillCircleHelper</ref>(x+w-r-1,<sp/>y+r,<sp/>r,<sp/>1,<sp/>h-2*r-1,<sp/>color);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a2242d3560b08c6480084152b6660052a" kindref="member">fillCircleHelper</ref>(x+r<sp/><sp/><sp/><sp/>,<sp/>y+r,<sp/>r,<sp/>2,<sp/>h-2*r-1,<sp/>color);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>triangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="class_adafruit___g_f_x_1a49284b9cea16ecf8c15dfd0b51a841e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a49284b9cea16ecf8c15dfd0b51a841e6" kindref="member">Adafruit_GFX::drawTriangle</ref>(int16_t<sp/>x0,<sp/>int16_t<sp/>y0,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>x1,<sp/>int16_t<sp/>y1,<sp/>int16_t<sp/>x2,<sp/>int16_t<sp/>y2,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa0ff662c2b2b48c3bac51f98c777776d" kindref="member">drawLine</ref>(x0,<sp/>y0,<sp/>x1,<sp/>y1,<sp/>color);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa0ff662c2b2b48c3bac51f98c777776d" kindref="member">drawLine</ref>(x1,<sp/>y1,<sp/>x2,<sp/>y2,<sp/>color);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa0ff662c2b2b48c3bac51f98c777776d" kindref="member">drawLine</ref>(x2,<sp/>y2,<sp/>x0,<sp/>y0,<sp/>color);</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fill<sp/>a<sp/>triangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="class_adafruit___g_f_x_1a4cd646a3d9c9d5b3ee50010d0aa387cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a4cd646a3d9c9d5b3ee50010d0aa387cd" kindref="member">Adafruit_GFX::fillTriangle</ref>(int16_t<sp/>x0,<sp/>int16_t<sp/>y0,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>x1,<sp/>int16_t<sp/>y1,<sp/>int16_t<sp/>x2,<sp/>int16_t<sp/>y2,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>a,<sp/>b,<sp/>y,<sp/>last;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>coordinates<sp/>by<sp/>Y<sp/>order<sp/>(y2<sp/>&gt;=<sp/>y1<sp/>&gt;=<sp/>y0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>&gt;<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_adafruit___g_f_x_8cpp_1a4e000513b9464b4b8a13b6ac95f87f80" kindref="member">_swap_int16_t</ref>(y0,<sp/>y1);<sp/><ref refid="_adafruit___g_f_x_8cpp_1a4e000513b9464b4b8a13b6ac95f87f80" kindref="member">_swap_int16_t</ref>(x0,<sp/>x1);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>&gt;<sp/>y2)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_adafruit___g_f_x_8cpp_1a4e000513b9464b4b8a13b6ac95f87f80" kindref="member">_swap_int16_t</ref>(y2,<sp/>y1);<sp/><ref refid="_adafruit___g_f_x_8cpp_1a4e000513b9464b4b8a13b6ac95f87f80" kindref="member">_swap_int16_t</ref>(x2,<sp/>x1);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>&gt;<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_adafruit___g_f_x_8cpp_1a4e000513b9464b4b8a13b6ac95f87f80" kindref="member">_swap_int16_t</ref>(y0,<sp/>y1);<sp/><ref refid="_adafruit___g_f_x_8cpp_1a4e000513b9464b4b8a13b6ac95f87f80" kindref="member">_swap_int16_t</ref>(x0,<sp/>x1);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y0<sp/>==<sp/>y2)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>awkward<sp/>all-on-same-line<sp/>case<sp/>as<sp/>its<sp/>own<sp/>thing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>b<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x1<sp/>&lt;<sp/>a)<sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x1<sp/>&gt;<sp/>b)<sp/>b<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x2<sp/>&lt;<sp/>a)<sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>x2;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x2<sp/>&gt;<sp/>b)<sp/>b<sp/>=<sp/>x2;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ad85469e8be73f90932058fba1d4e5cbd" kindref="member">writeFastHLine</ref>(a,<sp/>y0,<sp/>b-a+1,<sp/>color);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>dx01<sp/>=<sp/>x1<sp/>-<sp/>x0,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>dy01<sp/>=<sp/>y1<sp/>-<sp/>y0,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>dx02<sp/>=<sp/>x2<sp/>-<sp/>x0,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>dy02<sp/>=<sp/>y2<sp/>-<sp/>y0,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>dx12<sp/>=<sp/>x2<sp/>-<sp/>x1,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>dy12<sp/>=<sp/>y2<sp/>-<sp/>y1;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>sa<sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>sb<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>upper<sp/>part<sp/>of<sp/>triangle,<sp/>find<sp/>scanline<sp/>crossings<sp/>for<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0-1<sp/>and<sp/>0-2.<sp/><sp/>If<sp/>y1=y2<sp/>(flat-bottomed<sp/>triangle),<sp/>the<sp/>scanline<sp/>y1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>included<sp/>here<sp/>(and<sp/>second<sp/>loop<sp/>will<sp/>be<sp/>skipped,<sp/>avoiding<sp/>a<sp/>/0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>there),<sp/>otherwise<sp/>scanline<sp/>y1<sp/>is<sp/>skipped<sp/>here<sp/>and<sp/>handled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>second<sp/>loop...which<sp/>also<sp/>avoids<sp/>a<sp/>/0<sp/>error<sp/>here<sp/>if<sp/>y0=y1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(flat-topped<sp/>triangle).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y1<sp/>==<sp/>y2)<sp/>last<sp/>=<sp/>y1;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Include<sp/>y1<sp/>scanline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>y1-1;<sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(y=y0;<sp/>y&lt;=last;<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/><sp/><sp/>=<sp/>x0<sp/>+<sp/>sa<sp/>/<sp/>dy01;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/><sp/><sp/>=<sp/>x0<sp/>+<sp/>sb<sp/>/<sp/>dy02;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa<sp/>+=<sp/>dx01;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb<sp/>+=<sp/>dx02;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>longhand:</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>x0<sp/>+<sp/>(x1<sp/>-<sp/>x0)<sp/>*<sp/>(y<sp/>-<sp/>y0)<sp/>/<sp/>(y1<sp/>-<sp/>y0);</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>x0<sp/>+<sp/>(x2<sp/>-<sp/>x0)<sp/>*<sp/>(y<sp/>-<sp/>y0)<sp/>/<sp/>(y2<sp/>-<sp/>y0);</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a<sp/>&gt;<sp/>b)<sp/><ref refid="_adafruit___g_f_x_8cpp_1a4e000513b9464b4b8a13b6ac95f87f80" kindref="member">_swap_int16_t</ref>(a,b);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ad85469e8be73f90932058fba1d4e5cbd" kindref="member">writeFastHLine</ref>(a,<sp/>y,<sp/>b-a+1,<sp/>color);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>lower<sp/>part<sp/>of<sp/>triangle,<sp/>find<sp/>scanline<sp/>crossings<sp/>for<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0-2<sp/>and<sp/>1-2.<sp/><sp/>This<sp/>loop<sp/>is<sp/>skipped<sp/>if<sp/>y1=y2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>sa<sp/>=<sp/>dx12<sp/>*<sp/>(y<sp/>-<sp/>y1);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>sb<sp/>=<sp/>dx02<sp/>*<sp/>(y<sp/>-<sp/>y0);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>y&lt;=y2;<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/><sp/><sp/>=<sp/>x1<sp/>+<sp/>sa<sp/>/<sp/>dy12;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/><sp/><sp/>=<sp/>x0<sp/>+<sp/>sb<sp/>/<sp/>dy02;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa<sp/>+=<sp/>dx12;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb<sp/>+=<sp/>dx02;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>longhand:</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>x1<sp/>+<sp/>(x2<sp/>-<sp/>x1)<sp/>*<sp/>(y<sp/>-<sp/>y1)<sp/>/<sp/>(y2<sp/>-<sp/>y1);</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>x0<sp/>+<sp/>(x2<sp/>-<sp/>x0)<sp/>*<sp/>(y<sp/>-<sp/>y0)<sp/>/<sp/>(y2<sp/>-<sp/>y0);</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a<sp/>&gt;<sp/>b)<sp/><ref refid="_adafruit___g_f_x_8cpp_1a4e000513b9464b4b8a13b6ac95f87f80" kindref="member">_swap_int16_t</ref>(a,b);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ad85469e8be73f90932058fba1d4e5cbd" kindref="member">writeFastHLine</ref>(a,<sp/>y,<sp/>b-a+1,<sp/>color);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BITMAP<sp/>/<sp/>XBITMAP<sp/>/<sp/>GRAYSCALE<sp/>/<sp/>RGB<sp/>BITMAP<sp/>FUNCTIONS<sp/>---------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>PROGMEM-resident<sp/>1-bit<sp/>image<sp/>at<sp/>the<sp/>specified<sp/>(x,y)<sp/>position,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>the<sp/>specified<sp/>foreground<sp/>color<sp/>(unset<sp/>bits<sp/>are<sp/>transparent).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="class_adafruit___g_f_x_1a805a15f1b3ea9eff5d1666b8e6db1c56" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a805a15f1b3ea9eff5d1666b8e6db1c56" kindref="member">Adafruit_GFX::drawBitmap</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>bitmap[],<sp/>int16_t<sp/>w,<sp/>int16_t<sp/>h,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>byteWidth<sp/>=<sp/>(w<sp/>+<sp/>7)<sp/>/<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>Bitmap<sp/>scanline<sp/>pad<sp/>=<sp/>whole<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>byte<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>j=0;<sp/>j&lt;h;<sp/>j++,<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>i=0;<sp/>i&lt;w;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&amp;<sp/>7)<sp/>byte<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;bitmap[j<sp/>*<sp/>byteWidth<sp/>+<sp/>i<sp/>/<sp/>8]);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(byte<sp/>&amp;<sp/>0x80)<sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x+i,<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>PROGMEM-resident<sp/>1-bit<sp/>image<sp/>at<sp/>the<sp/>specified<sp/>(x,y)<sp/>position,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>the<sp/>specified<sp/>foreground<sp/>(for<sp/>set<sp/>bits)<sp/>and<sp/>background<sp/>(unset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bits)<sp/>colors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="class_adafruit___g_f_x_1a0def482cb5ab6010cac6936de8e07188" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a805a15f1b3ea9eff5d1666b8e6db1c56" kindref="member">Adafruit_GFX::drawBitmap</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>bitmap[],<sp/>int16_t<sp/>w,<sp/>int16_t<sp/>h,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>uint16_t<sp/>color,<sp/>uint16_t<sp/>bg)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>byteWidth<sp/>=<sp/>(w<sp/>+<sp/>7)<sp/>/<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>Bitmap<sp/>scanline<sp/>pad<sp/>=<sp/>whole<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>byte<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>j=0;<sp/>j&lt;h;<sp/>j++,<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>i=0;<sp/>i&lt;w;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&amp;<sp/>7)<sp/>byte<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;bitmap[j<sp/>*<sp/>byteWidth<sp/>+<sp/>i<sp/>/<sp/>8]);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x+i,<sp/>y,<sp/>(byte<sp/>&amp;<sp/>0x80)<sp/>?<sp/>color<sp/>:<sp/>bg);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>RAM-resident<sp/>1-bit<sp/>image<sp/>at<sp/>the<sp/>specified<sp/>(x,y)<sp/>position,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>the<sp/>specified<sp/>foreground<sp/>color<sp/>(unset<sp/>bits<sp/>are<sp/>transparent).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="class_adafruit___g_f_x_1a957c2d2fc53e3121c5914a8bd9e5c3da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a805a15f1b3ea9eff5d1666b8e6db1c56" kindref="member">Adafruit_GFX::drawBitmap</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*bitmap,<sp/>int16_t<sp/>w,<sp/>int16_t<sp/>h,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>byteWidth<sp/>=<sp/>(w<sp/>+<sp/>7)<sp/>/<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>Bitmap<sp/>scanline<sp/>pad<sp/>=<sp/>whole<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>byte<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>j=0;<sp/>j&lt;h;<sp/>j++,<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>i=0;<sp/>i&lt;w;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&amp;<sp/>7)<sp/>byte<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/>=<sp/>bitmap[j<sp/>*<sp/>byteWidth<sp/>+<sp/>i<sp/>/<sp/>8];</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(byte<sp/>&amp;<sp/>0x80)<sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x+i,<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>RAM-resident<sp/>1-bit<sp/>image<sp/>at<sp/>the<sp/>specified<sp/>(x,y)<sp/>position,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>the<sp/>specified<sp/>foreground<sp/>(for<sp/>set<sp/>bits)<sp/>and<sp/>background<sp/>(unset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bits)<sp/>colors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="class_adafruit___g_f_x_1a25dfb7db5b7446406b9204c738f0885e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a805a15f1b3ea9eff5d1666b8e6db1c56" kindref="member">Adafruit_GFX::drawBitmap</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*bitmap,<sp/>int16_t<sp/>w,<sp/>int16_t<sp/>h,<sp/>uint16_t<sp/>color,<sp/>uint16_t<sp/>bg)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>byteWidth<sp/>=<sp/>(w<sp/>+<sp/>7)<sp/>/<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>Bitmap<sp/>scanline<sp/>pad<sp/>=<sp/>whole<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>byte<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>j=0;<sp/>j&lt;h;<sp/>j++,<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>i=0;<sp/>i&lt;w;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&amp;<sp/>7)<sp/>byte<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/>=<sp/>bitmap[j<sp/>*<sp/>byteWidth<sp/>+<sp/>i<sp/>/<sp/>8];</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x+i,<sp/>y,<sp/>(byte<sp/>&amp;<sp/>0x80)<sp/>?<sp/>color<sp/>:<sp/>bg);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>PROGMEM-resident<sp/>XBitMap<sp/>Files<sp/>(*.xbm),<sp/>exported<sp/>from<sp/>GIMP,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Usage:<sp/>Export<sp/>from<sp/>GIMP<sp/>to<sp/>*.xbm,<sp/>rename<sp/>*.xbm<sp/>to<sp/>*.c<sp/>and<sp/>open<sp/>in<sp/>editor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C<sp/>Array<sp/>can<sp/>be<sp/>directly<sp/>used<sp/>with<sp/>this<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>no<sp/>RAM-resident<sp/>version<sp/>of<sp/>this<sp/>function;<sp/>if<sp/>generating<sp/>bitmaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>RAM,<sp/>use<sp/>the<sp/>format<sp/>defined<sp/>by<sp/>drawBitmap()<sp/>and<sp/>call<sp/>that<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546" refid="class_adafruit___g_f_x_1aa7797117fef7d18592d352c14fa7d820" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1aa7797117fef7d18592d352c14fa7d820" kindref="member">Adafruit_GFX::drawXBitmap</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>bitmap[],<sp/>int16_t<sp/>w,<sp/>int16_t<sp/>h,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>byteWidth<sp/>=<sp/>(w<sp/>+<sp/>7)<sp/>/<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>Bitmap<sp/>scanline<sp/>pad<sp/>=<sp/>whole<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>byte<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>j=0;<sp/>j&lt;h;<sp/>j++,<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>i=0;<sp/>i&lt;w;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&amp;<sp/>7)<sp/>byte<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;bitmap[j<sp/>*<sp/>byteWidth<sp/>+<sp/>i<sp/>/<sp/>8]);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nearly<sp/>identical<sp/>to<sp/>drawBitmap(),<sp/>only<sp/>the<sp/>bit<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>reversed<sp/>here<sp/>(left-to-right<sp/>=<sp/>LSB<sp/>to<sp/>MSB):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(byte<sp/>&amp;<sp/>0x01)<sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x+i,<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>PROGMEM-resident<sp/>8-bit<sp/>image<sp/>(grayscale)<sp/>at<sp/>the<sp/>specified<sp/>(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pos.<sp/><sp/>Specifically<sp/>for<sp/>8-bit<sp/>display<sp/>devices<sp/>such<sp/>as<sp/>IS31FL3731;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="comment">//<sp/>no<sp/>color<sp/>reduction/expansion<sp/>is<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="class_adafruit___g_f_x_1af7f146631268e8940d9c44c64c69ab80" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1af7f146631268e8940d9c44c64c69ab80" kindref="member">Adafruit_GFX::drawGrayscaleBitmap</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>bitmap[],<sp/>int16_t<sp/>w,<sp/>int16_t<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>j=0;<sp/>j&lt;h;<sp/>j++,<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>i=0;<sp/>i&lt;w;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x+i,<sp/>y,<sp/>(uint8_t)<ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;bitmap[j<sp/>*<sp/>w<sp/>+<sp/>i]));</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>RAM-resident<sp/>8-bit<sp/>image<sp/>(grayscale)<sp/>at<sp/>the<sp/>specified<sp/>(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pos.<sp/><sp/>Specifically<sp/>for<sp/>8-bit<sp/>display<sp/>devices<sp/>such<sp/>as<sp/>IS31FL3731;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">//<sp/>no<sp/>color<sp/>reduction/expansion<sp/>is<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="class_adafruit___g_f_x_1a00b26b1e2ac05476fdbd44214001954d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1af7f146631268e8940d9c44c64c69ab80" kindref="member">Adafruit_GFX::drawGrayscaleBitmap</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*bitmap,<sp/>int16_t<sp/>w,<sp/>int16_t<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>j=0;<sp/>j&lt;h;<sp/>j++,<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>i=0;<sp/>i&lt;w;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x+i,<sp/>y,<sp/>bitmap[j<sp/>*<sp/>w<sp/>+<sp/>i]);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>PROGMEM-resident<sp/>8-bit<sp/>image<sp/>(grayscale)<sp/>with<sp/>a<sp/>1-bit<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(set<sp/>bits<sp/>=<sp/>opaque,<sp/>unset<sp/>bits<sp/>=<sp/>clear)<sp/>at<sp/>the<sp/>specified<sp/>(x,y)<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BOTH<sp/>buffers<sp/>(grayscale<sp/>and<sp/>mask)<sp/>must<sp/>be<sp/>PROGMEM-resident.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specifically<sp/>for<sp/>8-bit<sp/>display<sp/>devices<sp/>such<sp/>as<sp/>IS31FL3731;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">//<sp/>no<sp/>color<sp/>reduction/expansion<sp/>is<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="class_adafruit___g_f_x_1a880b422ce35d0e3956dcd00638a421e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1af7f146631268e8940d9c44c64c69ab80" kindref="member">Adafruit_GFX::drawGrayscaleBitmap</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>bitmap[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>mask[],</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>int16_t<sp/>w,<sp/>int16_t<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>bw<sp/><sp/><sp/>=<sp/>(w<sp/>+<sp/>7)<sp/>/<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>Bitmask<sp/>scanline<sp/>pad<sp/>=<sp/>whole<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>byte<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>j=0;<sp/>j&lt;h;<sp/>j++,<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>i=0;<sp/>i&lt;w;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&amp;<sp/>7)<sp/>byte<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;mask[j<sp/>*<sp/>bw<sp/>+<sp/>i<sp/>/<sp/>8]);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(byte<sp/>&amp;<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x+i,<sp/>y,<sp/>(uint8_t)<ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;bitmap[j<sp/>*<sp/>w<sp/>+<sp/>i]));</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>RAM-resident<sp/>8-bit<sp/>image<sp/>(grayscale)<sp/>with<sp/>a<sp/>1-bit<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(set<sp/>bits<sp/>=<sp/>opaque,<sp/>unset<sp/>bits<sp/>=<sp/>clear)<sp/>at<sp/>the<sp/>specified<sp/>(x,y)<sp/>pos.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BOTH<sp/>buffers<sp/>(grayscale<sp/>and<sp/>mask)<sp/>must<sp/>be<sp/>RAM-resident,<sp/>no<sp/>mix-and-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">//<sp/>match.<sp/><sp/>Specifically<sp/>for<sp/>8-bit<sp/>display<sp/>devices<sp/>such<sp/>as<sp/>IS31FL3731;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">//<sp/>no<sp/>color<sp/>reduction/expansion<sp/>is<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621" refid="class_adafruit___g_f_x_1a7543eee2c983daea5eb46a0c2db92692" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1af7f146631268e8940d9c44c64c69ab80" kindref="member">Adafruit_GFX::drawGrayscaleBitmap</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*bitmap,<sp/>uint8_t<sp/>*mask,<sp/>int16_t<sp/>w,<sp/>int16_t<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>bw<sp/><sp/><sp/>=<sp/>(w<sp/>+<sp/>7)<sp/>/<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>Bitmask<sp/>scanline<sp/>pad<sp/>=<sp/>whole<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>byte<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>j=0;<sp/>j&lt;h;<sp/>j++,<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>i=0;<sp/>i&lt;w;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&amp;<sp/>7)<sp/>byte<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/>=<sp/>mask[j<sp/>*<sp/>bw<sp/>+<sp/>i<sp/>/<sp/>8];</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(byte<sp/>&amp;<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x+i,<sp/>y,<sp/>bitmap[j<sp/>*<sp/>w<sp/>+<sp/>i]);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>PROGMEM-resident<sp/>16-bit<sp/>image<sp/>(RGB<sp/>5/6/5)<sp/>at<sp/>the<sp/>specified<sp/>(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">//<sp/>position.<sp/><sp/>For<sp/>16-bit<sp/>display<sp/>devices;<sp/>no<sp/>color<sp/>reduction<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640" refid="class_adafruit___g_f_x_1af90e317367f3ac6dae3aa46d549ca535" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1af90e317367f3ac6dae3aa46d549ca535" kindref="member">Adafruit_GFX::drawRGBBitmap</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>bitmap[],<sp/>int16_t<sp/>w,<sp/>int16_t<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>j=0;<sp/>j&lt;h;<sp/>j++,<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>i=0;<sp/>i&lt;w;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x+i,<sp/>y,<sp/><ref refid="_8_voyager_o_s_8vsarduino_8h_1a32d8ab354156f4b1ffdb77a275ba6223" kindref="member">pgm_read_word</ref>(&amp;bitmap[j<sp/>*<sp/>w<sp/>+<sp/>i]));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>RAM-resident<sp/>16-bit<sp/>image<sp/>(RGB<sp/>5/6/5)<sp/>at<sp/>the<sp/>specified<sp/>(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="comment">//<sp/>position.<sp/><sp/>For<sp/>16-bit<sp/>display<sp/>devices;<sp/>no<sp/>color<sp/>reduction<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="class_adafruit___g_f_x_1a70768127ee8548d2a3690440c1694169" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1af90e317367f3ac6dae3aa46d549ca535" kindref="member">Adafruit_GFX::drawRGBBitmap</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>uint16_t<sp/>*bitmap,<sp/>int16_t<sp/>w,<sp/>int16_t<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>j=0;<sp/>j&lt;h;<sp/>j++,<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>i=0;<sp/>i&lt;w;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x+i,<sp/>y,<sp/>bitmap[j<sp/>*<sp/>w<sp/>+<sp/>i]);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>PROGMEM-resident<sp/>16-bit<sp/>image<sp/>(RGB<sp/>5/6/5)<sp/>with<sp/>a<sp/>1-bit<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(set<sp/>bits<sp/>=<sp/>opaque,<sp/>unset<sp/>bits<sp/>=<sp/>clear)<sp/>at<sp/>the<sp/>specified<sp/>(x,y)<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BOTH<sp/>buffers<sp/>(color<sp/>and<sp/>mask)<sp/>must<sp/>be<sp/>PROGMEM-resident.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>16-bit<sp/>display<sp/>devices;<sp/>no<sp/>color<sp/>reduction<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="class_adafruit___g_f_x_1ad1d249d742f83ddc4c4f3867643d6eb0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1af90e317367f3ac6dae3aa46d549ca535" kindref="member">Adafruit_GFX::drawRGBBitmap</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>bitmap[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>mask[],</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>int16_t<sp/>w,<sp/>int16_t<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>bw<sp/><sp/><sp/>=<sp/>(w<sp/>+<sp/>7)<sp/>/<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>Bitmask<sp/>scanline<sp/>pad<sp/>=<sp/>whole<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>byte<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>j=0;<sp/>j&lt;h;<sp/>j++,<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>i=0;<sp/>i&lt;w;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&amp;<sp/>7)<sp/>byte<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;mask[j<sp/>*<sp/>bw<sp/>+<sp/>i<sp/>/<sp/>8]);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(byte<sp/>&amp;<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x+i,<sp/>y,<sp/><ref refid="_8_voyager_o_s_8vsarduino_8h_1a32d8ab354156f4b1ffdb77a275ba6223" kindref="member">pgm_read_word</ref>(&amp;bitmap[j<sp/>*<sp/>w<sp/>+<sp/>i]));</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>RAM-resident<sp/>16-bit<sp/>image<sp/>(RGB<sp/>5/6/5)<sp/>with<sp/>a<sp/>1-bit<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(set<sp/>bits<sp/>=<sp/>opaque,<sp/>unset<sp/>bits<sp/>=<sp/>clear)<sp/>at<sp/>the<sp/>specified<sp/>(x,y)<sp/>pos.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BOTH<sp/>buffers<sp/>(color<sp/>and<sp/>mask)<sp/>must<sp/>be<sp/>RAM-resident,<sp/>no<sp/>mix-and-match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>16-bit<sp/>display<sp/>devices;<sp/>no<sp/>color<sp/>reduction<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690" refid="class_adafruit___g_f_x_1aac6f64d394f8d3557aa6f613b4219866" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1af90e317367f3ac6dae3aa46d549ca535" kindref="member">Adafruit_GFX::drawRGBBitmap</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>uint16_t<sp/>*bitmap,<sp/>uint8_t<sp/>*mask,<sp/>int16_t<sp/>w,<sp/>int16_t<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>bw<sp/><sp/><sp/>=<sp/>(w<sp/>+<sp/>7)<sp/>/<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>Bitmask<sp/>scanline<sp/>pad<sp/>=<sp/>whole<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>byte<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>j=0;<sp/>j&lt;h;<sp/>j++,<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int16_t<sp/>i=0;<sp/>i&lt;w;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&amp;<sp/>7)<sp/>byte<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/>=<sp/>mask[j<sp/>*<sp/>bw<sp/>+<sp/>i<sp/>/<sp/>8];</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(byte<sp/>&amp;<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x+i,<sp/>y,<sp/>bitmap[j<sp/>*<sp/>w<sp/>+<sp/>i]);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEXT-<sp/>AND<sp/>CHARACTER-HANDLING<sp/>FUNCTIONS<sp/>----------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710" refid="class_adafruit___g_f_x_1ab7f5a29b3a3dffe30c6a3f4c1f604a5a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1ab7f5a29b3a3dffe30c6a3f4c1f604a5a" kindref="member">Adafruit_GFX::drawChar</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>uint16_t<sp/>color,<sp/>uint16_t<sp/>bg,<sp/>uint8_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>&apos;Classic&apos;<sp/>built-in<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((x<sp/>&gt;=<sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(y<sp/>&gt;=<sp/><ref refid="class_adafruit___g_f_x_1ab9bb0cbc2455f64dce2a5ec36307aa94" kindref="member">_height</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((x<sp/>+<sp/>6<sp/>*<sp/>size<sp/>-<sp/>1)<sp/>&lt;<sp/>0)<sp/>||<sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((y<sp/>+<sp/>8<sp/>*<sp/>size<sp/>-<sp/>1)<sp/>&lt;<sp/>0))<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_adafruit___g_f_x_1aaef3d4d239641084cd3825a8b1042e01" kindref="member">_cp437</ref><sp/>&amp;&amp;<sp/>(c<sp/>&gt;=<sp/>176))<sp/>c++;<sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>&apos;classic&apos;<sp/>charset<sp/>behavior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int8_t<sp/>i=0;<sp/>i&lt;5;<sp/>i++<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Char<sp/>bitmap<sp/>=<sp/>5<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>line<sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;font[c<sp/>*<sp/>5<sp/>+<sp/>i]);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int8_t<sp/>j=0;<sp/>j&lt;8;<sp/>j++,<sp/>line<sp/>&gt;&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(line<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x+i,<sp/>y+j,<sp/>color);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a60133faeabc10f9d909674bc4c5aabc6" kindref="member">writeFillRect</ref>(x+i*size,<sp/>y+j*size,<sp/>size,<sp/>size,<sp/>color);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bg<sp/>!=<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x+i,<sp/>y+j,<sp/>bg);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a60133faeabc10f9d909674bc4c5aabc6" kindref="member">writeFillRect</ref>(x+i*size,<sp/>y+j*size,<sp/>size,<sp/>size,<sp/>bg);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bg<sp/>!=<sp/>color)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>If<sp/>opaque,<sp/>draw<sp/>vertical<sp/>line<sp/>for<sp/>last<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>1)<sp/><ref refid="class_adafruit___g_f_x_1ae12d09670433af17e666a203b51715f7" kindref="member">writeFastVLine</ref>(x+5,<sp/>y,<sp/>8,<sp/>bg);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a60133faeabc10f9d909674bc4c5aabc6" kindref="member">writeFillRect</ref>(x+5*size,<sp/>y,<sp/>size,<sp/>8*size,<sp/>bg);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Custom<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Character<sp/>is<sp/>assumed<sp/>previously<sp/>filtered<sp/>by<sp/>write()<sp/>to<sp/>eliminate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>newlines,<sp/>returns,<sp/>non-printable<sp/>characters,<sp/>etc.<sp/><sp/>Calling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drawChar()<sp/>directly<sp/>with<sp/>&apos;bad&apos;<sp/>characters<sp/>of<sp/>font<sp/>may<sp/>cause<sp/>mayhem!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>-=<sp/>(uint8_t)<ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>-&gt;<ref refid="struct_g_f_xfont_1a8f7483c87a9208a6251d9ac354a33dbb" kindref="member">first</ref>);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_g_f_xglyph" kindref="compound">GFXglyph</ref><sp/>*glyph<sp/><sp/>=<sp/>&amp;(((<ref refid="struct_g_f_xglyph" kindref="compound">GFXglyph</ref><sp/>*)<ref refid="_adafruit___g_f_x_8cpp_1a0d5d72a58654d35bb9c564263d1ede9a" kindref="member">pgm_read_pointer</ref>(&amp;<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>-&gt;<ref refid="struct_g_f_xfont_1af63d88fa053c9a634e86eab7c96db290" kindref="member">glyph</ref>))[c]);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/>*bitmap<sp/>=<sp/>(uint8_t<sp/>*)<ref refid="_adafruit___g_f_x_8cpp_1a0d5d72a58654d35bb9c564263d1ede9a" kindref="member">pgm_read_pointer</ref>(&amp;<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>-&gt;<ref refid="struct_g_f_xfont_1a867b14d604450addbeaf62ae1e4799a7" kindref="member">bitmap</ref>);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>bo<sp/>=<sp/><ref refid="_8_voyager_o_s_8vsarduino_8h_1a32d8ab354156f4b1ffdb77a275ba6223" kindref="member">pgm_read_word</ref>(&amp;glyph-&gt;<ref refid="struct_g_f_xglyph_1a24d52036821c10af52a742a1d7fbd9b8" kindref="member">bitmapOffset</ref>);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/>w<sp/><sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;glyph-&gt;<ref refid="struct_g_f_xglyph_1a02bd34fd474af250b230f52cee75a6c1" kindref="member">width</ref>),</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/><sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;glyph-&gt;<ref refid="struct_g_f_xglyph_1a24cff650b78fc295dc46e1bfa9127bb7" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/><sp/><sp/>xo<sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;glyph-&gt;<ref refid="struct_g_f_xglyph_1ab030bd9aeb37509ccc94ae3dcec4de98" kindref="member">xOffset</ref>),</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yo<sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;glyph-&gt;<ref refid="struct_g_f_xglyph_1a96b2c0dbe314bf053cdc0d5c622e76a7" kindref="member">yOffset</ref>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/>xx,<sp/>yy,<sp/>bits<sp/>=<sp/>0,<sp/>bit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/><sp/>xo16<sp/>=<sp/>0,<sp/>yo16<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xo16<sp/>=<sp/>xo;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yo16<sp/>=<sp/>yo;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Todo:<sp/>Add<sp/>character<sp/>clipping<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>THERE<sp/>IS<sp/>NO<sp/>&apos;BACKGROUND&apos;<sp/>COLOR<sp/>OPTION<sp/>ON<sp/>CUSTOM<sp/>FONTS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>THIS<sp/>IS<sp/>ON<sp/>PURPOSE<sp/>AND<sp/>BY<sp/>DESIGN.<sp/><sp/>The<sp/>background<sp/>color<sp/>feature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>typically<sp/>been<sp/>used<sp/>with<sp/>the<sp/>&apos;classic&apos;<sp/>font<sp/>to<sp/>overwrite<sp/>old</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>screen<sp/>contents<sp/>with<sp/>new<sp/>data.<sp/><sp/>This<sp/>ONLY<sp/>works<sp/>because<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>characters<sp/>are<sp/>a<sp/>uniform<sp/>size;<sp/>it&apos;s<sp/>not<sp/>a<sp/>sensible<sp/>thing<sp/>to<sp/>do<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>proportionally-spaced<sp/>fonts<sp/>with<sp/>glyphs<sp/>of<sp/>varying<sp/>sizes<sp/>(and<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>overlap).<sp/><sp/>To<sp/>replace<sp/>previously-drawn<sp/>text<sp/>when<sp/>using<sp/>a<sp/>custom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font,<sp/>use<sp/>the<sp/>getTextBounds()<sp/>function<sp/>to<sp/>determine<sp/>the<sp/>smallest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rectangle<sp/>encompassing<sp/>a<sp/>string,<sp/>erase<sp/>the<sp/>area<sp/>with<sp/>fillRect(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>draw<sp/>new<sp/>text.<sp/><sp/>This<sp/>WILL<sp/>infortunately<sp/>&apos;blink&apos;<sp/>the<sp/>text,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>unavoidable.<sp/><sp/>Drawing<sp/>&apos;background&apos;<sp/>pixels<sp/>will<sp/>NOT<sp/>fix<sp/>this,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>creates<sp/>a<sp/>new<sp/>set<sp/>of<sp/>problems.<sp/><sp/>Have<sp/>an<sp/>idea<sp/>to<sp/>work<sp/>around</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>(a<sp/>canvas<sp/>object<sp/>type<sp/>for<sp/>MCUs<sp/>that<sp/>can<sp/>afford<sp/>the<sp/>RAM<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>displays<sp/>supporting<sp/>setAddrWindow()<sp/>and<sp/>pushColors()),<sp/>but<sp/>haven&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>implemented<sp/>this<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aa991435d3d38f6818fc93f9370c0b3e5" kindref="member">startWrite</ref>();</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(yy=0;<sp/>yy&lt;h;<sp/>yy++)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(xx=0;<sp/>xx&lt;w;<sp/>xx++)<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(bit++<sp/>&amp;<sp/>7))<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;bitmap[bo++]);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits<sp/>&amp;<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab66a1577ec595a254e4492d641b36fd8" kindref="member">writePixel</ref>(x+xo+xx,<sp/>y+yo+yy,<sp/>color);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a60133faeabc10f9d909674bc4c5aabc6" kindref="member">writeFillRect</ref>(x+(xo16+xx)*size,<sp/>y+(yo16+yy)*size,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size,<sp/>size,<sp/>color);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9be8787f3683151e86c1f3b5c8685d6" kindref="member">endWrite</ref>();</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>classic<sp/>vs<sp/>custom<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ARDUINO<sp/>&gt;=<sp/>100</highlight></codeline>
<codeline lineno="810" refid="class_adafruit___g_f_x_1a8773d92cafa93d3f749fb55c535d8f2e" refkind="member"><highlight class="preprocessor"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a8773d92cafa93d3f749fb55c535d8f2e" kindref="member">Adafruit_GFX::write</ref>(uint8_t<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="812"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a8773d92cafa93d3f749fb55c535d8f2e" kindref="member">Adafruit_GFX::write</ref>(uint8_t<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="814"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>&apos;Classic&apos;<sp/>built-in<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Newline?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a8f8983cea8d81a7c8e9d05eef36318e2" kindref="member">cursor_x</ref><sp/><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>x<sp/>to<sp/>zero,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aebe0a38f6e6fd59cb81620c4696286c9" kindref="member">cursor_y</ref><sp/>+=<sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref><sp/>*<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>y<sp/>one<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>carriage<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_adafruit___g_f_x_1ad6bd603e01861212829d536312a7190b" kindref="member">wrap</ref><sp/>&amp;&amp;<sp/>((<ref refid="class_adafruit___g_f_x_1a8f8983cea8d81a7c8e9d05eef36318e2" kindref="member">cursor_x</ref><sp/>+<sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref><sp/>*<sp/>6)<sp/>&gt;<sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref>))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Off<sp/>right?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a8f8983cea8d81a7c8e9d05eef36318e2" kindref="member">cursor_x</ref><sp/><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>x<sp/>to<sp/>zero,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aebe0a38f6e6fd59cb81620c4696286c9" kindref="member">cursor_y</ref><sp/>+=<sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref><sp/>*<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>y<sp/>one<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab7f5a29b3a3dffe30c6a3f4c1f604a5a" kindref="member">drawChar</ref>(<ref refid="class_adafruit___g_f_x_1a8f8983cea8d81a7c8e9d05eef36318e2" kindref="member">cursor_x</ref>,<sp/><ref refid="class_adafruit___g_f_x_1aebe0a38f6e6fd59cb81620c4696286c9" kindref="member">cursor_y</ref>,<sp/>c,<sp/><ref refid="class_adafruit___g_f_x_1a8c6d23a386651136fd9530a5b7046591" kindref="member">textcolor</ref>,<sp/><ref refid="class_adafruit___g_f_x_1a23e7a4efcab0b1588dc0cafa14b1fac1" kindref="member">textbgcolor</ref>,<sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref>);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a8f8983cea8d81a7c8e9d05eef36318e2" kindref="member">cursor_x</ref><sp/>+=<sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref><sp/>*<sp/>6;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Advance<sp/>x<sp/>one<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Custom<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a8f8983cea8d81a7c8e9d05eef36318e2" kindref="member">cursor_x</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aebe0a38f6e6fd59cb81620c4696286c9" kindref="member">cursor_y</ref><sp/>+=<sp/>(int16_t)<ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref><sp/>*</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)<ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>-&gt;<ref refid="struct_g_f_xfont_1ac2c2f0184b810a562be808fbb98822fa" kindref="member">yAdvance</ref>);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>first<sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>-&gt;<ref refid="struct_g_f_xfont_1a8f7483c87a9208a6251d9ac354a33dbb" kindref="member">first</ref>);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((c<sp/>&gt;=<sp/>first)<sp/>&amp;&amp;<sp/>(c<sp/>&lt;=<sp/>(uint8_t)<ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>-&gt;<ref refid="struct_g_f_xfont_1a2d2ef5e8e2984dc65a7820e2906855b2" kindref="member">last</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_g_f_xglyph" kindref="compound">GFXglyph</ref><sp/>*glyph<sp/>=<sp/>&amp;(((<ref refid="struct_g_f_xglyph" kindref="compound">GFXglyph</ref><sp/>*)<ref refid="_adafruit___g_f_x_8cpp_1a0d5d72a58654d35bb9c564263d1ede9a" kindref="member">pgm_read_pointer</ref>(</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>-&gt;<ref refid="struct_g_f_xfont_1af63d88fa053c9a634e86eab7c96db290" kindref="member">glyph</ref>))[c<sp/>-<sp/>first]);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/>w<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;glyph-&gt;<ref refid="struct_g_f_xglyph_1a02bd34fd474af250b230f52cee75a6c1" kindref="member">width</ref>),</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;glyph-&gt;<ref refid="struct_g_f_xglyph_1a24cff650b78fc295dc46e1bfa9127bb7" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((w<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(h<sp/>&gt;<sp/>0))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Is<sp/>there<sp/>an<sp/>associated<sp/>bitmap?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>xo<sp/>=<sp/>(int8_t)<ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;glyph-&gt;<ref refid="struct_g_f_xglyph_1ab030bd9aeb37509ccc94ae3dcec4de98" kindref="member">xOffset</ref>);<sp/></highlight><highlight class="comment">//<sp/>sic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_adafruit___g_f_x_1ad6bd603e01861212829d536312a7190b" kindref="member">wrap</ref><sp/>&amp;&amp;<sp/>((<ref refid="class_adafruit___g_f_x_1a8f8983cea8d81a7c8e9d05eef36318e2" kindref="member">cursor_x</ref><sp/>+<sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref><sp/>*<sp/>(xo<sp/>+<sp/>w))<sp/>&gt;<sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref>))<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a8f8983cea8d81a7c8e9d05eef36318e2" kindref="member">cursor_x</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aebe0a38f6e6fd59cb81620c4696286c9" kindref="member">cursor_y</ref><sp/>+=<sp/>(int16_t)<ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref><sp/>*</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)<ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>-&gt;<ref refid="struct_g_f_xfont_1ac2c2f0184b810a562be808fbb98822fa" kindref="member">yAdvance</ref>);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab7f5a29b3a3dffe30c6a3f4c1f604a5a" kindref="member">drawChar</ref>(<ref refid="class_adafruit___g_f_x_1a8f8983cea8d81a7c8e9d05eef36318e2" kindref="member">cursor_x</ref>,<sp/><ref refid="class_adafruit___g_f_x_1aebe0a38f6e6fd59cb81620c4696286c9" kindref="member">cursor_y</ref>,<sp/>c,<sp/><ref refid="class_adafruit___g_f_x_1a8c6d23a386651136fd9530a5b7046591" kindref="member">textcolor</ref>,<sp/><ref refid="class_adafruit___g_f_x_1a23e7a4efcab0b1588dc0cafa14b1fac1" kindref="member">textbgcolor</ref>,<sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref>);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a8f8983cea8d81a7c8e9d05eef36318e2" kindref="member">cursor_x</ref><sp/>+=<sp/>(uint8_t)<ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;glyph-&gt;<ref refid="struct_g_f_xglyph_1a9b191040252aa9b5362087d65366bbf2" kindref="member">xAdvance</ref>)<sp/>*<sp/>(int16_t)<ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref>;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ARDUINO<sp/>&gt;=<sp/>100</highlight></codeline>
<codeline lineno="856"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="858"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860" refid="class_adafruit___g_f_x_1aaf96a40cad0f34dd8ec73494b3866c33" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1aaf96a40cad0f34dd8ec73494b3866c33" kindref="member">Adafruit_GFX::setCursor</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a8f8983cea8d81a7c8e9d05eef36318e2" kindref="member">cursor_x</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aebe0a38f6e6fd59cb81620c4696286c9" kindref="member">cursor_y</ref><sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865" refid="class_adafruit___g_f_x_1a0423f175d3ac47e28beae1dc593bc24f" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_adafruit___g_f_x_1a0423f175d3ac47e28beae1dc593bc24f" kindref="member">Adafruit_GFX::getCursorX</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a8f8983cea8d81a7c8e9d05eef36318e2" kindref="member">cursor_x</ref>;</highlight></codeline>
<codeline lineno="867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869" refid="class_adafruit___g_f_x_1a34a63c8c32a8c57f77c9efb50db1c20b" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_adafruit___g_f_x_1a34a63c8c32a8c57f77c9efb50db1c20b" kindref="member">Adafruit_GFX::getCursorY</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1aebe0a38f6e6fd59cb81620c4696286c9" kindref="member">cursor_y</ref>;</highlight></codeline>
<codeline lineno="871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873" refid="class_adafruit___g_f_x_1a39eb4a8a2c9fa4ab7d58ceffd19535d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a39eb4a8a2c9fa4ab7d58ceffd19535d5" kindref="member">Adafruit_GFX::setTextSize</ref>(uint8_t<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref><sp/>=<sp/>(s<sp/>&gt;<sp/>0)<sp/>?<sp/>s<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877" refid="class_adafruit___g_f_x_1a59178a0e0c845a14a39b457c43567dd9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a59178a0e0c845a14a39b457c43567dd9" kindref="member">Adafruit_GFX::setTextColor</ref>(uint16_t<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>&apos;transparent&apos;<sp/>background,<sp/>we&apos;ll<sp/>set<sp/>the<sp/>bg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>same<sp/>as<sp/>fg<sp/>instead<sp/>of<sp/>using<sp/>a<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a8c6d23a386651136fd9530a5b7046591" kindref="member">textcolor</ref><sp/>=<sp/><ref refid="class_adafruit___g_f_x_1a23e7a4efcab0b1588dc0cafa14b1fac1" kindref="member">textbgcolor</ref><sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883" refid="class_adafruit___g_f_x_1ab6e88c585d3ab6b4f95199361f224fc6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a59178a0e0c845a14a39b457c43567dd9" kindref="member">Adafruit_GFX::setTextColor</ref>(uint16_t<sp/>c,<sp/>uint16_t<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a8c6d23a386651136fd9530a5b7046591" kindref="member">textcolor</ref><sp/><sp/><sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a23e7a4efcab0b1588dc0cafa14b1fac1" kindref="member">textbgcolor</ref><sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888" refid="class_adafruit___g_f_x_1aeeacd62bf26f3e7abbdc4b5b50faa6fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1aeeacd62bf26f3e7abbdc4b5b50faa6fa" kindref="member">Adafruit_GFX::setTextWrap</ref>(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ad6bd603e01861212829d536312a7190b" kindref="member">wrap</ref><sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892" refid="class_adafruit___g_f_x_1a1956ad03632c73f25b4d8d240a40d7c9" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_adafruit___g_f_x_1a1956ad03632c73f25b4d8d240a40d7c9" kindref="member">Adafruit_GFX::getRotation</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a37a479d28fb11906ce516e983b1af926" kindref="member">rotation</ref>;</highlight></codeline>
<codeline lineno="894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896" refid="class_adafruit___g_f_x_1a6ac337c49876cee23ed062a928724675" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a6ac337c49876cee23ed062a928724675" kindref="member">Adafruit_GFX::setRotation</ref>(uint8_t<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a37a479d28fb11906ce516e983b1af926" kindref="member">rotation</ref><sp/>=<sp/>(x<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_adafruit___g_f_x_1a37a479d28fb11906ce516e983b1af926" kindref="member">rotation</ref>)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref><sp/><sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref>;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9bb0cbc2455f64dce2a5ec36307aa94" kindref="member">_height</ref><sp/>=<sp/><ref refid="class_adafruit___g_f_x_1a6b3665babcb73df381563016e9f71bdb" kindref="member">HEIGHT</ref>;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref><sp/><sp/>=<sp/><ref refid="class_adafruit___g_f_x_1a6b3665babcb73df381563016e9f71bdb" kindref="member">HEIGHT</ref>;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1ab9bb0cbc2455f64dce2a5ec36307aa94" kindref="member">_height</ref><sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref>;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Enable<sp/>(or<sp/>disable)<sp/>Code<sp/>Page<sp/>437-compatible<sp/>charset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>was<sp/>an<sp/>error<sp/>in<sp/>glcdfont.c<sp/>for<sp/>the<sp/>longest<sp/>time<sp/>--<sp/>one<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(#176,<sp/>the<sp/>&apos;light<sp/>shade&apos;<sp/>block)<sp/>was<sp/>missing<sp/>--<sp/>this<sp/>threw<sp/>off<sp/>the<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>every<sp/>character<sp/>that<sp/>followed<sp/>it.<sp/><sp/>But<sp/>a<sp/>TON<sp/>of<sp/>code<sp/>has<sp/>been<sp/>written</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>erroneous<sp/>character<sp/>indices.<sp/><sp/>By<sp/>default,<sp/>the<sp/>library<sp/>uses<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="comment">//<sp/>original<sp/>&apos;wrong&apos;<sp/>behavior<sp/>and<sp/>old<sp/>sketches<sp/>will<sp/>still<sp/>work.<sp/><sp/>Pass<sp/>&apos;true&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>this<sp/>function<sp/>to<sp/>use<sp/>correct<sp/>CP437<sp/>character<sp/>values<sp/>in<sp/>your<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919" refid="class_adafruit___g_f_x_1a6d447fe274e3f0ff12f12afa538d0afe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a6d447fe274e3f0ff12f12afa538d0afe" kindref="member">Adafruit_GFX::cp437</ref>(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aaef3d4d239641084cd3825a8b1042e01" kindref="member">_cp437</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923" refid="class_adafruit___g_f_x_1ab0479a2bb4e09e7c39c35e35c55d6ed1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1ab0479a2bb4e09e7c39c35e35c55d6ed1" kindref="member">Adafruit_GFX::setFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_f_xfont" kindref="compound">GFXfont</ref><sp/>*f)<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Font<sp/>struct<sp/>pointer<sp/>passed<sp/>in?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>And<sp/>no<sp/>current<sp/>font<sp/>struct?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switching<sp/>from<sp/>classic<sp/>to<sp/>new<sp/>font<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>cursor<sp/>pos<sp/>down<sp/>6<sp/>pixels<sp/>so<sp/>it&apos;s<sp/>on<sp/>baseline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aebe0a38f6e6fd59cb81620c4696286c9" kindref="member">cursor_y</ref><sp/>+=<sp/>6;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>passed.<sp/><sp/>Current<sp/>font<sp/>struct<sp/>defined?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switching<sp/>from<sp/>new<sp/>to<sp/>classic<sp/>font<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>cursor<sp/>pos<sp/>up<sp/>6<sp/>pixels<sp/>so<sp/>it&apos;s<sp/>at<sp/>top-left<sp/>of<sp/>char.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1aebe0a38f6e6fd59cb81620c4696286c9" kindref="member">cursor_y</ref><sp/>-=<sp/>6;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref><sp/>=<sp/>(<ref refid="struct_g_f_xfont" kindref="compound">GFXfont</ref><sp/>*)f;</highlight></codeline>
<codeline lineno="936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Broke<sp/>this<sp/>out<sp/>as<sp/>it&apos;s<sp/>used<sp/>by<sp/>both<sp/>the<sp/>PROGMEM-<sp/>and<sp/>RAM-resident</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="comment">//<sp/>getTextBounds()<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940" refid="class_adafruit___g_f_x_1a21c19ed786f8291613d082e81ad4e3c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a21c19ed786f8291613d082e81ad4e3c4" kindref="member">Adafruit_GFX::charBounds</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/>int16_t<sp/>*x,<sp/>int16_t<sp/>*y,</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>int16_t<sp/>*minx,<sp/>int16_t<sp/>*miny,<sp/>int16_t<sp/>*maxx,<sp/>int16_t<sp/>*maxy)<sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>)<sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Newline?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/><sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>x<sp/>to<sp/>zero,<sp/>advance<sp/>y<sp/>by<sp/>one<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/>+=<sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref><sp/>*<sp/>(uint8_t)<ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>-&gt;<ref refid="struct_g_f_xfont_1ac2c2f0184b810a562be808fbb98822fa" kindref="member">yAdvance</ref>);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>a<sp/>carriage<sp/>return;<sp/>is<sp/>normal<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>first<sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>-&gt;<ref refid="struct_g_f_xfont_1a8f7483c87a9208a6251d9ac354a33dbb" kindref="member">first</ref>),</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/><sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>-&gt;<ref refid="struct_g_f_xfont_1a2d2ef5e8e2984dc65a7820e2906855b2" kindref="member">last</ref>);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((c<sp/>&gt;=<sp/>first)<sp/>&amp;&amp;<sp/>(c<sp/>&lt;=<sp/>last))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Char<sp/>present<sp/>in<sp/>this<sp/>font?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_g_f_xglyph" kindref="compound">GFXglyph</ref><sp/>*glyph<sp/>=<sp/>&amp;(((<ref refid="struct_g_f_xglyph" kindref="compound">GFXglyph</ref><sp/>*)<ref refid="_adafruit___g_f_x_8cpp_1a0d5d72a58654d35bb9c564263d1ede9a" kindref="member">pgm_read_pointer</ref>(</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>-&gt;<ref refid="struct_g_f_xfont_1af63d88fa053c9a634e86eab7c96db290" kindref="member">glyph</ref>))[c<sp/>-<sp/>first]);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>gw<sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;glyph-&gt;<ref refid="struct_g_f_xglyph_1a02bd34fd474af250b230f52cee75a6c1" kindref="member">width</ref>),</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gh<sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;glyph-&gt;<ref refid="struct_g_f_xglyph_1a24cff650b78fc295dc46e1bfa9127bb7" kindref="member">height</ref>),</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;glyph-&gt;<ref refid="struct_g_f_xglyph_1a9b191040252aa9b5362087d65366bbf2" kindref="member">xAdvance</ref>);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/><sp/>xo<sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;glyph-&gt;<ref refid="struct_g_f_xglyph_1ab030bd9aeb37509ccc94ae3dcec4de98" kindref="member">xOffset</ref>),</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yo<sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;glyph-&gt;<ref refid="struct_g_f_xglyph_1a96b2c0dbe314bf053cdc0d5c622e76a7" kindref="member">yOffset</ref>);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_adafruit___g_f_x_1ad6bd603e01861212829d536312a7190b" kindref="member">wrap</ref><sp/>&amp;&amp;<sp/>((*x+(((int16_t)xo+gw)*<ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref>))<sp/>&gt;<sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref>))<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>x<sp/>to<sp/>zero,<sp/>advance<sp/>y<sp/>by<sp/>one<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/>+=<sp/>textsize<sp/>*<sp/>(uint8_t)<ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;<ref refid="class_adafruit___g_f_x_1afeb94c3253f43dada05e1270e322fa06" kindref="member">gfxFont</ref>-&gt;<ref refid="struct_g_f_xfont_1ac2c2f0184b810a562be808fbb98822fa" kindref="member">yAdvance</ref>);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>ts<sp/>=<sp/>(int16_t)textsize,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>*x<sp/>+<sp/>xo<sp/>*<sp/>ts,</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>*y<sp/>+<sp/>yo<sp/>*<sp/>ts,</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>x1<sp/>+<sp/>gw<sp/>*<sp/>ts<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>y1<sp/>+<sp/>gh<sp/>*<sp/>ts<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x1<sp/>&lt;<sp/>*minx)<sp/>*minx<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y1<sp/>&lt;<sp/>*miny)<sp/>*miny<sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x2<sp/>&gt;<sp/>*maxx)<sp/>*maxx<sp/>=<sp/>x2;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y2<sp/>&gt;<sp/>*maxy)<sp/>*maxy<sp/>=<sp/>y2;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>+=<sp/>xa<sp/>*<sp/>ts;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Default<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Newline?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>x<sp/>to<sp/>zero,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/>+=<sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref><sp/>*<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>y<sp/>one<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>min/max<sp/>x/y<sp/>unchaged<sp/>--<sp/>that<sp/>waits<sp/>for<sp/>next<sp/>&apos;normal&apos;<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Normal<sp/>char;<sp/>ignore<sp/>carriage<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_adafruit___g_f_x_1ad6bd603e01861212829d536312a7190b" kindref="member">wrap</ref><sp/>&amp;&amp;<sp/>((*x<sp/>+<sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref><sp/>*<sp/>6)<sp/>&gt;<sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref>))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Off<sp/>right?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>x<sp/>to<sp/>zero,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/>+=<sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref><sp/>*<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>y<sp/>one<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x2<sp/>=<sp/>*x<sp/>+<sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref><sp/>*<sp/>6<sp/>-<sp/>1,<sp/></highlight><highlight class="comment">//<sp/>Lower-right<sp/>pixel<sp/>of<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>*y<sp/>+<sp/>textsize<sp/>*<sp/>8<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x2<sp/>&gt;<sp/>*maxx)<sp/>*maxx<sp/>=<sp/>x2;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>max<sp/>x,<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y2<sp/>&gt;<sp/>*maxy)<sp/>*maxy<sp/>=<sp/>y2;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*x<sp/>&lt;<sp/>*minx)<sp/>*minx<sp/>=<sp/>*x;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>min<sp/>x,<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*y<sp/>&lt;<sp/>*miny)<sp/>*miny<sp/>=<sp/>*y;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>+=<sp/>textsize<sp/>*<sp/>6;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Advance<sp/>x<sp/>one<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal">}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pass<sp/>string<sp/>and<sp/>a<sp/>cursor<sp/>position,<sp/>returns<sp/>UL<sp/>corner<sp/>and<sp/>W,H.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999" refid="class_adafruit___g_f_x_1ae423f4ae1a64f33c006df18502b3f606" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1ae423f4ae1a64f33c006df18502b3f606" kindref="member">Adafruit_GFX::getTextBounds</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/>int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>*x1,<sp/>int16_t<sp/>*y1,<sp/>uint16_t<sp/>*w,<sp/>uint16_t<sp/>*h)<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>c;<sp/></highlight><highlight class="comment">//<sp/>Current<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>*x1<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>*y1<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>*w<sp/><sp/>=<sp/>*h<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>minx<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref>,<sp/>miny<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab9bb0cbc2455f64dce2a5ec36307aa94" kindref="member">_height</ref>,<sp/>maxx<sp/>=<sp/>-1,<sp/>maxy<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((c<sp/>=<sp/>*str++))</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a21c19ed786f8291613d082e81ad4e3c4" kindref="member">charBounds</ref>(c,<sp/>&amp;x,<sp/>&amp;y,<sp/>&amp;minx,<sp/>&amp;miny,<sp/>&amp;maxx,<sp/>&amp;maxy);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(maxx<sp/>&gt;=<sp/>minx)<sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x1<sp/>=<sp/>minx;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*w<sp/><sp/>=<sp/>maxx<sp/>-<sp/>minx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(maxy<sp/>&gt;=<sp/>miny)<sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y1<sp/>=<sp/>miny;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*h<sp/><sp/>=<sp/>maxy<sp/>-<sp/>miny<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Same<sp/>as<sp/>above,<sp/>but<sp/>for<sp/>PROGMEM<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023" refid="class_adafruit___g_f_x_1a97525abb71dbe38c6551e4d0da4052b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1ae423f4ae1a64f33c006df18502b3f606" kindref="member">Adafruit_GFX::getTextBounds</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*str,</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/>int16_t<sp/>*x1,<sp/>int16_t<sp/>*y1,<sp/>uint16_t<sp/>*w,<sp/>uint16_t<sp/>*h)<sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*s<sp/>=<sp/>(uint8_t<sp/>*)str,<sp/>c;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>*x1<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>*y1<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>*w<sp/><sp/>=<sp/>*h<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>minx<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref>,<sp/>miny<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab9bb0cbc2455f64dce2a5ec36307aa94" kindref="member">_height</ref>,<sp/>maxx<sp/>=<sp/>-1,<sp/>maxy<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((c<sp/>=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(s++)))</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_adafruit___g_f_x_1a21c19ed786f8291613d082e81ad4e3c4" kindref="member">charBounds</ref>(c,<sp/>&amp;x,<sp/>&amp;y,<sp/>&amp;minx,<sp/>&amp;miny,<sp/>&amp;maxx,<sp/>&amp;maxy);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(maxx<sp/>&gt;=<sp/>minx)<sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x1<sp/>=<sp/>minx;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*w<sp/><sp/>=<sp/>maxx<sp/>-<sp/>minx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(maxy<sp/>&gt;=<sp/>miny)<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y1<sp/>=<sp/>miny;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*h<sp/><sp/>=<sp/>maxy<sp/>-<sp/>miny<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>size<sp/>of<sp/>the<sp/>display<sp/>(per<sp/>current<sp/>rotation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047" refid="class_adafruit___g_f_x_1a32dadc6651cedc5e6426322c8a922cd6" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_adafruit___g_f_x_1a32dadc6651cedc5e6426322c8a922cd6" kindref="member">Adafruit_GFX::width</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref>;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051" refid="class_adafruit___g_f_x_1ac3dea6208d543a50f89b8e81bcaf9f09" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_adafruit___g_f_x_1ac3dea6208d543a50f89b8e81bcaf9f09" kindref="member">Adafruit_GFX::height</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1ab9bb0cbc2455f64dce2a5ec36307aa94" kindref="member">_height</ref>;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055" refid="class_adafruit___g_f_x_1a2fa315803f39a5e73b1841874daf0483" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x_1a2fa315803f39a5e73b1841874daf0483" kindref="member">Adafruit_GFX::invertDisplay</ref>(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>nothing,<sp/>must<sp/>be<sp/>subclassed<sp/>if<sp/>supported<sp/>by<sp/>hardware</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight><highlight class="comment">//<sp/>code<sp/>for<sp/>the<sp/>GFX<sp/>button<sp/>UI<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062" refid="class_adafruit___g_f_x___button_1a2232fef797e2d21f931eeda59d790d09" refkind="member"><highlight class="normal"><ref refid="class_adafruit___g_f_x___button_1a2232fef797e2d21f931eeda59d790d09" kindref="member">Adafruit_GFX_Button::Adafruit_GFX_Button</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>_gfx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Classic<sp/>initButton()<sp/>function:<sp/>pass<sp/>center<sp/>&amp;<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067" refid="class_adafruit___g_f_x___button_1a0cb6999a324b9999a1f4b610e36b16b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x___button_1a0cb6999a324b9999a1f4b610e36b16b6" kindref="member">Adafruit_GFX_Button::initButton</ref>(</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x" kindref="compound">Adafruit_GFX</ref><sp/>*gfx,<sp/>int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/>uint16_t<sp/>w,<sp/>uint16_t<sp/>h,</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/>uint16_t<sp/>outline,<sp/>uint16_t<sp/>fill,<sp/>uint16_t<sp/><ref refid="class_adafruit___g_f_x_1a8c6d23a386651136fd9530a5b7046591" kindref="member">textcolor</ref>,</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*label,<sp/>uint8_t<sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref>)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tweak<sp/>arguments<sp/>and<sp/>pass<sp/>to<sp/>the<sp/>newer<sp/>initButtonUL()<sp/>function...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>initButtonUL(gfx,<sp/>x<sp/>-<sp/>(w<sp/>/<sp/>2),<sp/>y<sp/>-<sp/>(h<sp/>/<sp/>2),<sp/>w,<sp/>h,<sp/>outline,<sp/>fill,</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>textcolor,<sp/>label,<sp/>textsize);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Newer<sp/>function<sp/>instead<sp/>accepts<sp/>upper-left<sp/>corner<sp/>&amp;<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078" refid="class_adafruit___g_f_x___button_1a471d43fc4fb575b2868190d1ec832af7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x___button_1a471d43fc4fb575b2868190d1ec832af7" kindref="member">Adafruit_GFX_Button::initButtonUL</ref>(</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x" kindref="compound">Adafruit_GFX</ref><sp/>*gfx,<sp/>int16_t<sp/>x1,<sp/>int16_t<sp/>y1,<sp/>uint16_t<sp/>w,<sp/>uint16_t<sp/>h,</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/>uint16_t<sp/>outline,<sp/>uint16_t<sp/>fill,<sp/>uint16_t<sp/><ref refid="class_adafruit___g_f_x_1a8c6d23a386651136fd9530a5b7046591" kindref="member">textcolor</ref>,</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*label,<sp/>uint8_t<sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref>)</highlight></codeline>
<codeline lineno="1082"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/>_x1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/>_y1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/>_w<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>_h<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/>_outlinecolor<sp/>=<sp/>outline;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/>_fillcolor<sp/><sp/><sp/><sp/>=<sp/>fill;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>_textcolor<sp/><sp/><sp/><sp/>=<sp/><ref refid="class_adafruit___g_f_x_1a8c6d23a386651136fd9530a5b7046591" kindref="member">textcolor</ref>;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>_textsize<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ac293848b8fe8c46107d1a491f6a5168d" kindref="member">textsize</ref>;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>_gfx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>gfx;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/>strncpy(_label,<sp/>label,<sp/>9);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095" refid="class_adafruit___g_f_x___button_1a1d9329970f085c5111e239be90005371" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x___button_1a1d9329970f085c5111e239be90005371" kindref="member">Adafruit_GFX_Button::drawButton</ref>(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>inverted)<sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>uint16_t<sp/>fill,<sp/>outline,<sp/>text;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!inverted)<sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>fill<sp/><sp/><sp/><sp/>=<sp/>_fillcolor;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>outline<sp/>=<sp/>_outlinecolor;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>text<sp/><sp/><sp/><sp/>=<sp/>_textcolor;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>fill<sp/><sp/><sp/><sp/>=<sp/>_textcolor;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>outline<sp/>=<sp/>_outlinecolor;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>text<sp/><sp/><sp/><sp/>=<sp/>_fillcolor;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/>uint8_t<sp/>r<sp/>=<sp/><ref refid="_a_p___math_8h_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(_w,<sp/>_h)<sp/>/<sp/>4;<sp/></highlight><highlight class="comment">//<sp/>Corner<sp/>radius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/>_gfx-&gt;fillRoundRect(_x1,<sp/>_y1,<sp/>_w,<sp/>_h,<sp/>r,<sp/>fill);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>_gfx-&gt;drawRoundRect(_x1,<sp/>_y1,<sp/>_w,<sp/>_h,<sp/>r,<sp/>outline);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>_gfx-&gt;setCursor(_x1<sp/>+<sp/>(_w/2)<sp/>-<sp/>(strlen(_label)<sp/>*<sp/>3<sp/>*<sp/>_textsize),</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>_y1<sp/>+<sp/>(_h/2)<sp/>-<sp/>(4<sp/>*<sp/>_textsize));</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>_gfx-&gt;setTextColor(text);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>_gfx-&gt;setTextSize(_textsize);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/>_gfx-&gt;print(_label);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119" refid="class_adafruit___g_f_x___button_1aa5fb594cf6f9cd4c1815a7c1011b5830" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x___button_1aa5fb594cf6f9cd4c1815a7c1011b5830" kindref="member">Adafruit_GFX_Button::contains</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((x<sp/>&gt;=<sp/>_x1)<sp/>&amp;&amp;<sp/>(x<sp/>&lt;<sp/>(_x1<sp/>+<sp/>_w))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(y<sp/>&gt;=<sp/>_y1)<sp/>&amp;&amp;<sp/>(y<sp/>&lt;<sp/>(_y1<sp/>+<sp/>_h)));</highlight></codeline>
<codeline lineno="1122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124" refid="class_adafruit___g_f_x___button_1a221d9753f7d8e8f7f9c1ebbee69d02bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x___button_1a221d9753f7d8e8f7f9c1ebbee69d02bd" kindref="member">Adafruit_GFX_Button::press</ref>(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/>laststate<sp/>=<sp/>currstate;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>currstate<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129" refid="class_adafruit___g_f_x___button_1a1faefaf249e868786a416bc097e2cf07" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x___button_1a1faefaf249e868786a416bc097e2cf07" kindref="member">Adafruit_GFX_Button::isPressed</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currstate;<sp/>}</highlight></codeline>
<codeline lineno="1130" refid="class_adafruit___g_f_x___button_1a41bcfc81edaf30a11d171a69e7e7c679" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x___button_1a41bcfc81edaf30a11d171a69e7e7c679" kindref="member">Adafruit_GFX_Button::justPressed</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(currstate<sp/>&amp;&amp;<sp/>!laststate);<sp/>}</highlight></codeline>
<codeline lineno="1131" refid="class_adafruit___g_f_x___button_1a8a139332b95997168ba0da37973d2887" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___g_f_x___button_1a8a139332b95997168ba0da37973d2887" kindref="member">Adafruit_GFX_Button::justReleased</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(!currstate<sp/>&amp;&amp;<sp/>laststate);<sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GFXcanvas1,<sp/>GFXcanvas8<sp/>and<sp/>GFXcanvas16<sp/>(currently<sp/>a<sp/>WIP,<sp/>don&apos;t<sp/>get<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>comfy<sp/>with<sp/>the<sp/>implementation)<sp/>provide<sp/>1-,<sp/>8-<sp/>and<sp/>16-bit<sp/>offscreen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>canvases,<sp/>the<sp/>address<sp/>of<sp/>which<sp/>can<sp/>be<sp/>passed<sp/>to<sp/>drawBitmap()<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pushColors()<sp/>(the<sp/>latter<sp/>appears<sp/>only<sp/>in<sp/>a<sp/>couple<sp/>of<sp/>GFX-subclassed<sp/>TFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>libraries<sp/>at<sp/>this<sp/>time).<sp/><sp/>This<sp/>is<sp/>here<sp/>mostly<sp/>to<sp/>help<sp/>with<sp/>the<sp/>recently-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>added<sp/>proportionally-spaced<sp/>fonts;<sp/>adds<sp/>a<sp/>way<sp/>to<sp/>refresh<sp/>a<sp/>section<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>screen<sp/>without<sp/>a<sp/>massive<sp/>flickering<sp/>clear-and-redraw...but<sp/>maybe<sp/>you&apos;ll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>find<sp/>other<sp/>uses<sp/>too.<sp/><sp/>VERY<sp/>RAM-intensive,<sp/>since<sp/>the<sp/>buffer<sp/>is<sp/>in<sp/>MCU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>memory<sp/>and<sp/>not<sp/>the<sp/>display<sp/>driver...GXFcanvas1<sp/>might<sp/>be<sp/>minimally<sp/>useful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>on<sp/>an<sp/>Uno-class<sp/>board,<sp/>but<sp/>this<sp/>and<sp/>the<sp/>others<sp/>are<sp/>much<sp/>more<sp/>likely<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>require<sp/>at<sp/>least<sp/>a<sp/>Mega<sp/>or<sp/>various<sp/>recent<sp/>ARM-type<sp/>boards<sp/>(recommended,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>the<sp/>text+bitmap<sp/>draw<sp/>can<sp/>be<sp/>pokey).<sp/><sp/>GFXcanvas1<sp/>requires<sp/>1<sp/>bit<sp/>per</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pixel<sp/>(rounded<sp/>up<sp/>to<sp/>nearest<sp/>byte<sp/>per<sp/>scanline),<sp/>GFXcanvas8<sp/>is<sp/>1<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>per<sp/>pixel<sp/>(no<sp/>scanline<sp/>pad),<sp/>and<sp/>GFXcanvas16<sp/>uses<sp/>2<sp/>bytes<sp/>per<sp/>pixel<sp/>(no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>scanline<sp/>pad).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOT<sp/>EXTENSIVELY<sp/>TESTED<sp/>YET.<sp/><sp/>MAY<sp/>CONTAIN<sp/>WORST<sp/>BUGS<sp/>KNOWN<sp/>TO<sp/>HUMANKIND.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152" refid="class_g_f_xcanvas1_1a3d8047501178f976fb6af095572eb5d0" refkind="member"><highlight class="normal"><ref refid="class_g_f_xcanvas1_1a3d8047501178f976fb6af095572eb5d0" kindref="member">GFXcanvas1::GFXcanvas1</ref>(uint16_t<sp/>w,<sp/>uint16_t<sp/>h)<sp/>:<sp/><ref refid="class_adafruit___g_f_x" kindref="compound">Adafruit_GFX</ref>(w,<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>bytes<sp/>=<sp/>((w<sp/>+<sp/>7)<sp/>/<sp/>8)<sp/>*<sp/>h;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="class_g_f_xcanvas1_1aec1b5879f2dd91b7a13da12fe48ae5e7" kindref="member">buffer</ref><sp/>=<sp/>(uint8_t<sp/>*)malloc(bytes)))<sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="class_g_f_xcanvas1_1aec1b5879f2dd91b7a13da12fe48ae5e7" kindref="member">buffer</ref>,<sp/>0,<sp/>bytes);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159" refid="class_g_f_xcanvas1_1a5c6dad65db4c9a99544f3b5bad4c86e8" refkind="member"><highlight class="normal"><ref refid="class_g_f_xcanvas1_1a5c6dad65db4c9a99544f3b5bad4c86e8" kindref="member">GFXcanvas1::~GFXcanvas1</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_g_f_xcanvas1_1aec1b5879f2dd91b7a13da12fe48ae5e7" kindref="member">buffer</ref>)<sp/>free(<ref refid="class_g_f_xcanvas1_1aec1b5879f2dd91b7a13da12fe48ae5e7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163" refid="class_g_f_xcanvas1_1a008d7c6d8db9f641cef9d345959f732b" refkind="member"><highlight class="normal">uint8_t*<sp/><ref refid="class_g_f_xcanvas1_1a008d7c6d8db9f641cef9d345959f732b" kindref="member">GFXcanvas1::getBuffer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_g_f_xcanvas1_1aec1b5879f2dd91b7a13da12fe48ae5e7" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167" refid="class_g_f_xcanvas1_1a0859d124c8dcaa147ef22a54d6e843a8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_g_f_xcanvas1_1a0859d124c8dcaa147ef22a54d6e843a8" kindref="member">GFXcanvas1::drawPixel</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__AVR__</highlight></codeline>
<codeline lineno="1169"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bitmask<sp/>tables<sp/>of<sp/>0x80&gt;&gt;X<sp/>and<sp/>~(0x80&gt;&gt;X),<sp/>because<sp/>X&gt;&gt;Y<sp/>is<sp/>slow<sp/>on<sp/>AVR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="glcdfont_8c_1a75acaba9e781937468d0911423bc0c35" kindref="member">PROGMEM</ref></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GFXsetBit[]<sp/>=<sp/>{<sp/>0x80,<sp/>0x40,<sp/>0x20,<sp/>0x10,<sp/>0x08,<sp/>0x04,<sp/>0x02,<sp/>0x01<sp/>},</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GFXclrBit[]<sp/>=<sp/>{<sp/>0x7F,<sp/>0xBF,<sp/>0xDF,<sp/>0xEF,<sp/>0xF7,<sp/>0xFB,<sp/>0xFD,<sp/>0xFE<sp/>};</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1174"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_g_f_xcanvas1_1aec1b5879f2dd91b7a13da12fe48ae5e7" kindref="member">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((x<sp/>&lt;<sp/>0)<sp/>||<sp/>(y<sp/>&lt;<sp/>0)<sp/>||<sp/>(x<sp/>&gt;=<sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref>)<sp/>||<sp/>(y<sp/>&gt;=<sp/><ref refid="class_adafruit___g_f_x_1ab9bb0cbc2455f64dce2a5ec36307aa94" kindref="member">_height</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>t;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_adafruit___g_f_x_1a37a479d28fb11906ce516e983b1af926" kindref="member">rotation</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref><sp/><sp/>-<sp/>1<sp/>-<sp/>y;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref><sp/><sp/>-<sp/>1<sp/>-<sp/>x;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1a6b3665babcb73df381563016e9f71bdb" kindref="member">HEIGHT</ref><sp/>-<sp/>1<sp/>-<sp/>y;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1a6b3665babcb73df381563016e9f71bdb" kindref="member">HEIGHT</ref><sp/>-<sp/>1<sp/>-<sp/>t;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/>*ptr<sp/><sp/>=<sp/>&amp;<ref refid="class_g_f_xcanvas1_1aec1b5879f2dd91b7a13da12fe48ae5e7" kindref="member">buffer</ref>[(x<sp/>/<sp/>8)<sp/>+<sp/>y<sp/>*<sp/>((<ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref><sp/>+<sp/>7)<sp/>/<sp/>8)];</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__AVR__</highlight></codeline>
<codeline lineno="1198"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(color)<sp/>*ptr<sp/>|=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;GFXsetBit[x<sp/>&amp;<sp/>7]);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>&amp;=<sp/><ref refid="_adafruit___s_s_d1306_8cpp_1a48c60b057902adf805797f183286728d" kindref="member">pgm_read_byte</ref>(&amp;GFXclrBit[x<sp/>&amp;<sp/>7]);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1201"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(color)<sp/>*ptr<sp/>|=<sp/><sp/><sp/>0x80<sp/>&gt;&gt;<sp/>(x<sp/>&amp;<sp/>7);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>&amp;=<sp/>~(0x80<sp/>&gt;&gt;<sp/>(x<sp/>&amp;<sp/>7));</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1204"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207" refid="class_g_f_xcanvas1_1aa282792bbb854a4a045be5ba1c8a7afc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_g_f_xcanvas1_1aa282792bbb854a4a045be5ba1c8a7afc" kindref="member">GFXcanvas1::fillScreen</ref>(uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_g_f_xcanvas1_1aec1b5879f2dd91b7a13da12fe48ae5e7" kindref="member">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>bytes<sp/>=<sp/>((<ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref><sp/>+<sp/>7)<sp/>/<sp/>8)<sp/>*<sp/><ref refid="class_adafruit___g_f_x_1a6b3665babcb73df381563016e9f71bdb" kindref="member">HEIGHT</ref>;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="class_g_f_xcanvas1_1aec1b5879f2dd91b7a13da12fe48ae5e7" kindref="member">buffer</ref>,<sp/>color<sp/>?<sp/>0xFF<sp/>:<sp/>0x00,<sp/>bytes);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214" refid="class_g_f_xcanvas8_1a57dcdb940a56a37cdfbb3a596f9e0ecd" refkind="member"><highlight class="normal"><ref refid="class_g_f_xcanvas8_1a57dcdb940a56a37cdfbb3a596f9e0ecd" kindref="member">GFXcanvas8::GFXcanvas8</ref>(uint16_t<sp/>w,<sp/>uint16_t<sp/>h)<sp/>:<sp/><ref refid="class_adafruit___g_f_x" kindref="compound">Adafruit_GFX</ref>(w,<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bytes<sp/>=<sp/>w<sp/>*<sp/>h;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="class_g_f_xcanvas8_1a9798c30f72aacd8a1488368375b0352f" kindref="member">buffer</ref><sp/>=<sp/>(uint8_t<sp/>*)malloc(bytes)))<sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="class_g_f_xcanvas8_1a9798c30f72aacd8a1488368375b0352f" kindref="member">buffer</ref>,<sp/>0,<sp/>bytes);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221" refid="class_g_f_xcanvas8_1a340fa7ddf55936e16748bd37255d2f19" refkind="member"><highlight class="normal"><ref refid="class_g_f_xcanvas8_1a340fa7ddf55936e16748bd37255d2f19" kindref="member">GFXcanvas8::~GFXcanvas8</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_g_f_xcanvas8_1a9798c30f72aacd8a1488368375b0352f" kindref="member">buffer</ref>)<sp/>free(<ref refid="class_g_f_xcanvas8_1a9798c30f72aacd8a1488368375b0352f" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225" refid="class_g_f_xcanvas8_1af22f9745b773ca0ccdebe37f0839b705" refkind="member"><highlight class="normal">uint8_t*<sp/><ref refid="class_g_f_xcanvas8_1af22f9745b773ca0ccdebe37f0839b705" kindref="member">GFXcanvas8::getBuffer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_g_f_xcanvas8_1a9798c30f72aacd8a1488368375b0352f" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229" refid="class_g_f_xcanvas8_1a596553ea995b2d7830cc3eef0c4085fc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_g_f_xcanvas8_1a596553ea995b2d7830cc3eef0c4085fc" kindref="member">GFXcanvas8::drawPixel</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_g_f_xcanvas8_1a9798c30f72aacd8a1488368375b0352f" kindref="member">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((x<sp/>&lt;<sp/>0)<sp/>||<sp/>(y<sp/>&lt;<sp/>0)<sp/>||<sp/>(x<sp/>&gt;=<sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref>)<sp/>||<sp/>(y<sp/>&gt;=<sp/><ref refid="class_adafruit___g_f_x_1ab9bb0cbc2455f64dce2a5ec36307aa94" kindref="member">_height</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>t;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_adafruit___g_f_x_1a37a479d28fb11906ce516e983b1af926" kindref="member">rotation</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref><sp/><sp/>-<sp/>1<sp/>-<sp/>y;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref><sp/><sp/>-<sp/>1<sp/>-<sp/>x;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1a6b3665babcb73df381563016e9f71bdb" kindref="member">HEIGHT</ref><sp/>-<sp/>1<sp/>-<sp/>y;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1a6b3665babcb73df381563016e9f71bdb" kindref="member">HEIGHT</ref><sp/>-<sp/>1<sp/>-<sp/>t;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_f_xcanvas8_1a9798c30f72aacd8a1488368375b0352f" kindref="member">buffer</ref>[x<sp/>+<sp/>y<sp/>*<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref>]<sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255" refid="class_g_f_xcanvas8_1a9362b64e0e24b34172226cab358f5a45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_g_f_xcanvas8_1a9362b64e0e24b34172226cab358f5a45" kindref="member">GFXcanvas8::fillScreen</ref>(uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_g_f_xcanvas8_1a9798c30f72aacd8a1488368375b0352f" kindref="member">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="class_g_f_xcanvas8_1a9798c30f72aacd8a1488368375b0352f" kindref="member">buffer</ref>,<sp/>color,<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref><sp/>*<sp/><ref refid="class_adafruit___g_f_x_1a6b3665babcb73df381563016e9f71bdb" kindref="member">HEIGHT</ref>);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261" refid="class_g_f_xcanvas8_1a5eadf69798e020345107af6cdb86f222" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_g_f_xcanvas8_1a5eadf69798e020345107af6cdb86f222" kindref="member">GFXcanvas8::writeFastHLine</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/>int16_t<sp/>w,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((x<sp/>&gt;=<sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref>)<sp/>||<sp/>(y<sp/>&lt;<sp/>0)<sp/>||<sp/>(y<sp/>&gt;=<sp/><ref refid="class_adafruit___g_f_x_1ab9bb0cbc2455f64dce2a5ec36307aa94" kindref="member">_height</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>x2<sp/>=<sp/>x<sp/>+<sp/>w<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x2<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>left/right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>x2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x2<sp/>&gt;=<sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref>)<sp/>w<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref><sp/>-<sp/>x;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>t;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_adafruit___g_f_x_1a37a479d28fb11906ce516e983b1af926" kindref="member">rotation</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref><sp/><sp/>-<sp/>1<sp/>-<sp/>y;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref><sp/><sp/>-<sp/>1<sp/>-<sp/>x;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1a6b3665babcb73df381563016e9f71bdb" kindref="member">HEIGHT</ref><sp/>-<sp/>1<sp/>-<sp/>y;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1a6b3665babcb73df381563016e9f71bdb" kindref="member">HEIGHT</ref><sp/>-<sp/>1<sp/>-<sp/>t;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="class_g_f_xcanvas8_1a9798c30f72aacd8a1488368375b0352f" kindref="member">buffer</ref><sp/>+<sp/>y<sp/>*<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref><sp/>+<sp/>x,<sp/>color,<sp/>w);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296" refid="class_g_f_xcanvas16_1a1087f17778b9c60db81162e66220b600" refkind="member"><highlight class="normal"><ref refid="class_g_f_xcanvas16_1a1087f17778b9c60db81162e66220b600" kindref="member">GFXcanvas16::GFXcanvas16</ref>(uint16_t<sp/>w,<sp/>uint16_t<sp/>h)<sp/>:<sp/><ref refid="class_adafruit___g_f_x" kindref="compound">Adafruit_GFX</ref>(w,<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bytes<sp/>=<sp/>w<sp/>*<sp/>h<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="class_g_f_xcanvas16_1a13e81bad95bdb3a36d24d2778deb075e" kindref="member">buffer</ref><sp/>=<sp/>(uint16_t<sp/>*)malloc(bytes)))<sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="class_g_f_xcanvas16_1a13e81bad95bdb3a36d24d2778deb075e" kindref="member">buffer</ref>,<sp/>0,<sp/>bytes);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303" refid="class_g_f_xcanvas16_1a15a79ebb2f3d86cb6a6bdc4ab1f3e9b7" refkind="member"><highlight class="normal"><ref refid="class_g_f_xcanvas16_1a15a79ebb2f3d86cb6a6bdc4ab1f3e9b7" kindref="member">GFXcanvas16::~GFXcanvas16</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_g_f_xcanvas16_1a13e81bad95bdb3a36d24d2778deb075e" kindref="member">buffer</ref>)<sp/>free(<ref refid="class_g_f_xcanvas16_1a13e81bad95bdb3a36d24d2778deb075e" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307" refid="class_g_f_xcanvas16_1adff0802df78d18dcc6834d6ad68c7619" refkind="member"><highlight class="normal">uint16_t*<sp/><ref refid="class_g_f_xcanvas16_1adff0802df78d18dcc6834d6ad68c7619" kindref="member">GFXcanvas16::getBuffer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_g_f_xcanvas16_1a13e81bad95bdb3a36d24d2778deb075e" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311" refid="class_g_f_xcanvas16_1ade30ed51e7dd07be0436b4f9407b6fd8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_g_f_xcanvas16_1ade30ed51e7dd07be0436b4f9407b6fd8" kindref="member">GFXcanvas16::drawPixel</ref>(int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/>uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_g_f_xcanvas16_1a13e81bad95bdb3a36d24d2778deb075e" kindref="member">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((x<sp/>&lt;<sp/>0)<sp/>||<sp/>(y<sp/>&lt;<sp/>0)<sp/>||<sp/>(x<sp/>&gt;=<sp/><ref refid="class_adafruit___g_f_x_1ab237f850a033492f5e745d79405a097a" kindref="member">_width</ref>)<sp/>||<sp/>(y<sp/>&gt;=<sp/><ref refid="class_adafruit___g_f_x_1ab9bb0cbc2455f64dce2a5ec36307aa94" kindref="member">_height</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>t;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_adafruit___g_f_x_1a37a479d28fb11906ce516e983b1af926" kindref="member">rotation</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref><sp/><sp/>-<sp/>1<sp/>-<sp/>y;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref><sp/><sp/>-<sp/>1<sp/>-<sp/>x;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1a6b3665babcb73df381563016e9f71bdb" kindref="member">HEIGHT</ref><sp/>-<sp/>1<sp/>-<sp/>y;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1a6b3665babcb73df381563016e9f71bdb" kindref="member">HEIGHT</ref><sp/>-<sp/>1<sp/>-<sp/>t;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_f_xcanvas16_1a13e81bad95bdb3a36d24d2778deb075e" kindref="member">buffer</ref>[x<sp/>+<sp/>y<sp/>*<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref>]<sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337" refid="class_g_f_xcanvas16_1ae46db6d49d2943e7cb227fd0bb50b1f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_g_f_xcanvas16_1ae46db6d49d2943e7cb227fd0bb50b1f8" kindref="member">GFXcanvas16::fillScreen</ref>(uint16_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_g_f_xcanvas16_1a13e81bad95bdb3a36d24d2778deb075e" kindref="member">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hi<sp/>=<sp/>color<sp/>&gt;&gt;<sp/>8,<sp/>lo<sp/>=<sp/>color<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi<sp/>==<sp/>lo)<sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="class_g_f_xcanvas16_1a13e81bad95bdb3a36d24d2778deb075e" kindref="member">buffer</ref>,<sp/>lo,<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref><sp/>*<sp/><ref refid="class_adafruit___g_f_x_1a6b3665babcb73df381563016e9f71bdb" kindref="member">HEIGHT</ref><sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>i,<sp/>pixels<sp/>=<sp/><ref refid="class_adafruit___g_f_x_1ab693a8ac5d94c50c2558b5a3795ddde4" kindref="member">WIDTH</ref><sp/>*<sp/><ref refid="class_adafruit___g_f_x_1a6b3665babcb73df381563016e9f71bdb" kindref="member">HEIGHT</ref>;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;pixels;<sp/>i++)<sp/><ref refid="class_g_f_xcanvas16_1a13e81bad95bdb3a36d24d2778deb075e" kindref="member">buffer</ref>[i]<sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/Adafruit_GFX.cpp"/>
  </compounddef>
</doxygen>
