<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_e_m7180_8cpp" kind="file">
    <compoundname>EM7180.cpp</compoundname>
    <includes local="yes">Arduino.h</includes>
    <includes refid="_e_m7180_8h" local="yes">EM7180.h</includes>
    <incdepgraph>
      <node id="308">
        <label>EM7180.h</label>
        <link refid="_e_m7180_8h"/>
        <childnode refid="309" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
      </node>
      <node id="312">
        <label>Wire.h</label>
      </node>
      <node id="311">
        <label>USFS_config.h</label>
        <link refid="_u_s_f_s__config_8h"/>
      </node>
      <node id="307">
        <label>Arduino.h</label>
      </node>
      <node id="306">
        <label>D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp</label>
        <link refid="EM7180.cpp"/>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="308" relation="include">
        </childnode>
      </node>
      <node id="309">
        <label>I2Cdev.h</label>
        <link refid="_i2_cdev_8h"/>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
      </node>
      <node id="310">
        <label>USFS_def.h</label>
        <link refid="_u_s_f_s__def_8h"/>
        <childnode refid="311" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t rawADC[6]</definition>
        <argsstring>[6]</argsstring>
        <name>rawADC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="32" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="32" bodyend="-1"/>
        <referencedby refid="class_e_m7180_1a0e6b9d6d7d1ba47735c2270f699db10f" compoundref="_e_m7180_8cpp" startline="384" endline="401">EM7180::ACC_getADC</referencedby>
        <referencedby refid="class_e_m7180_1a4cecd8f839ac9f5d345999498a99d3c7" compoundref="_e_m7180_8cpp" startline="368" endline="374">EM7180::Gyro_getADC</referencedby>
        <referencedby refid="class_e_m7180_1a0a6ac5bc8a4ac42a886e8298b71a83db" compoundref="_e_m7180_8cpp" startline="251" endline="254">EM7180::i2c_getSixRawADC</referencedby>
        <referencedby refid="class_e_m7180_1a9874b0d1f7bb6615f17fea7e74caf8bd" compoundref="_e_m7180_8cpp" startline="411" endline="417">EM7180::LIN_ACC_getADC</referencedby>
        <referencedby refid="class_e_m7180_1a7d22484ebb5a56c6fb1f9d4000e5e616" compoundref="_e_m7180_8cpp" startline="596" endline="602">EM7180::Mag_getADC</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a3e103e4758451abedaec86734fa9ed9b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int serial_input</definition>
        <argsstring></argsstring>
        <name>serial_input</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="33" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a503b907a080a0f03073b5b686ae5cb1e" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t calibratingA[2]</definition>
        <argsstring>[2]</argsstring>
        <name>calibratingA</name>
        <initializer>= { 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="34" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="34" bodyend="-1"/>
        <referencedby refid="class_e_m7180_1a44761e770c42dbf0c74e27bd5ad5a537" compoundref="_e_m7180_8cpp" startline="427" endline="490">EM7180::ACC_Common</referencedby>
        <referencedby refid="class_e_m7180_1a0e6b9d6d7d1ba47735c2270f699db10f" compoundref="_e_m7180_8cpp" startline="384" endline="401">EM7180::ACC_getADC</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1aab5aa741f7301eab5d6af0f1c730fe1c" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t eventStatus[2]</definition>
        <argsstring>[2]</argsstring>
        <name>eventStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="35" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="35" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a03509f18ae8b224d02f95cacf098c151" compoundref="_u_s_f_s___i_m_u_8cpp" startline="98" endline="107">FetchEventStatus</referencedby>
        <referencedby refid="class_e_m7180_1a3766932b7e91693ccac16c0aa000cbc3" compoundref="_e_m7180_8cpp" startline="70" endline="241">EM7180::initSensors</referencedby>
        <referencedby refid="class_e_m7180_1a1142712128e6c3735313b778b0d24db8" compoundref="_e_m7180_8cpp" startline="911" endline="937">EM7180::WS_Resume</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a0360fa6120664e816bdfe80225fa31ed" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Sentral_WS_valid[2]</definition>
        <argsstring>[2]</argsstring>
        <name>Sentral_WS_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="35" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="35" bodyend="-1"/>
        <referencedby refid="class_e_m7180_1a3766932b7e91693ccac16c0aa000cbc3" compoundref="_e_m7180_8cpp" startline="70" endline="241">EM7180::initSensors</referencedby>
        <referencedby refid="class_e_m7180_1a4d612cbec5feba4d33bca19d94ef1ad1" compoundref="_e_m7180_8cpp" startline="947" endline="978">EM7180::readSenParams</referencedby>
        <referencedby refid="class_e_m7180_1a043f4665f54cf6e36a8584b2f51642a8" compoundref="_e_m7180_8cpp" startline="988" endline="1015">EM7180::writeSenParams</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1ae6d5aaacaf88615aff0f8fcb3534d982" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Accel_Cal_valid[2]</definition>
        <argsstring>[2]</argsstring>
        <name>Accel_Cal_valid</name>
        <initializer>= { 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="35" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="35" bodyend="-1"/>
        <referencedby refid="class_e_m7180_1a16adf668355e0396d0f1e212bca31dbe" compoundref="_e_m7180_8cpp" startline="500" endline="586">EM7180::EM7180_acc_cal_upload</referencedby>
        <referencedby refid="class_e_m7180_1a3766932b7e91693ccac16c0aa000cbc3" compoundref="_e_m7180_8cpp" startline="70" endline="241">EM7180::initSensors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a566dd4519344035965aae7a707908285" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t algostatus[2]</definition>
        <argsstring>[2]</argsstring>
        <name>algostatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="35" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="35" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a03509f18ae8b224d02f95cacf098c151" compoundref="_u_s_f_s___i_m_u_8cpp" startline="98" endline="107">FetchEventStatus</referencedby>
        <referencedby refid="_u_s_f_s___i_m_u_8h_1ad9ff248a80111e220386344695dd3749" compoundref="_u_s_f_s___i_m_u_8cpp" startline="73" endline="89">IMU_Read</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a215e4473996a3f78c060954254a79d2d" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Quat_flag[2]</definition>
        <argsstring>[2]</argsstring>
        <name>Quat_flag</name>
        <initializer>= { 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="36" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="36" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a03509f18ae8b224d02f95cacf098c151" compoundref="_u_s_f_s___i_m_u_8cpp" startline="98" endline="107">FetchEventStatus</referencedby>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a373a8d6a44bed23eac850880751e50ef" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Gyro_flag[2]</definition>
        <argsstring>[2]</argsstring>
        <name>Gyro_flag</name>
        <initializer>= { 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="36" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="36" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a03509f18ae8b224d02f95cacf098c151" compoundref="_u_s_f_s___i_m_u_8cpp" startline="98" endline="107">FetchEventStatus</referencedby>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1aaf5969d27fb8b21e360d97d08b9edc53" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Acc_flag[2]</definition>
        <argsstring>[2]</argsstring>
        <name>Acc_flag</name>
        <initializer>= { 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="36" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="36" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a03509f18ae8b224d02f95cacf098c151" compoundref="_u_s_f_s___i_m_u_8cpp" startline="98" endline="107">FetchEventStatus</referencedby>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a871be5e0c25174a2a1b5f0d960a66502" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Mag_flag[2]</definition>
        <argsstring>[2]</argsstring>
        <name>Mag_flag</name>
        <initializer>= { 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="36" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="36" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a03509f18ae8b224d02f95cacf098c151" compoundref="_u_s_f_s___i_m_u_8cpp" startline="98" endline="107">FetchEventStatus</referencedby>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1ad255d9b55ce065cb4c5cf2b6fd01d166" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Baro_flag[2]</definition>
        <argsstring>[2]</argsstring>
        <name>Baro_flag</name>
        <initializer>= { 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="36" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="36" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a03509f18ae8b224d02f95cacf098c151" compoundref="_u_s_f_s___i_m_u_8cpp" startline="98" endline="107">FetchEventStatus</referencedby>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a77464b62eee3e7bd86826d4c672d9aec" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t gyroADC[2][3]</definition>
        <argsstring>[2][3]</argsstring>
        <name>gyroADC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="37" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="37" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1ab293686b36d5ef0c6771119cbc55693b" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t acc[2][3]</definition>
        <argsstring>[2][3]</argsstring>
        <name>acc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="37" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="37" bodyend="-1"/>
        <referencedby refid="class_e_m7180_1a0e6b9d6d7d1ba47735c2270f699db10f" compoundref="_e_m7180_8cpp" startline="384" endline="401">EM7180::ACC_getADC</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a5d1c65675d855a3fdf3e83e258c7898d" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t accADC</definition>
        <argsstring>[2][3]</argsstring>
        <name>accADC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="37" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="37" bodyend="-1"/>
        <referencedby refid="class_i_m_u_1a5cc4111c6d4240e65f958892ab337ac8" compoundref="_u_s_f_s___i_m_u_8cpp" startline="171" endline="205">IMU::computeIMU</referencedby>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a07ed3880e8e95c7d622c428cfe9c2cc5" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t acc_calADC[2][3]</definition>
        <argsstring>[2][3]</argsstring>
        <name>acc_calADC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="37" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="37" bodyend="-1"/>
        <referencedby refid="class_e_m7180_1a44761e770c42dbf0c74e27bd5ad5a537" compoundref="_e_m7180_8cpp" startline="427" endline="490">EM7180::ACC_Common</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a6219f55952061a8221c4a0f69ac1aa76" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t magADC[2][3]</definition>
        <argsstring>[2][3]</argsstring>
        <name>magADC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="37" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="37" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a4698ab983f1623c34099432905552e62" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t rawPressure[2]</definition>
        <argsstring>[2]</argsstring>
        <name>rawPressure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="37" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="37" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a87d9e619caba30996095e581e22865a2" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t rawTemperature[2]</definition>
        <argsstring>[2]</argsstring>
        <name>rawTemperature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="37" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="37" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a18abc49e2b991d645772d119107e9aa9" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float gyroData[2][3]</definition>
        <argsstring>[2][3]</argsstring>
        <name>gyroData</name>
        <initializer>= { 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="38" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="38" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a0dacd3533a61b44a38144e0c2bda844a" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float AngAcc[2][3]</definition>
        <argsstring>[2][3]</argsstring>
        <name>AngAcc</name>
        <initializer>= { 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="39" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1abec66dfd49cd6a1ac556fc0922050304" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float accData[2][3]</definition>
        <argsstring>[2][3]</argsstring>
        <name>accData</name>
        <initializer>= { 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="40" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="40" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a501be0080008a504a695450f76aef229" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float magData[2][3]</definition>
        <argsstring>[2][3]</argsstring>
        <name>magData</name>
        <initializer>= { 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="41" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="41" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a4ec3c7eec30d6fe1c110687dc0c504d0" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float pressure[2]</definition>
        <argsstring>[2]</argsstring>
        <name>pressure</name>
        <initializer>= { 0.0f, 0.0f }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="42" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="42" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
        <referencedby refid="_u_s_f_s___i_m_u_8h_1ad9ff248a80111e220386344695dd3749" compoundref="_u_s_f_s___i_m_u_8cpp" startline="73" endline="89">IMU_Read</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a2bfaa8444d8879e80a8499e060e2a2ec" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float temperature[2]</definition>
        <argsstring>[2]</argsstring>
        <name>temperature</name>
        <initializer>= { 0.0f, 0.0f }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="43" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="43" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
        <referencedby refid="_u_s_f_s___i_m_u_8h_1ad9ff248a80111e220386344695dd3749" compoundref="_u_s_f_s___i_m_u_8cpp" startline="73" endline="89">IMU_Read</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a4b4f85f23aa59a75befede46e69b8605" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t accLIN[2][3]</definition>
        <argsstring>[2][3]</argsstring>
        <name>accLIN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="44" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="44" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
        <referencedby refid="class_e_m7180_1a9874b0d1f7bb6615f17fea7e74caf8bd" compoundref="_e_m7180_8cpp" startline="411" endline="417">EM7180::LIN_ACC_getADC</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1aaeb0871607748dea5dac8f9869089e2f" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t accSmooth[2][3]</definition>
        <argsstring>[2][3]</argsstring>
        <name>accSmooth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="44" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="44" bodyend="-1"/>
        <referencedby refid="class_i_m_u_1a5cc4111c6d4240e65f958892ab337ac8" compoundref="_u_s_f_s___i_m_u_8cpp" startline="171" endline="205">IMU::computeIMU</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1abe4fffa1b2ac22da4a956ab8e4fce4a6" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float LINaccData[2][3]</definition>
        <argsstring>[2][3]</argsstring>
        <name>LINaccData</name>
        <initializer>= { 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="45" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="45" bodyend="-1"/>
        <referencedby refid="_u_s_f_s___i_m_u_8cpp_1a7470f18d90fee02c823fdae8b125670f" compoundref="_u_s_f_s___i_m_u_8cpp" startline="109" endline="153">FetchSentralData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1aad98622d0eece56a1e4da9e51f33f09a" prot="public" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t a_acc[2][3]</definition>
        <argsstring>[2][3]</argsstring>
        <name>a_acc</name>
        <initializer>= { 0, 0, 0, 0, 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="46" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="46" bodyend="-1"/>
        <referencedby refid="class_e_m7180_1a44761e770c42dbf0c74e27bd5ad5a537" compoundref="_e_m7180_8cpp" startline="427" endline="490">EM7180::ACC_Common</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a6dd70829611f015dcc06ffbb1c75a7a4" prot="public" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t b_acc[2][3]</definition>
        <argsstring>[2][3]</argsstring>
        <name>b_acc</name>
        <initializer>= { 0, 0, 0, 0, 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="46" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="46" bodyend="-1"/>
        <referencedby refid="class_e_m7180_1a44761e770c42dbf0c74e27bd5ad5a537" compoundref="_e_m7180_8cpp" startline="427" endline="490">EM7180::ACC_Common</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a56c4748c3648c67c3a620c9b010a576c" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float qt[2][4]</definition>
        <argsstring>[2][4]</argsstring>
        <name>qt</name>
        <initializer>= { 1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="47" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="47" bodyend="-1"/>
        <referencedby refid="class_i_m_u_1a5cc4111c6d4240e65f958892ab337ac8" compoundref="_u_s_f_s___i_m_u_8cpp" startline="171" endline="205">IMU::computeIMU</referencedby>
        <referencedby refid="class_e_m7180_1ac0af50da5c9b7e8c9805d7f4a95039b9" compoundref="_e_m7180_8cpp" startline="316" endline="326">EM7180::getQUAT</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1ad01ecb1224b994f220ca9f331219f382" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t QT_Timestamp[2]</definition>
        <argsstring>[2]</argsstring>
        <name>QT_Timestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="48" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="48" bodyend="-1"/>
        <referencedby refid="class_e_m7180_1ac0af50da5c9b7e8c9805d7f4a95039b9" compoundref="_e_m7180_8cpp" startline="316" endline="326">EM7180::getQUAT</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a7a2b0122117e255793df9392899c1a95" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float angle[2][2]</definition>
        <argsstring>[2][2]</argsstring>
        <name>angle</name>
        <initializer>= { 0, 0, 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="49" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="49" bodyend="-1"/>
        <referencedby refid="class_i_m_u_1a5cc4111c6d4240e65f958892ab337ac8" compoundref="_u_s_f_s___i_m_u_8cpp" startline="171" endline="205">IMU::computeIMU</referencedby>
        <referencedby refid="_u_s_f_s___i_m_u_8h_1ad9ff248a80111e220386344695dd3749" compoundref="_u_s_f_s___i_m_u_8cpp" startline="73" endline="89">IMU_Read</referencedby>
        <referencedby refid="location_8h_1ab6cd880d070717b4c3cc7a7278768e72" compoundref="location_8cpp" startline="98" endline="130">location_passed_point</referencedby>
        <referencedby refid="location_8h_1a4ca1857ee4c802d8aeb0da75a0759140" compoundref="location_8cpp" startline="174" endline="183">wrap_180</referencedby>
        <referencedby refid="location_8h_1a9a1cd3e3a0329e310eba39d7df534c55" compoundref="location_8cpp" startline="188" endline="197">wrap_360</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1ac487024f15da0992b299f718cd196eef" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float heading[2]</definition>
        <argsstring>[2]</argsstring>
        <name>heading</name>
        <initializer>= { 0.0f, 0.0f }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="50" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="50" bodyend="-1"/>
        <referencedby refid="class_i_m_u_1a5cc4111c6d4240e65f958892ab337ac8" compoundref="_u_s_f_s___i_m_u_8cpp" startline="171" endline="205">IMU::computeIMU</referencedby>
        <referencedby refid="_u_s_f_s___i_m_u_8h_1ad9ff248a80111e220386344695dd3749" compoundref="_u_s_f_s___i_m_u_8cpp" startline="73" endline="89">IMU_Read</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1a50203b063666e990c9ce0f3746287350" prot="public" static="no" mutable="no">
        <type><ref refid="structglobal__conf__t" kindref="compound">global_conf_t</ref></type>
        <definition>global_conf_t global_conf</definition>
        <argsstring></argsstring>
        <name>global_conf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="51" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1ae215a879c1c477368c9e89e79967e380" prot="public" static="no" mutable="no">
        <type><ref refid="struct_sentral___w_s__params" kindref="compound">Sentral_WS_params</ref></type>
        <definition>Sentral_WS_params WS_params</definition>
        <argsstring></argsstring>
        <name>WS_params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="52" column="1" bodyfile="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1aae3eed66759a369bc96c71a1c39733af" prot="public" static="no" mutable="no">
        <type>HardwareSerial *</type>
        <definition>HardwareSerial* Serials[]</definition>
        <argsstring>[]</argsstring>
        <name>Serials</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="54" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_e_m7180_8cpp_1aadcc1cb4a3163b28898cf7865b944006" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CommandPort</definition>
        <argsstring></argsstring>
        <name>CommandPort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp" line="55" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Gregory<sp/>Tomasch.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>deal<sp/>with<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimers.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimers<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>3.<sp/>The<sp/>names<sp/>of<sp/>Gregory<sp/>Tomasch<sp/>and<sp/>his<sp/>successors</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>may<sp/>not<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>Software</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Arduino.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_e_m7180_8h" kindref="compound">EM7180.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" refkind="member"><highlight class="normal">uint8_t<sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[6];</highlight></codeline>
<codeline lineno="33" refid="_e_m7180_8cpp_1a3e103e4758451abedaec86734fa9ed9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a3e103e4758451abedaec86734fa9ed9b" kindref="member">serial_input</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34" refid="_e_m7180_8cpp_1a503b907a080a0f03073b5b686ae5cb1e" refkind="member"><highlight class="normal">uint16_t<sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a503b907a080a0f03073b5b686ae5cb1e" kindref="member">calibratingA</ref>[2]<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Acc<sp/>calibration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="_e_m7180_8cpp_1a0360fa6120664e816bdfe80225fa31ed" refkind="member"><highlight class="normal">uint8_t<sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1aab5aa741f7301eab5d6af0f1c730fe1c" kindref="member">eventStatus</ref>[2],<sp/><ref refid="_e_m7180_8cpp_1a0360fa6120664e816bdfe80225fa31ed" kindref="member">Sentral_WS_valid</ref>[2],<sp/><ref refid="_e_m7180_8cpp_1ae6d5aaacaf88615aff0f8fcb3534d982" kindref="member">Accel_Cal_valid</ref>[2]<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>},<sp/><ref refid="_e_m7180_8cpp_1a566dd4519344035965aae7a707908285" kindref="member">algostatus</ref>[2];<sp/><sp/></highlight><highlight class="comment">//<sp/>EM7180<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="_u_s_f_s___i_m_u_8cpp_1a215e4473996a3f78c060954254a79d2d" refkind="member"><highlight class="normal">uint8_t<sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a215e4473996a3f78c060954254a79d2d" kindref="member">Quat_flag</ref>[2]<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>},<sp/><ref refid="_e_m7180_8cpp_1a373a8d6a44bed23eac850880751e50ef" kindref="member">Gyro_flag</ref>[2]<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>},<sp/><ref refid="_e_m7180_8cpp_1aaf5969d27fb8b21e360d97d08b9edc53" kindref="member">Acc_flag</ref>[2]<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>},<sp/><ref refid="_e_m7180_8cpp_1a871be5e0c25174a2a1b5f0d960a66502" kindref="member">Mag_flag</ref>[2]<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>},<sp/><ref refid="_e_m7180_8cpp_1ad255d9b55ce065cb4c5cf2b6fd01d166" kindref="member">Baro_flag</ref>[2]<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="37" refid="_u_s_f_s___i_m_u_8cpp_1a87d9e619caba30996095e581e22865a2" refkind="member"><highlight class="normal">int16_t<sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a77464b62eee3e7bd86826d4c672d9aec" kindref="member">gyroADC</ref>[2][3],<sp/><ref refid="_e_m7180_8cpp_1ab293686b36d5ef0c6771119cbc55693b" kindref="member">acc</ref>[2][3],<sp/><ref refid="_e_m7180_8cpp_1a5d1c65675d855a3fdf3e83e258c7898d" kindref="member">accADC</ref>[2][3],<sp/><ref refid="_e_m7180_8cpp_1a07ed3880e8e95c7d622c428cfe9c2cc5" kindref="member">acc_calADC</ref>[2][3],<sp/><ref refid="_e_m7180_8cpp_1a6219f55952061a8221c4a0f69ac1aa76" kindref="member">magADC</ref>[2][3],<sp/><ref refid="_e_m7180_8cpp_1a4698ab983f1623c34099432905552e62" kindref="member">rawPressure</ref>[2],<sp/><ref refid="_e_m7180_8cpp_1a87d9e619caba30996095e581e22865a2" kindref="member">rawTemperature</ref>[2];</highlight></codeline>
<codeline lineno="38" refid="_u_s_f_s___i_m_u_8cpp_1a18abc49e2b991d645772d119107e9aa9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a18abc49e2b991d645772d119107e9aa9" kindref="member">gyroData</ref>[2][3]<sp/>=<sp/>{<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f<sp/>};</highlight></codeline>
<codeline lineno="39" refid="_e_m7180_8cpp_1a0dacd3533a61b44a38144e0c2bda844a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a0dacd3533a61b44a38144e0c2bda844a" kindref="member">AngAcc</ref>[2][3]<sp/>=<sp/>{<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f<sp/>};</highlight></codeline>
<codeline lineno="40" refid="_u_s_f_s___i_m_u_8cpp_1abec66dfd49cd6a1ac556fc0922050304" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1abec66dfd49cd6a1ac556fc0922050304" kindref="member">accData</ref>[2][3]<sp/>=<sp/>{<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f<sp/>};</highlight></codeline>
<codeline lineno="41" refid="_u_s_f_s___i_m_u_8cpp_1a501be0080008a504a695450f76aef229" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a501be0080008a504a695450f76aef229" kindref="member">magData</ref>[2][3]<sp/>=<sp/>{<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f<sp/>};</highlight></codeline>
<codeline lineno="42" refid="_u_s_f_s___i_m_u_8cpp_1a4ec3c7eec30d6fe1c110687dc0c504d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a4ec3c7eec30d6fe1c110687dc0c504d0" kindref="member">pressure</ref>[2]<sp/>=<sp/>{<sp/>0.0f,<sp/>0.0f<sp/>};</highlight></codeline>
<codeline lineno="43" refid="_u_s_f_s___i_m_u_8cpp_1a2bfaa8444d8879e80a8499e060e2a2ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a2bfaa8444d8879e80a8499e060e2a2ec" kindref="member">temperature</ref>[2]<sp/>=<sp/>{<sp/>0.0f,<sp/>0.0f<sp/>};</highlight></codeline>
<codeline lineno="44" refid="_u_s_f_s___i_m_u_8h_1aaeb0871607748dea5dac8f9869089e2f" refkind="member"><highlight class="normal">int16_t<sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a4b4f85f23aa59a75befede46e69b8605" kindref="member">accLIN</ref>[2][3],<sp/><ref refid="_e_m7180_8cpp_1aaeb0871607748dea5dac8f9869089e2f" kindref="member">accSmooth</ref>[2][3];</highlight></codeline>
<codeline lineno="45" refid="_u_s_f_s___i_m_u_8cpp_1abe4fffa1b2ac22da4a956ab8e4fce4a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1abe4fffa1b2ac22da4a956ab8e4fce4a6" kindref="member">LINaccData</ref>[2][3]<sp/>=<sp/>{<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f<sp/>};</highlight></codeline>
<codeline lineno="46" refid="_e_m7180_8cpp_1a6dd70829611f015dcc06ffbb1c75a7a4" refkind="member"><highlight class="normal">int64_t<sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1aad98622d0eece56a1e4da9e51f33f09a" kindref="member">a_acc</ref>[2][3]<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>},<sp/><ref refid="_e_m7180_8cpp_1a6dd70829611f015dcc06ffbb1c75a7a4" kindref="member">b_acc</ref>[2][3]<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="47" refid="_u_s_f_s___i_m_u_8cpp_1a56c4748c3648c67c3a620c9b010a576c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a56c4748c3648c67c3a620c9b010a576c" kindref="member">qt</ref>[2][4]<sp/>=<sp/>{<sp/>1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f<sp/>};<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Quaternions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="_e_m7180_8cpp_1ad01ecb1224b994f220ca9f331219f382" refkind="member"><highlight class="normal">int16_t<sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1ad01ecb1224b994f220ca9f331219f382" kindref="member">QT_Timestamp</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Quaternion<sp/>timestamps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="_u_s_f_s___i_m_u_8h_1a7a2b0122117e255793df9392899c1a95" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a7a2b0122117e255793df9392899c1a95" kindref="member">angle</ref>[2][2]<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>P,R<sp/>Euler<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="_u_s_f_s___i_m_u_8h_1ac487024f15da0992b299f718cd196eef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1ac487024f15da0992b299f718cd196eef" kindref="member">heading</ref>[2]<sp/>=<sp/>{<sp/>0.0f,<sp/>0.0f<sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Heading<sp/>Euler<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="_e_m7180_8cpp_1a50203b063666e990c9ce0f3746287350" refkind="member"><highlight class="normal"><ref refid="structglobal__conf__t" kindref="compound">global_conf_t</ref><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a50203b063666e990c9ce0f3746287350" kindref="member">global_conf</ref>;</highlight></codeline>
<codeline lineno="52" refid="_e_m7180_8cpp_1ae215a879c1c477368c9e89e79967e380" refkind="member"><highlight class="normal"><ref refid="struct_sentral___w_s__params" kindref="compound">Sentral_WS_params</ref><sp/><sp/><ref refid="_e_m7180_8cpp_1ae215a879c1c477368c9e89e79967e380" kindref="member">WS_params</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>HardwareSerial<sp/>*<ref refid="_e_m7180_8cpp_1aae3eed66759a369bc96c71a1c39733af" kindref="member">Serials</ref>[];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_e_m7180_8cpp_1aadcc1cb4a3163b28898cf7865b944006" kindref="member">CommandPort</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_e_m7180_1af583fee47de0b8afd505c94f103f1e63" refkind="member"><highlight class="normal"><ref refid="class_e_m7180_1af583fee47de0b8afd505c94f103f1e63" kindref="member">EM7180::EM7180</ref>(<ref refid="class_i2_cdev" kindref="compound">I2Cdev</ref>*<sp/>i2c,<sp/>uint8_t<sp/>sensornum)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref><sp/>=<sp/>i2c;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref><sp/>=<sp/>sensornum;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_e_m7180_1a3766932b7e91693ccac16c0aa000cbc3" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1a3766932b7e91693ccac16c0aa000cbc3" kindref="member">EM7180::initSensors</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>uint8_t<sp/>STAT;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(F(&quot;MSG,Sentral_&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(SensorNum);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(&quot;:&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).println(&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a497282001e59a76e264615a60ea8cd0f" kindref="member">I2Cscan</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>SENtral<sp/>status,<sp/>make<sp/>sure<sp/>EEPROM<sp/>upload<sp/>of<sp/>firmware<sp/>was<sp/>accomplished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a9f24b45f46882710fb04b8ae643d6589" kindref="member">EM7180_SentralStatus</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!(STAT<sp/>&amp;<sp/>0x01))</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a3d5673df98184fd859cd05d3393e6a83" kindref="member">EM7180_ResetRequest</ref>,<sp/>0x01);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(500);<sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>count++;<sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a9f24b45f46882710fb04b8ae643d6589" kindref="member">EM7180_SentralStatus</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(count<sp/>&gt;<sp/>100)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(F(&quot;MSG,Sentral<sp/>Status:<sp/>&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(STAT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(F(&quot;<sp/>(Should<sp/>be<sp/>11)&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).println(&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a9f24b45f46882710fb04b8ae643d6589" kindref="member">EM7180_SentralStatus</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>delay(100);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(F(&quot;MSG,Sentral<sp/>firmware<sp/>loaded.<sp/>Fetching<sp/>Accel<sp/>Cal<sp/>and<sp/>WS<sp/>parameters...&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).println(&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>SENtral<sp/>in<sp/>pass-through<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1af38094d9f5d4571f604c30daec509c20" kindref="member">EM7180_PassThruControl</ref>,<sp/>0x01);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>delay(5);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a0b1bb4e10b0aeacbad657bb836912d79" kindref="member">EM7180_PassThruStatus</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>delay(5);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!(STAT<sp/>&amp;<sp/>0x01))</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a0b1bb4e10b0aeacbad657bb836912d79" kindref="member">EM7180_PassThruStatus</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(5);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fetch<sp/>Accel<sp/>Caldata<sp/>from<sp/>I2C<sp/>EEPROM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a4193ed4054715b486c8fd9c48a75d19c" kindref="member">EM7180::readAccelCal</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fetch<sp/>Warm<sp/>Start<sp/>data<sp/>from<sp/>I2C<sp/>EEPROM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a4d612cbec5feba4d33bca19d94ef1ad1" kindref="member">EM7180::readSenParams</ref>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Cancel<sp/>pass-through<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1af38094d9f5d4571f604c30daec509c20" kindref="member">EM7180_PassThruControl</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>delay(5);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a0b1bb4e10b0aeacbad657bb836912d79" kindref="member">EM7180_PassThruStatus</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((STAT<sp/>&amp;<sp/>0x01))</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a0b1bb4e10b0aeacbad657bb836912d79" kindref="member">EM7180_PassThruStatus</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(5);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(F(&quot;MSG,Done...&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).println(&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(F(&quot;MSG,Acceleromater<sp/>Calibration<sp/>Data:&quot;));<sp/>(*Serials[CommandPort]).println(&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(F(&quot;MSG,X-acc<sp/>max:<sp/>&quot;));<sp/>(*Serials[CommandPort]).println(global_conf.accZero_max[SensorNum][0]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(F(&quot;MSG,Y-acc<sp/>max:<sp/>&quot;));<sp/>(*Serials[CommandPort]).println(global_conf.accZero_max[SensorNum][1]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(F(&quot;MSG,Z-acc<sp/>max:<sp/>&quot;));<sp/>(*Serials[CommandPort]).println(global_conf.accZero_max[SensorNum][2]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(F(&quot;MSG,X-acc<sp/>min:<sp/>&quot;));<sp/>(*Serials[CommandPort]).println(global_conf.accZero_min[SensorNum][0]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(F(&quot;MSG,Y-acc<sp/>min:<sp/>&quot;));<sp/>(*Serials[CommandPort]).println(global_conf.accZero_min[SensorNum][1]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(F(&quot;MSG,Z-acc<sp/>min:<sp/>&quot;));<sp/>(*Serials[CommandPort]).println(global_conf.accZero_min[SensorNum][2]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(F(&quot;MSG,Checking/loading<sp/>Acc<sp/>Cal<sp/>data...&quot;));<sp/><sp/>(*Serials[CommandPort]).println(&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Be<sp/>sure<sp/>Sentral<sp/>is<sp/>in<sp/>&quot;Idle&quot;<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a3987beff5b56fd1daf6af2210afd32b3" kindref="member">EM7180_HostControl</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>Accel<sp/>Cal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>Acc<sp/>Cal<sp/>values<sp/>are<sp/>valid<sp/>and<sp/>will<sp/>not<sp/>crash<sp/>the<sp/>Sentral</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="_e_m7180_8cpp_1ae6d5aaacaf88615aff0f8fcb3534d982" kindref="member">Accel_Cal_valid</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((global_conf.<ref refid="structglobal__conf__t_1aa24452a5861d21caa9bfc78744e968be" kindref="member">accZero_min</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][i]<sp/>&lt;<sp/>-2240)<sp/>||<sp/>(global_conf.<ref refid="structglobal__conf__t_1aa24452a5861d21caa9bfc78744e968be" kindref="member">accZero_min</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][i]<sp/>&gt;<sp/>-1800))<sp/><ref refid="_e_m7180_8cpp_1ae6d5aaacaf88615aff0f8fcb3534d982" kindref="member">Accel_Cal_valid</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((global_conf.<ref refid="structglobal__conf__t_1a580c9b24f4d23e8e0dba66613c67ce98" kindref="member">accZero_max</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][i]<sp/>&lt;<sp/>1800)<sp/>||<sp/>(global_conf.<ref refid="structglobal__conf__t_1a580c9b24f4d23e8e0dba66613c67ce98" kindref="member">accZero_max</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][i]<sp/>&gt;<sp/>2240))<sp/><ref refid="_e_m7180_8cpp_1ae6d5aaacaf88615aff0f8fcb3534d982" kindref="member">Accel_Cal_valid</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>Accel<sp/>Cal<sp/>data<sp/>bogus,<sp/>null<sp/>data<sp/>loaded<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a16adf668355e0396d0f1e212bca31dbe" kindref="member">EM7180::EM7180_acc_cal_upload</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_u_s_f_s__config_8h_1a7963844eb68f8f68719f596cc68a8180" kindref="member">ACCEL_CAL</ref><sp/>&amp;&amp;<sp/><ref refid="_e_m7180_8cpp_1ae6d5aaacaf88615aff0f8fcb3534d982" kindref="member">Accel_Cal_valid</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>])</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>(*Serials[CommandPort]).print(F(&quot;MSG,Acc<sp/>Cal<sp/>data<sp/>valid...&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>(*Serials[CommandPort]).println(&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(*Serials[CommandPort]).print(F(&quot;MSG,Acc<sp/>Cal<sp/>data<sp/>invalid!<sp/>Defaults<sp/>loaded...&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(*Serials[CommandPort]).println(&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>initialize;<sp/>reads<sp/>Accel<sp/>Cal<sp/>data<sp/>into<sp/>static<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a3987beff5b56fd1daf6af2210afd32b3" kindref="member">EM7180_HostControl</ref>,<sp/>0x01);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>SERIAL_DEBUG</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(F(&quot;MSG,Done.<sp/>Loading<sp/>Warm<sp/>Start<sp/>Parameters,<sp/>modifying<sp/>sensor<sp/>ranges<sp/>and<sp/>data<sp/>rates...&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).println(&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>delay(20);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>Warm<sp/>Start<sp/>Parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_u_s_f_s__config_8h_1ad5d3e32108e51620b899e92db9fe33fd" kindref="member">SENTRAL_WARM_START</ref><sp/>&amp;&amp;<sp/><ref refid="_e_m7180_8cpp_1a0360fa6120664e816bdfe80225fa31ed" kindref="member">Sentral_WS_valid</ref>[SensorNum]<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1a67f3e5da94a05361d1da2095a7619aec" kindref="member">EM7180::EM7180_set_WS_params</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).print(F(&quot;MSG,Warm<sp/>Start<sp/>data<sp/>loaded...&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(*Serials[CommandPort]).println(&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>(*Serials[CommandPort]).print(F(&quot;MSG,Warm<sp/>Start<sp/>data<sp/>NOT<sp/>loaded!&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>(*Serials[CommandPort]).println(&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Sensor<sp/>LPF<sp/>bandwidth.<sp/>MUST<sp/>BE<sp/>DONE<sp/>BEFORE<sp/>SETTING<sp/>ODR&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ab22c1f579175da2df8d10ea90225a3c3" kindref="member">EM7180_ACC_LPF_BW</ref>,<sp/><ref refid="_u_s_f_s__def_8h_1a900f2096cf4cdb69924cb3b392a20991" kindref="member">LSM6DSM_ACC_DLPF_CFG</ref>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accelerometer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a786594a28890d331e59acace0971fae5" kindref="member">EM7180_GYRO_LPF_BW</ref>,<sp/><ref refid="_u_s_f_s__def_8h_1af6e93643157c37f747aa756953179f98" kindref="member">LSM6DSM_GYRO_DLPF_CFG</ref>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gyroscope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a556762917540c745f5e1e78d78904cdb" kindref="member">EM7180_MAG_LPF_BW</ref>,<sp/><ref refid="_u_s_f_s__config_8h_1afcf13127314024bba9d4b455dc08438f" kindref="member">LIS2MDL_MAG_LPF</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Magnetometer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a99d3f53b227c394db2628a94dafaa5c5" kindref="member">EM7180_BARO_LPF_BW</ref>,<sp/><ref refid="_u_s_f_s__config_8h_1a57a68e8506aebfa26e2fecfaeafca97a" kindref="member">LPS22HB_BARO_LPF</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Baro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>accel/gyro/mage<sp/>desired<sp/>ODR<sp/>rates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a9a87b74ebca305c030c95c133bac8652" kindref="member">EM7180_AccelRate</ref>,<sp/><ref refid="_u_s_f_s__config_8h_1a8f70d036e0fc3127bbd1ac81e241d110" kindref="member">ACC_ODR</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a754874eb7bc9a5a04ba29c629413777b" kindref="member">EM7180_GyroRate</ref>,<sp/><ref refid="_u_s_f_s__config_8h_1ac67c123471c94711fcae871ee5aa437c" kindref="member">GYRO_ODR</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa236cb89f38f40b4075186c1c74799ce" kindref="member">EM7180_MagRate</ref>,<sp/><ref refid="_u_s_f_s__config_8h_1aa42914727c0f5c56229dc8eb631194c0" kindref="member">MAG_ODR</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a42220312220c363fee0f5f190aac7323" kindref="member">EM7180_QRateDivisor</ref>,<sp/><ref refid="_u_s_f_s__config_8h_1a02b942572654df07c6f7ffe4258e1991" kindref="member">QUAT_DIV</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ODR<sp/>+<sp/>10000000b<sp/>to<sp/>activate<sp/>the<sp/>eventStatus<sp/>bit<sp/>for<sp/>the<sp/>barometer...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa6d3b5c0bc9473de890385d613b08e7f" kindref="member">EM7180_BaroRate</ref>,<sp/>(0x80<sp/>+<sp/><ref refid="_u_s_f_s__config_8h_1aae465087f07e991ad9d8c0d7e90987fc" kindref="member">BARO_ODR</ref>));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>operating<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>scaled<sp/>sensor<sp/>data<sp/>(Quaternion<sp/>convention<sp/>NED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>interrupt<sp/>to<sp/>host<sp/>upon<sp/>certain<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>interrupts<sp/>when:<sp/>gyros<sp/>updated<sp/>(0x20),<sp/>Sentral<sp/>error<sp/>(0x02)<sp/>or<sp/>Sentral<sp/>reset<sp/>(0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae61b632a840ce5e1b3b9262c9ccc9711" kindref="member">EM7180_EnableEvents</ref>,<sp/>0x23);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>(*Serials[CommandPort]).print(F(&quot;MSG,Done.<sp/>Starting<sp/>the<sp/>Sentral...&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>(*Serials[CommandPort]).println(&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>the<sp/>Sentral</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>(*Serials[CommandPort]).print(F(&quot;MSG,Done.<sp/>Loading<sp/>algorithm<sp/>tuning<sp/>parameters...&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>(*Serials[CommandPort]).println(&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>final<sp/>Sentral<sp/>alogorithm<sp/>parameter<sp/>modifications</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1aabdbcf48609bfe2e0d1f99c83b8012b2" kindref="member">EM7180::EM7180_set_integer_param</ref><sp/>(0x49,<sp/>0x00);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>&quot;Stillness&quot;<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1aabdbcf48609bfe2e0d1f99c83b8012b2" kindref="member">EM7180::EM7180_set_integer_param</ref><sp/>(0x48,<sp/>0x01);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Gbias_mode<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1ab51a65ee0d0d5565ba7b4f61752a9bdd" kindref="member">EM7180::EM7180_set_mag_acc_FS</ref><sp/>(<ref refid="_u_s_f_s__config_8h_1af91ea782523c15cb13ede694b43d1510" kindref="member">MAG_SCALE</ref>,<sp/><ref refid="_u_s_f_s__config_8h_1a12c7b17bb03dc66dac226cdfe74f3c2d" kindref="member">ACC_SCALE</ref>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>magnetometer/accelerometer<sp/>full-scale<sp/>ranges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1acb819353d780ddbeb7f7f482ede0d943" kindref="member">EM7180::EM7180_set_gyro_FS</ref><sp/>(<ref refid="_u_s_f_s__config_8h_1abdeac7f9288bf09fd6e1739d22ff8bea" kindref="member">GYRO_SCALE</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>gyroscope<sp/>full-scale<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1add3860588dfa8bbb9ed1d9c01497b845" kindref="member">EM7180::EM7180_set_float_param</ref><sp/>(0x3B,<sp/>0.0f);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Param<sp/>59<sp/>Mag<sp/>Transient<sp/>Protect<sp/>off<sp/>(0.0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//EM7180::EM7180_set_float_param<sp/>(0x34,<sp/>4.0f);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Param<sp/>52<sp/>Mag<sp/>merging<sp/>rate<sp/>(0.7<sp/>default)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//EM7180::EM7180_set_float_param<sp/>(0x35,<sp/>0.3f);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Param<sp/>53<sp/>Accel<sp/>merging<sp/>rate<sp/>(0.6<sp/>default)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//I2C-&gt;writeByte(EM7180_ADDRESS,<sp/>EM7180_AlgorithmControl,<sp/>0x02);<sp/><sp/>//<sp/>Diagnostic;<sp/>reports<sp/>unscaled<sp/>sensor<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>interrupt<sp/>events:<sp/>Gyros<sp/>updated<sp/>(0x20),<sp/>Sentral<sp/>error<sp/>(0x02)<sp/>or<sp/>Sentral<sp/>reset<sp/>(0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae61b632a840ce5e1b3b9262c9ccc9711" kindref="member">EM7180_EnableEvents</ref>,<sp/>0x23);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>event<sp/>status<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="_e_m7180_8cpp_1aab5aa741f7301eab5d6af0f1c730fe1c" kindref="member">eventStatus</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>]<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a72c1fe33ee032ea270839b8ee2b6b285" kindref="member">EM7180_EventStatus</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>(*Serials[CommandPort]).print(F(&quot;MSG,Sentral<sp/>initialization<sp/>complete!&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>(*Serials[CommandPort]).println(&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="class_e_m7180_1a0a6ac5bc8a4ac42a886e8298b71a83db" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1a0a6ac5bc8a4ac42a886e8298b71a83db" kindref="member">EM7180::i2c_getSixRawADC</ref>(uint8_t<sp/>add,<sp/>uint8_t<sp/>reg)</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1ab46c2b68fc55c4267c84a168b52908ec" kindref="member">readBytes</ref>(add,<sp/>reg,<sp/>6,<sp/><ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="class_e_m7180_1a60b22a681d5069906ac105a456d8cfc3" refkind="member"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1a60b22a681d5069906ac105a456d8cfc3" kindref="member">EM7180::uint32_reg_to_float</ref><sp/>(uint8_t<sp/>*buf)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ui32;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}<sp/>u;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>u.ui32<sp/>=<sp/><sp/><sp/><sp/><sp/>(((uint32_t)buf[0])<sp/>+</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)buf[1])<sp/>&lt;&lt;<sp/><sp/>8)<sp/>+</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)buf[2])<sp/>&lt;&lt;<sp/>16)<sp/>+</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)buf[3])<sp/>&lt;&lt;<sp/>24));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u.f;</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="class_e_m7180_1a14edb351e986ccb8c663a46c373b186b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1a14edb351e986ccb8c663a46c373b186b" kindref="member">EM7180::float_to_bytes</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>param_val,<sp/>uint8_t<sp/>*buf)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>comp[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float)];</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}<sp/>u;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>u.f<sp/>=<sp/>param_val;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i=0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float);<sp/>i++)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>buf[i]<sp/>=<sp/>u.comp[i];</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>LITTLE<sp/>ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i=0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float);<sp/>i++)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>buf[i]<sp/>=<sp/>buf[(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float)-1)<sp/>-<sp/>i];</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="class_e_m7180_1ac0af50da5c9b7e8c9805d7f4a95039b9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1ac0af50da5c9b7e8c9805d7f4a95039b9" kindref="member">EM7180::getQUAT</ref>()</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>uint8_t<sp/>rawData[18];</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1ab46c2b68fc55c4267c84a168b52908ec" kindref="member">readBytes</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aedd20d036d0b4e0bfe6246c4d63092cd" kindref="member">EM7180_QX</ref>,<sp/>18,<sp/>&amp;rawData[0]);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><ref refid="_e_m7180_8cpp_1a56c4748c3648c67c3a620c9b010a576c" kindref="member">qt</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][1]<sp/>=<sp/><ref refid="class_e_m7180_1a60b22a681d5069906ac105a456d8cfc3" kindref="member">uint32_reg_to_float</ref><sp/>(&amp;rawData[0]);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><ref refid="_e_m7180_8cpp_1a56c4748c3648c67c3a620c9b010a576c" kindref="member">qt</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][2]<sp/>=<sp/><ref refid="class_e_m7180_1a60b22a681d5069906ac105a456d8cfc3" kindref="member">uint32_reg_to_float</ref><sp/>(&amp;rawData[4]);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><ref refid="_e_m7180_8cpp_1a56c4748c3648c67c3a620c9b010a576c" kindref="member">qt</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][3]<sp/>=<sp/><ref refid="class_e_m7180_1a60b22a681d5069906ac105a456d8cfc3" kindref="member">uint32_reg_to_float</ref><sp/>(&amp;rawData[8]);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="_e_m7180_8cpp_1a56c4748c3648c67c3a620c9b010a576c" kindref="member">qt</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][0]<sp/>=<sp/><ref refid="class_e_m7180_1a60b22a681d5069906ac105a456d8cfc3" kindref="member">uint32_reg_to_float</ref><sp/>(&amp;rawData[12]);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><ref refid="_e_m7180_8cpp_1ad01ecb1224b994f220ca9f331219f382" kindref="member">QT_Timestamp</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>]<sp/>=<sp/>((int16_t)(rawData[17]&lt;&lt;8)<sp/>|<sp/>rawData[16]);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="class_e_m7180_1ac062a10fd1d6403fdcc4c2fa0773a33f" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_e_m7180_1ac062a10fd1d6403fdcc4c2fa0773a33f" kindref="member">EM7180::Baro_getPress</ref>()</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>uint8_t<sp/>rawData[2];</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1ab46c2b68fc55c4267c84a168b52908ec" kindref="member">readBytes</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aad9a487d28e1a5df4bf2cb7655939820" kindref="member">EM7180_Baro</ref>,<sp/>2,<sp/>&amp;rawData[0]);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int16_t)<sp/>(((int16_t)rawData[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>rawData[0]);</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="class_e_m7180_1af727b80b14013f17d644654fdea8358d" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_e_m7180_1af727b80b14013f17d644654fdea8358d" kindref="member">EM7180::Baro_getTemp</ref>()</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>uint8_t<sp/>rawData[2];</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1ab46c2b68fc55c4267c84a168b52908ec" kindref="member">readBytes</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a6f49b6f96c375018464a5fdc67e30a23" kindref="member">EM7180_Temp</ref>,<sp/>2,<sp/>&amp;rawData[0]);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int16_t)<sp/>(((int16_t)rawData[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>rawData[0]);</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="class_e_m7180_1a4cecd8f839ac9f5d345999498a99d3c7" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1a4cecd8f839ac9f5d345999498a99d3c7" kindref="member">EM7180::Gyro_getADC</ref>()</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a0a6ac5bc8a4ac42a886e8298b71a83db" kindref="member">EM7180::i2c_getSixRawADC</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a5456087452dbf9febe0fc765195c9566" kindref="member">EM7180_GX</ref>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><ref refid="_u_s_f_s__def_8h_1abd658fc928cb88b5786306bb4668b0af" kindref="member">GYRO_ORIENTATION</ref>(<sp/>((int16_t)(<ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[1]&lt;&lt;8)<sp/>|<sp/><ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[0]),<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Range:<sp/>+/-<sp/>32768;<sp/>+/-<sp/>2000<sp/>deg/sec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int16_t)(<ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[3]&lt;&lt;8)<sp/>|<sp/><ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[2]),</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int16_t)(<ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[5]&lt;&lt;8)<sp/>|<sp/><ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[4]));</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="class_e_m7180_1a0e6b9d6d7d1ba47735c2270f699db10f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1a0e6b9d6d7d1ba47735c2270f699db10f" kindref="member">EM7180::ACC_getADC</ref>()</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a0a6ac5bc8a4ac42a886e8298b71a83db" kindref="member">EM7180::i2c_getSixRawADC</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ad11d830c295e70cb48a36bbf6ab907db" kindref="member">EM7180_AX</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><ref refid="_e_m7180_8cpp_1ab293686b36d5ef0c6771119cbc55693b" kindref="member">acc</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][0]<sp/>=<sp/>((int16_t)(<ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[1]&lt;&lt;8)<sp/>|<sp/><ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[0]);<sp/><sp/></highlight><highlight class="comment">//<sp/>Scale:<sp/>2048cts<sp/>=<sp/>1g</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><ref refid="_e_m7180_8cpp_1ab293686b36d5ef0c6771119cbc55693b" kindref="member">acc</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][1]<sp/>=<sp/>((int16_t)(<ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[3]&lt;&lt;8)<sp/>|<sp/><ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[2]);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><ref refid="_e_m7180_8cpp_1ab293686b36d5ef0c6771119cbc55693b" kindref="member">acc</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][2]<sp/>=<sp/>((int16_t)(<ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[5]&lt;&lt;8)<sp/>|<sp/><ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[4]);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><ref refid="_u_s_f_s__def_8h_1ad719ebac0025c29e3a062eb913e2086c" kindref="member">ACC_ORIENTATION</ref>(<ref refid="_e_m7180_8cpp_1ab293686b36d5ef0c6771119cbc55693b" kindref="member">acc</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][0],</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1ab293686b36d5ef0c6771119cbc55693b" kindref="member">acc</ref>[SensorNum][1],</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1ab293686b36d5ef0c6771119cbc55693b" kindref="member">acc</ref>[SensorNum][2]);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>Accel<sp/>Cal<sp/>active,<sp/>assign<sp/>ACC_CAL_ORIENTATION<sp/>definition<sp/>to<sp/>generate<sp/>calibration<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_e_m7180_8cpp_1a503b907a080a0f03073b5b686ae5cb1e" kindref="member">calibratingA</ref>[SensorNum]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_u_s_f_s__def_8h_1a52160c7808e20764da1fe990490ac2e6" kindref="member">ACC_CAL_ORIENTATION</ref>(<ref refid="_e_m7180_8cpp_1ab293686b36d5ef0c6771119cbc55693b" kindref="member">acc</ref>[SensorNum][0],</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1ab293686b36d5ef0c6771119cbc55693b" kindref="member">acc</ref>[SensorNum][1],</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1ab293686b36d5ef0c6771119cbc55693b" kindref="member">acc</ref>[SensorNum][2]);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="class_e_m7180_1a9874b0d1f7bb6615f17fea7e74caf8bd" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1a9874b0d1f7bb6615f17fea7e74caf8bd" kindref="member">EM7180::LIN_ACC_getADC</ref>()</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a0a6ac5bc8a4ac42a886e8298b71a83db" kindref="member">EM7180::i2c_getSixRawADC</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a87ae1c14b435458bcd19b237cddb829c" kindref="member">EM7180_GP8</ref>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><ref refid="_e_m7180_8cpp_1a4b4f85f23aa59a75befede46e69b8605" kindref="member">accLIN</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][0]<sp/>=<sp/>((int16_t)(<ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[1]&lt;&lt;8)<sp/>|<sp/><ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[0]);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scale:<sp/>2048cts<sp/>=<sp/>1g</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><ref refid="_e_m7180_8cpp_1a4b4f85f23aa59a75befede46e69b8605" kindref="member">accLIN</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][1]<sp/>=<sp/>((int16_t)(<ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[3]&lt;&lt;8)<sp/>|<sp/><ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[2]);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><ref refid="_e_m7180_8cpp_1a4b4f85f23aa59a75befede46e69b8605" kindref="member">accLIN</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][2]<sp/>=<sp/>((int16_t)(<ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[5]&lt;&lt;8)<sp/>|<sp/><ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[4]);</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="class_e_m7180_1a44761e770c42dbf0c74e27bd5ad5a537" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1a44761e770c42dbf0c74e27bd5ad5a537" kindref="member">EM7180::ACC_Common</ref>()</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_e_m7180_8cpp_1a503b907a080a0f03073b5b686ae5cb1e" kindref="member">calibratingA</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>]<sp/>==<sp/>512)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>the<sp/>Sentral<sp/>to<sp/>send<sp/>unscaled<sp/>sensor<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x02);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(20);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-read<sp/>Acc<sp/>data<sp/>in<sp/>raw<sp/>data<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1a0e6b9d6d7d1ba47735c2270f699db10f" kindref="member">EM7180::ACC_getADC</ref>();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_e_m7180_8cpp_1a503b907a080a0f03073b5b686ae5cb1e" kindref="member">calibratingA</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>axis<sp/>=<sp/>0;<sp/>axis<sp/>&lt;<sp/>3;<sp/>axis++)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Raw<sp/>Acc<sp/>data<sp/>from<sp/>Sentral<sp/>is<sp/>scaled<sp/>according<sp/>to<sp/>sensor<sp/>range<sp/>selected;<sp/>divide<sp/>by<sp/>appropriate<sp/>factor<sp/>of<sp/>two<sp/>to<sp/>get<sp/>1g=2048cts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="_e_m7180_8cpp_1a07ed3880e8e95c7d622c428cfe9c2cc5" kindref="member">acc_calADC</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]/(0x10/<ref refid="_u_s_f_s__config_8h_1a12c7b17bb03dc66dac226cdfe74f3c2d" kindref="member">ACC_SCALE</ref>)<sp/>&gt;<sp/>1024))</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sum<sp/>up<sp/>512<sp/>readings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1aad98622d0eece56a1e4da9e51f33f09a" kindref="member">a_acc</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]<sp/>+=<sp/><ref refid="_e_m7180_8cpp_1a07ed3880e8e95c7d622c428cfe9c2cc5" kindref="member">acc_calADC</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]/(0x10/<ref refid="_u_s_f_s__config_8h_1a12c7b17bb03dc66dac226cdfe74f3c2d" kindref="member">ACC_SCALE</ref>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="_e_m7180_8cpp_1a07ed3880e8e95c7d622c428cfe9c2cc5" kindref="member">acc_calADC</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]/(0x10/<ref refid="_u_s_f_s__config_8h_1a12c7b17bb03dc66dac226cdfe74f3c2d" kindref="member">ACC_SCALE</ref>))<sp/>&lt;<sp/>-1024)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a6dd70829611f015dcc06ffbb1c75a7a4" kindref="member">b_acc</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]<sp/>+=<sp/><ref refid="_e_m7180_8cpp_1a07ed3880e8e95c7d622c428cfe9c2cc5" kindref="member">acc_calADC</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]/(0x10/<ref refid="_u_s_f_s__config_8h_1a12c7b17bb03dc66dac226cdfe74f3c2d" kindref="member">ACC_SCALE</ref>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>global<sp/>variables<sp/>for<sp/>next<sp/>reading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a07ed3880e8e95c7d622c428cfe9c2cc5" kindref="member">acc_calADC</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>averages,<sp/>and<sp/>store<sp/>values<sp/>in<sp/>EEPROM<sp/>at<sp/>end<sp/>of<sp/>calibration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_e_m7180_8cpp_1a503b907a080a0f03073b5b686ae5cb1e" kindref="member">calibratingA</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>]<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>axis<sp/>=<sp/>0;<sp/>axis<sp/>&lt;<sp/>3;<sp/>axis++)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_e_m7180_8cpp_1aad98622d0eece56a1e4da9e51f33f09a" kindref="member">a_acc</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]&gt;&gt;9<sp/>&gt;<sp/>1024)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_conf.<ref refid="structglobal__conf__t_1a580c9b24f4d23e8e0dba66613c67ce98" kindref="member">accZero_max</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]<sp/>=<sp/><ref refid="_e_m7180_8cpp_1aad98622d0eece56a1e4da9e51f33f09a" kindref="member">a_acc</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]&gt;&gt;9;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_e_m7180_8cpp_1a6dd70829611f015dcc06ffbb1c75a7a4" kindref="member">b_acc</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]&gt;&gt;9<sp/>&lt;<sp/>-1024)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_conf.<ref refid="structglobal__conf__t_1aa24452a5861d21caa9bfc78744e968be" kindref="member">accZero_min</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]<sp/>=<sp/><ref refid="_e_m7180_8cpp_1a6dd70829611f015dcc06ffbb1c75a7a4" kindref="member">b_acc</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]&gt;&gt;9;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>global<sp/>variables<sp/>for<sp/>next<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1aad98622d0eece56a1e4da9e51f33f09a" kindref="member">a_acc</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a6dd70829611f015dcc06ffbb1c75a7a4" kindref="member">b_acc</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>accZero<sp/>to<sp/>I2C<sp/>EEPROM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>the<sp/>Sentral<sp/>in<sp/>pass-thru<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1afff906136f41f83a409e15c6ca4eb027" kindref="member">EM7180::WS_PassThroughMode</ref>();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>accelerometer<sp/>calibration<sp/>data<sp/>to<sp/>the<sp/>M24512DFM<sp/>I2C<sp/>EEPROM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1afc13d26aabb1ac8f4d760bbd4cef1612" kindref="member">EM7180::writeAccCal</ref>();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>Sentral<sp/>out<sp/>of<sp/>pass-thru<sp/>mode<sp/>and<sp/>re-start<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>resumes<sp/>sending<sp/>calibrated<sp/>sensor<sp/>data<sp/>to<sp/>the<sp/>output<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1a1142712128e6c3735313b778b0d24db8" kindref="member">EM7180::WS_Resume</ref>();</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Alarms::IndLEDon();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Alarms::blink_IndLED(10,50,1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a503b907a080a0f03073b5b686ae5cb1e" kindref="member">calibratingA</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>]--;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="class_e_m7180_1a16adf668355e0396d0f1e212bca31dbe" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1a16adf668355e0396d0f1e212bca31dbe" kindref="member">EM7180::EM7180_acc_cal_upload</ref>()</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>int64_t<sp/>big_cal_num;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>cal_num;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cal_num_byte[2];</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="_u_s_f_s__config_8h_1a7963844eb68f8f68719f596cc68a8180" kindref="member">ACCEL_CAL</ref><sp/>||<sp/>!<ref refid="_e_m7180_8cpp_1ae6d5aaacaf88615aff0f8fcb3534d982" kindref="member">Accel_Cal_valid</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>])</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num_byte[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num_byte[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//NORTH<sp/>SCALE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>big_cal_num<sp/>=<sp/>(4096000000/(global_conf.<ref refid="structglobal__conf__t_1a580c9b24f4d23e8e0dba66613c67ce98" kindref="member">accZero_max</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][<ref refid="_u_s_f_s__def_8h_1ac367f38aa904fbd16ab5f215a5c42cc9" kindref="member">ACC_NORTH</ref>]<sp/>-<sp/>global_conf.<ref refid="structglobal__conf__t_1aa24452a5861d21caa9bfc78744e968be" kindref="member">accZero_min</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][<ref refid="_u_s_f_s__def_8h_1ac367f38aa904fbd16ab5f215a5c42cc9" kindref="member">ACC_NORTH</ref>]))<sp/>-<sp/>1000000;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num<sp/>=<sp/>(int16_t)big_cal_num;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a6a6de4729cb62098d7c2e820628e6fe5" kindref="member">EM7180_GP36</ref>,<sp/>cal_num_byte[0]);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a8fc23cf06816177714a8203160b7f26c" kindref="member">EM7180_GP37</ref>,<sp/>cal_num_byte[1]);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="_u_s_f_s__config_8h_1a7963844eb68f8f68719f596cc68a8180" kindref="member">ACCEL_CAL</ref><sp/>||<sp/>!<ref refid="_e_m7180_8cpp_1ae6d5aaacaf88615aff0f8fcb3534d982" kindref="member">Accel_Cal_valid</ref>[SensorNum])</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num_byte[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num_byte[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EAST<sp/>SCALE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/>big_cal_num<sp/>=<sp/>(4096000000/(global_conf.<ref refid="structglobal__conf__t_1a580c9b24f4d23e8e0dba66613c67ce98" kindref="member">accZero_max</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][<ref refid="_u_s_f_s__def_8h_1a8267c22bc241ab84afbb27d3bb99fd07" kindref="member">ACC_EAST</ref>]<sp/>-<sp/>global_conf.<ref refid="structglobal__conf__t_1aa24452a5861d21caa9bfc78744e968be" kindref="member">accZero_min</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][<ref refid="_u_s_f_s__def_8h_1a8267c22bc241ab84afbb27d3bb99fd07" kindref="member">ACC_EAST</ref>]))<sp/>-<sp/>1000000;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num<sp/>=<sp/>(int16_t)big_cal_num;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ac443a2659370f0aa80cf8d0488f851b7" kindref="member">EM7180_GP38</ref>,<sp/>cal_num_byte[0]);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a528b0092b7650c3d59a73ea21778ac2a" kindref="member">EM7180_GP39</ref>,<sp/>cal_num_byte[1]);<sp/><sp/></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="_u_s_f_s__config_8h_1a7963844eb68f8f68719f596cc68a8180" kindref="member">ACCEL_CAL</ref><sp/>||<sp/>!<ref refid="_e_m7180_8cpp_1ae6d5aaacaf88615aff0f8fcb3534d982" kindref="member">Accel_Cal_valid</ref>[SensorNum])</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num_byte[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num_byte[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DOWN<sp/>SCALE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/>big_cal_num<sp/>=<sp/>(4096000000/(global_conf.<ref refid="structglobal__conf__t_1a580c9b24f4d23e8e0dba66613c67ce98" kindref="member">accZero_max</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][<ref refid="_u_s_f_s__def_8h_1ad728c4536e1d040fe8c33561e38bdd13" kindref="member">ACC_DOWN</ref>]<sp/>-<sp/>global_conf.<ref refid="structglobal__conf__t_1aa24452a5861d21caa9bfc78744e968be" kindref="member">accZero_min</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][<ref refid="_u_s_f_s__def_8h_1ad728c4536e1d040fe8c33561e38bdd13" kindref="member">ACC_DOWN</ref>]))<sp/>-<sp/>1000000;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num<sp/>=<sp/>(int16_t)big_cal_num;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a6ed8c5a63af6d6b8bda0f0eed0241616" kindref="member">EM7180_GP40</ref>,<sp/>cal_num_byte[0]);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ad78e626fcf6c12e3dcbdb729cd401447" kindref="member">EM7180_GP50</ref>,<sp/>cal_num_byte[1]);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="_u_s_f_s__config_8h_1a7963844eb68f8f68719f596cc68a8180" kindref="member">ACCEL_CAL</ref><sp/>||<sp/>!<ref refid="_e_m7180_8cpp_1ae6d5aaacaf88615aff0f8fcb3534d982" kindref="member">Accel_Cal_valid</ref>[SensorNum])</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num_byte[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num_byte[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NORTH<sp/>OFFSET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>big_cal_num<sp/>=<sp/>(((global_conf.<ref refid="structglobal__conf__t_1a580c9b24f4d23e8e0dba66613c67ce98" kindref="member">accZero_max</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][<ref refid="_u_s_f_s__def_8h_1ac367f38aa904fbd16ab5f215a5c42cc9" kindref="member">ACC_NORTH</ref>]<sp/>-<sp/>2048)<sp/>+<sp/>(global_conf.<ref refid="structglobal__conf__t_1aa24452a5861d21caa9bfc78744e968be" kindref="member">accZero_min</ref>[SensorNum][<ref refid="_u_s_f_s__def_8h_1ac367f38aa904fbd16ab5f215a5c42cc9" kindref="member">ACC_NORTH</ref>]<sp/>+<sp/>2048))*100000)/4096;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num<sp/>=<sp/>(int16_t)big_cal_num;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ac599e3d982914e75781ce1213b3c1b35" kindref="member">EM7180_GP51</ref>,<sp/>cal_num_byte[0]);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a9179b752a4a6fcb2995fb129855b3d51" kindref="member">EM7180_GP52</ref>,<sp/>cal_num_byte[1]);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="_u_s_f_s__config_8h_1a7963844eb68f8f68719f596cc68a8180" kindref="member">ACCEL_CAL</ref><sp/>||<sp/>!<ref refid="_e_m7180_8cpp_1ae6d5aaacaf88615aff0f8fcb3534d982" kindref="member">Accel_Cal_valid</ref>[SensorNum])</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num_byte[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num_byte[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EAST<sp/>OFFSET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>big_cal_num<sp/>=<sp/>(((global_conf.<ref refid="structglobal__conf__t_1a580c9b24f4d23e8e0dba66613c67ce98" kindref="member">accZero_max</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][<ref refid="_u_s_f_s__def_8h_1a8267c22bc241ab84afbb27d3bb99fd07" kindref="member">ACC_EAST</ref>]<sp/>-<sp/>2048)<sp/>+<sp/>(global_conf.<ref refid="structglobal__conf__t_1aa24452a5861d21caa9bfc78744e968be" kindref="member">accZero_min</ref>[SensorNum][<ref refid="_u_s_f_s__def_8h_1a8267c22bc241ab84afbb27d3bb99fd07" kindref="member">ACC_EAST</ref>]<sp/>+<sp/>2048))*100000)/4096;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num<sp/>=<sp/>(int16_t)big_cal_num;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ad811d76cfec448f0878f4b5fa32635fa" kindref="member">EM7180_GP53</ref>,<sp/>cal_num_byte[0]);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a5512b1bbfe162411a1e3a86be8a44acf" kindref="member">EM7180_GP54</ref>,<sp/>cal_num_byte[1]);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="_u_s_f_s__config_8h_1a7963844eb68f8f68719f596cc68a8180" kindref="member">ACCEL_CAL</ref><sp/>||<sp/>!<ref refid="_e_m7180_8cpp_1ae6d5aaacaf88615aff0f8fcb3534d982" kindref="member">Accel_Cal_valid</ref>[SensorNum])</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num_byte[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num_byte[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DOWN<sp/>OFFSET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>big_cal_num<sp/>=<sp/>(((global_conf.<ref refid="structglobal__conf__t_1a580c9b24f4d23e8e0dba66613c67ce98" kindref="member">accZero_max</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][<ref refid="_u_s_f_s__def_8h_1ad728c4536e1d040fe8c33561e38bdd13" kindref="member">ACC_DOWN</ref>]<sp/>-<sp/>2048)<sp/>+<sp/>(global_conf.<ref refid="structglobal__conf__t_1aa24452a5861d21caa9bfc78744e968be" kindref="member">accZero_min</ref>[SensorNum][<ref refid="_u_s_f_s__def_8h_1ad728c4536e1d040fe8c33561e38bdd13" kindref="member">ACC_DOWN</ref>]<sp/>+<sp/>2048))*100000)/4096;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>cal_num<sp/>=<sp/>(int16_t)big_cal_num;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ab9ef4ce68fbe21b8861a8b06f499b6ed" kindref="member">EM7180_GP55</ref>,<sp/>cal_num_byte[0]);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1abd326b7d3c59387757abf1f560a38e56" kindref="member">EM7180_GP56</ref>,<sp/>cal_num_byte[1]);</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="596" refid="class_e_m7180_1a7d22484ebb5a56c6fb1f9d4000e5e616" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1a7d22484ebb5a56c6fb1f9d4000e5e616" kindref="member">EM7180::Mag_getADC</ref>()</highlight></codeline>
<codeline lineno="597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a0a6ac5bc8a4ac42a886e8298b71a83db" kindref="member">EM7180::i2c_getSixRawADC</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a6c062eb65f55d8674aac99ba23c299b4" kindref="member">EM7180_MX</ref>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><ref refid="_u_s_f_s__def_8h_1a05a77303d2f94c3820f409775aebf7fd" kindref="member">MAG_ORIENTATION</ref>(<sp/>(int16_t)((<ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[1]&lt;&lt;8)<sp/>|<sp/><ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[0]),</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int16_t)((<ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[3]&lt;&lt;8)<sp/>|<sp/><ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[2]),</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int16_t)((<ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[5]&lt;&lt;8)<sp/>|<sp/><ref refid="_e_m7180_8cpp_1a2e8aa97691b56f2fae6149aabe03e147" kindref="member">rawADC</ref>[4]));</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="class_e_m7180_1acb819353d780ddbeb7f7f482ede0d943" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1acb819353d780ddbeb7f7f482ede0d943" kindref="member">EM7180::EM7180_set_gyro_FS</ref><sp/>(uint16_t<sp/>gyro_fs)</highlight></codeline>
<codeline lineno="613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bytes[4],<sp/>STAT;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>bytes[0]<sp/>=<sp/>gyro_fs<sp/>&amp;<sp/>(0xFF);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>bytes[1]<sp/>=<sp/>(gyro_fs<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>(0xFF);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>bytes[2]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>bytes[3]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a07107a68d6f98e5f844d7a668144e60d" kindref="member">EM7180_LoadParamByte0</ref>,<sp/>bytes[0]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gyro<sp/>LSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a5887bb5d50f5896224f2585045aa0386" kindref="member">EM7180_LoadParamByte1</ref>,<sp/>bytes[1]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gyro<sp/>MSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ab0387129670f8713f47b01e8eba7e917" kindref="member">EM7180_LoadParamByte2</ref>,<sp/>bytes[2]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a7dfe026a38b267381c5a235d44f901e0" kindref="member">EM7180_LoadParamByte3</ref>,<sp/>bytes[3]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>75;<sp/>0xCB<sp/>is<sp/>75<sp/>decimal<sp/>with<sp/>the<sp/>MSB<sp/>set<sp/>high<sp/>to<sp/>indicate<sp/>a<sp/>paramter<sp/>write<sp/>processs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa964d702d1986278f4e685e5f297d0fa" kindref="member">EM7180_ParamRequest</ref>,<sp/>0xCB);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>parameter<sp/>transfer<sp/>procedure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x80);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>parameter<sp/>acknowledge<sp/>register<sp/>and<sp/>loop<sp/>until<sp/>the<sp/>result<sp/>matches<sp/>parameter<sp/>request<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a88ec8953bec96b99fda4bebd4a841f63" kindref="member">EM7180_ParamAcknowledge</ref>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!(STAT==0xCB))</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a88ec8953bec96b99fda4bebd4a841f63" kindref="member">EM7180_ParamAcknowledge</ref>);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>request<sp/>=<sp/>0<sp/>to<sp/>end<sp/>parameter<sp/>transfer<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa964d702d1986278f4e685e5f297d0fa" kindref="member">EM7180_ParamRequest</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-start<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="652" refid="class_e_m7180_1ab51a65ee0d0d5565ba7b4f61752a9bdd" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1ab51a65ee0d0d5565ba7b4f61752a9bdd" kindref="member">EM7180::EM7180_set_mag_acc_FS</ref><sp/>(uint16_t<sp/>mag_fs,<sp/>uint16_t<sp/>acc_fs)</highlight></codeline>
<codeline lineno="653"><highlight class="normal">{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bytes[4],<sp/>STAT;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>bytes[0]<sp/>=<sp/>mag_fs<sp/>&amp;<sp/>(0xFF);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>bytes[1]<sp/>=<sp/>(mag_fs<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>(0xFF);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>bytes[2]<sp/>=<sp/>acc_fs<sp/>&amp;<sp/>(0xFF);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>bytes[3]<sp/>=<sp/>(acc_fs<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>(0xFF);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a07107a68d6f98e5f844d7a668144e60d" kindref="member">EM7180_LoadParamByte0</ref>,<sp/>bytes[0]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mag<sp/>LSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a5887bb5d50f5896224f2585045aa0386" kindref="member">EM7180_LoadParamByte1</ref>,<sp/>bytes[1]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mag<sp/>MSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ab0387129670f8713f47b01e8eba7e917" kindref="member">EM7180_LoadParamByte2</ref>,<sp/>bytes[2]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Acc<sp/>LSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a7dfe026a38b267381c5a235d44f901e0" kindref="member">EM7180_LoadParamByte3</ref>,<sp/>bytes[3]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Acc<sp/>MSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Parameter<sp/>74;<sp/>0xCA<sp/>is<sp/>74<sp/>decimal<sp/>with<sp/>the<sp/>MSB<sp/>set<sp/>high<sp/>to<sp/>indicate<sp/>a<sp/>paramter<sp/>write<sp/>processs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa964d702d1986278f4e685e5f297d0fa" kindref="member">EM7180_ParamRequest</ref>,<sp/>0xCA);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>parameter<sp/>transfer<sp/>procedure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x80);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>parameter<sp/>acknowledge<sp/>register<sp/>and<sp/>loop<sp/>until<sp/>the<sp/>result<sp/>matches<sp/>parameter<sp/>request<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a88ec8953bec96b99fda4bebd4a841f63" kindref="member">EM7180_ParamAcknowledge</ref>);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!(STAT==0xCA))<sp/></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a88ec8953bec96b99fda4bebd4a841f63" kindref="member">EM7180_ParamAcknowledge</ref>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>request<sp/>=<sp/>0<sp/>to<sp/>end<sp/>parameter<sp/>transfer<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa964d702d1986278f4e685e5f297d0fa" kindref="member">EM7180_ParamRequest</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-start<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="692" refid="class_e_m7180_1aabdbcf48609bfe2e0d1f99c83b8012b2" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1aabdbcf48609bfe2e0d1f99c83b8012b2" kindref="member">EM7180::EM7180_set_integer_param</ref><sp/>(uint8_t<sp/>param,<sp/>uint32_t<sp/>param_val)</highlight></codeline>
<codeline lineno="693"><highlight class="normal">{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bytes[4],<sp/>STAT;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>bytes[0]<sp/>=<sp/>param_val<sp/>&amp;<sp/>(0xFF);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>bytes[1]<sp/>=<sp/>(param_val<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>(0xFF);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>bytes[2]<sp/>=<sp/>(param_val<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>(0xFF);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>bytes[3]<sp/>=<sp/>(param_val<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>(0xFF);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>is<sp/>the<sp/>decimal<sp/>value<sp/>with<sp/>the<sp/>MSB<sp/>set<sp/>high<sp/>to<sp/>indicate<sp/>a<sp/>paramter<sp/>write<sp/>processs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>param<sp/>=<sp/>param<sp/>|<sp/>0x80;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a07107a68d6f98e5f844d7a668144e60d" kindref="member">EM7180_LoadParamByte0</ref>,<sp/>bytes[0]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Param<sp/>LSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a5887bb5d50f5896224f2585045aa0386" kindref="member">EM7180_LoadParamByte1</ref>,<sp/>bytes[1]);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ab0387129670f8713f47b01e8eba7e917" kindref="member">EM7180_LoadParamByte2</ref>,<sp/>bytes[2]);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a7dfe026a38b267381c5a235d44f901e0" kindref="member">EM7180_LoadParamByte3</ref>,<sp/>bytes[3]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Param<sp/>MSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa964d702d1986278f4e685e5f297d0fa" kindref="member">EM7180_ParamRequest</ref>,<sp/>param);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>parameter<sp/>transfer<sp/>procedure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x80);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>parameter<sp/>acknowledge<sp/>register<sp/>and<sp/>loop<sp/>until<sp/>the<sp/>result<sp/>matches<sp/>parameter<sp/>request<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a88ec8953bec96b99fda4bebd4a841f63" kindref="member">EM7180_ParamAcknowledge</ref>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!(STAT==param))</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a88ec8953bec96b99fda4bebd4a841f63" kindref="member">EM7180_ParamAcknowledge</ref>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>request<sp/>=<sp/>0<sp/>to<sp/>end<sp/>parameter<sp/>transfer<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa964d702d1986278f4e685e5f297d0fa" kindref="member">EM7180_ParamRequest</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-start<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="733" refid="class_e_m7180_1add3860588dfa8bbb9ed1d9c01497b845" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1add3860588dfa8bbb9ed1d9c01497b845" kindref="member">EM7180::EM7180_set_float_param</ref><sp/>(uint8_t<sp/>param,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>param_val)</highlight></codeline>
<codeline lineno="734"><highlight class="normal">{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bytes[4],<sp/>STAT;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a14edb351e986ccb8c663a46c373b186b" kindref="member">EM7180::float_to_bytes</ref><sp/>(param_val,<sp/>&amp;bytes[0]);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>is<sp/>the<sp/>decimal<sp/>value<sp/>with<sp/>the<sp/>MSB<sp/>set<sp/>high<sp/>to<sp/>indicate<sp/>a<sp/>paramter<sp/>write<sp/>processs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>param<sp/>=<sp/>param<sp/>|<sp/>0x80;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a07107a68d6f98e5f844d7a668144e60d" kindref="member">EM7180_LoadParamByte0</ref>,<sp/>bytes[0]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Param<sp/>LSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a5887bb5d50f5896224f2585045aa0386" kindref="member">EM7180_LoadParamByte1</ref>,<sp/>bytes[1]);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ab0387129670f8713f47b01e8eba7e917" kindref="member">EM7180_LoadParamByte2</ref>,<sp/>bytes[2]);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a7dfe026a38b267381c5a235d44f901e0" kindref="member">EM7180_LoadParamByte3</ref>,<sp/>bytes[3]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Param<sp/>MSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa964d702d1986278f4e685e5f297d0fa" kindref="member">EM7180_ParamRequest</ref>,<sp/>param);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>parameter<sp/>transfer<sp/>procedure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x80);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>parameter<sp/>acknowledge<sp/>register<sp/>and<sp/>loop<sp/>until<sp/>the<sp/>result<sp/>matches<sp/>parameter<sp/>request<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a88ec8953bec96b99fda4bebd4a841f63" kindref="member">EM7180_ParamAcknowledge</ref>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!(STAT==param))</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a88ec8953bec96b99fda4bebd4a841f63" kindref="member">EM7180_ParamAcknowledge</ref>);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>request<sp/>=<sp/>0<sp/>to<sp/>end<sp/>parameter<sp/>transfer<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa964d702d1986278f4e685e5f297d0fa" kindref="member">EM7180_ParamRequest</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-start<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="771" refid="class_e_m7180_1a67f3e5da94a05361d1da2095a7619aec" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1a67f3e5da94a05361d1da2095a7619aec" kindref="member">EM7180::EM7180_set_WS_params</ref>()</highlight></codeline>
<codeline lineno="772"><highlight class="normal">{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>uint8_t<sp/>param<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>uint8_t<sp/>STAT;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>is<sp/>the<sp/>decimal<sp/>value<sp/>with<sp/>the<sp/>MSB<sp/>set<sp/>high<sp/>to<sp/>indicate<sp/>a<sp/>paramter<sp/>write<sp/>processs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>param<sp/>=<sp/>param<sp/>|<sp/>0x80;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a07107a68d6f98e5f844d7a668144e60d" kindref="member">EM7180_LoadParamByte0</ref>,<sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][0][0]);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a5887bb5d50f5896224f2585045aa0386" kindref="member">EM7180_LoadParamByte1</ref>,<sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][0][1]);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ab0387129670f8713f47b01e8eba7e917" kindref="member">EM7180_LoadParamByte2</ref>,<sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][0][2]);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a7dfe026a38b267381c5a235d44f901e0" kindref="member">EM7180_LoadParamByte3</ref>,<sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][0][3]);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa964d702d1986278f4e685e5f297d0fa" kindref="member">EM7180_ParamRequest</ref>,<sp/>param);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>parameter<sp/>transfer<sp/>procedure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x80);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>parameter<sp/>acknowledge<sp/>register<sp/>and<sp/>loop<sp/>until<sp/>the<sp/>result<sp/>matches<sp/>parameter<sp/>request<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a88ec8953bec96b99fda4bebd4a841f63" kindref="member">EM7180_ParamAcknowledge</ref>);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!(STAT==param))</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a88ec8953bec96b99fda4bebd4a841f63" kindref="member">EM7180_ParamAcknowledge</ref>);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>i=1;<sp/>i&lt;35;<sp/>i++)</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>param<sp/>=<sp/>(i+1)<sp/>|<sp/>0x80;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a07107a68d6f98e5f844d7a668144e60d" kindref="member">EM7180_LoadParamByte0</ref>,<sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][i][0]);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a5887bb5d50f5896224f2585045aa0386" kindref="member">EM7180_LoadParamByte1</ref>,<sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][i][1]);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ab0387129670f8713f47b01e8eba7e917" kindref="member">EM7180_LoadParamByte2</ref>,<sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][i][2]);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a7dfe026a38b267381c5a235d44f901e0" kindref="member">EM7180_LoadParamByte3</ref>,<sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][i][3]);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa964d702d1986278f4e685e5f297d0fa" kindref="member">EM7180_ParamRequest</ref>,<sp/>param);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>parameter<sp/>acknowledge<sp/>register<sp/>and<sp/>loop<sp/>until<sp/>the<sp/>result<sp/>matches<sp/>parameter<sp/>request<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a88ec8953bec96b99fda4bebd4a841f63" kindref="member">EM7180_ParamAcknowledge</ref>);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!(STAT==param))</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a88ec8953bec96b99fda4bebd4a841f63" kindref="member">EM7180_ParamAcknowledge</ref>);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>request<sp/>=<sp/>0<sp/>to<sp/>end<sp/>parameter<sp/>transfer<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa964d702d1986278f4e685e5f297d0fa" kindref="member">EM7180_ParamRequest</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-start<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="824" refid="class_e_m7180_1ad16dc9b61f43a846d31001395a79b2af" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1ad16dc9b61f43a846d31001395a79b2af" kindref="member">EM7180::EM7180_get_WS_params</ref>()</highlight></codeline>
<codeline lineno="825"><highlight class="normal">{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>uint8_t<sp/>param<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>uint8_t<sp/>STAT;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa964d702d1986278f4e685e5f297d0fa" kindref="member">EM7180_ParamRequest</ref>,<sp/>param);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>delay(20);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>parameter<sp/>transfer<sp/>procedure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x80);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>delay(20);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>parameter<sp/>acknowledge<sp/>register<sp/>and<sp/>loop<sp/>until<sp/>the<sp/>result<sp/>matches<sp/>parameter<sp/>request<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a88ec8953bec96b99fda4bebd4a841f63" kindref="member">EM7180_ParamAcknowledge</ref>);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!(STAT==param))</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a88ec8953bec96b99fda4bebd4a841f63" kindref="member">EM7180_ParamAcknowledge</ref>);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>is<sp/>the<sp/>decimal<sp/>value<sp/>with<sp/>the<sp/>MSB<sp/>set<sp/>low<sp/>(default)<sp/>to<sp/>indicate<sp/>a<sp/>paramter<sp/>read<sp/>processs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][0][0]<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a8c73d6cc4cd586c97de054604931f8a2" kindref="member">EM7180_SavedParamByte0</ref>);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][0][1]<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1adc7d0cf3f86a5608e50e0bf1929ef423" kindref="member">EM7180_SavedParamByte1</ref>);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][0][2]<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a5a142cf795af577233be9f6f52c1131c" kindref="member">EM7180_SavedParamByte2</ref>);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][0][3]<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a843537469772a63a70273c7d03ac771f" kindref="member">EM7180_SavedParamByte3</ref>);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>i=1;<sp/>i&lt;35;<sp/>i++)</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>param<sp/>=<sp/>(i+1);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa964d702d1986278f4e685e5f297d0fa" kindref="member">EM7180_ParamRequest</ref>,<sp/>param);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(20);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>parameter<sp/>acknowledge<sp/>register<sp/>and<sp/>loop<sp/>until<sp/>the<sp/>result<sp/>matches<sp/>parameter<sp/>request<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a88ec8953bec96b99fda4bebd4a841f63" kindref="member">EM7180_ParamAcknowledge</ref>);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!(STAT==param))</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STAT<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a88ec8953bec96b99fda4bebd4a841f63" kindref="member">EM7180_ParamAcknowledge</ref>);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][i][0]<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a8c73d6cc4cd586c97de054604931f8a2" kindref="member">EM7180_SavedParamByte0</ref>);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][i][1]<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1adc7d0cf3f86a5608e50e0bf1929ef423" kindref="member">EM7180_SavedParamByte1</ref>);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][i][2]<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a5a142cf795af577233be9f6f52c1131c" kindref="member">EM7180_SavedParamByte2</ref>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][i][3]<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a843537469772a63a70273c7d03ac771f" kindref="member">EM7180_SavedParamByte3</ref>);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>request<sp/>=<sp/>0<sp/>to<sp/>end<sp/>parameter<sp/>transfer<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa964d702d1986278f4e685e5f297d0fa" kindref="member">EM7180_ParamRequest</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>delay(20);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-start<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>delay(20);</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="883" refid="class_e_m7180_1afff906136f41f83a409e15c6ca4eb027" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1afff906136f41f83a409e15c6ca4eb027" kindref="member">EM7180::WS_PassThroughMode</ref>()</highlight></codeline>
<codeline lineno="884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>uint8_t<sp/>stat<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>SENtral<sp/>in<sp/>standby<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x01);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>delay(5);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>SENtral<sp/>in<sp/>pass-through<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1af38094d9f5d4571f604c30daec509c20" kindref="member">EM7180_PassThruControl</ref>,<sp/>0x01);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>delay(5);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>stat<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a0b1bb4e10b0aeacbad657bb836912d79" kindref="member">EM7180_PassThruStatus</ref>);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>delay(5);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!(stat<sp/>&amp;<sp/>0x01))</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a0b1bb4e10b0aeacbad657bb836912d79" kindref="member">EM7180_PassThruStatus</ref>);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(5);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="911" refid="class_e_m7180_1a1142712128e6c3735313b778b0d24db8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1a1142712128e6c3735313b778b0d24db8" kindref="member">EM7180::WS_Resume</ref>()</highlight></codeline>
<codeline lineno="912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>uint8_t<sp/>stat<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Cancel<sp/>pass-through<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1af38094d9f5d4571f604c30daec509c20" kindref="member">EM7180_PassThruControl</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>delay(5);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>stat<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a0b1bb4e10b0aeacbad657bb836912d79" kindref="member">EM7180_PassThruStatus</ref>);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((stat<sp/>&amp;<sp/>0x01))</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a0b1bb4e10b0aeacbad657bb836912d79" kindref="member">EM7180_PassThruStatus</ref>);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(5);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-start<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a8953ec03b26bc003268a893c760b3e6c" kindref="member">writeByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1ae8269e85314cd5bcf475d28a16317622" kindref="member">EM7180_AlgorithmControl</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>delay(5);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>stat<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa753f77cc448e6048ca4d1a87f314739" kindref="member">EM7180_AlgorithmStatus</ref>);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((stat<sp/>&amp;<sp/>0x01))</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1aa753f77cc448e6048ca4d1a87f314739" kindref="member">EM7180_AlgorithmStatus</ref>);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(5);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>event<sp/>status<sp/>register<sp/>to<sp/>clear<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><ref refid="_e_m7180_8cpp_1aab5aa741f7301eab5d6af0f1c730fe1c" kindref="member">eventStatus</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>]<sp/>=<sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1af062f54dcc4168cd6bbc09694efc91bd" kindref="member">readByte</ref>(<ref refid="_e_m7180_8h_1a6acf4b0606f4d98642928dadfe065bdc" kindref="member">EM7180_ADDRESS</ref>,<sp/><ref refid="_e_m7180_8h_1a72c1fe33ee032ea270839b8ee2b6b285" kindref="member">EM7180_EventStatus</ref>);</highlight></codeline>
<codeline lineno="937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="947" refid="class_e_m7180_1a4d612cbec5feba4d33bca19d94ef1ad1" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1a4d612cbec5feba4d33bca19d94ef1ad1" kindref="member">EM7180::readSenParams</ref>()</highlight></codeline>
<codeline lineno="948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>uint8_t<sp/>data[140];</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>uint8_t<sp/>paramnum;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>in<sp/>16<sp/>byte<sp/>chunks<sp/>because<sp/>the<sp/>ESP8266<sp/>Wire<sp/>buffer<sp/>is<sp/>only<sp/>32<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>140<sp/>bytes<sp/>total;<sp/>first<sp/>128:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a87889818f56775324ff7bef04a8d188a" kindref="member">M24512DFMreadBytes</ref>(<ref refid="_u_s_f_s__def_8h_1aca036a7a12f593486e2ae958588cb481" kindref="member">M24512DFM_DATA_ADDRESS</ref>,<sp/>0x80,<sp/>(0x00<sp/>+<sp/>16*i),<sp/>16,<sp/>&amp;data[(16*i)]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>12<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a87889818f56775324ff7bef04a8d188a" kindref="member">M24512DFMreadBytes</ref>(<ref refid="_u_s_f_s__def_8h_1aca036a7a12f593486e2ae958588cb481" kindref="member">M24512DFM_DATA_ADDRESS</ref>,<sp/>0x80,<sp/>0x80,<sp/>12,<sp/>&amp;data[128]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>257</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(paramnum<sp/>=<sp/>0;<sp/>paramnum<sp/>&lt;<sp/>35;<sp/>paramnum++)<sp/></highlight><highlight class="comment">//<sp/>35<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][paramnum][i]<sp/>=<sp/>data[(paramnum*4<sp/>+<sp/>i)];</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a87889818f56775324ff7bef04a8d188a" kindref="member">M24512DFMreadBytes</ref>(<ref refid="_u_s_f_s__def_8h_1aca036a7a12f593486e2ae958588cb481" kindref="member">M24512DFM_DATA_ADDRESS</ref>,<sp/>0x80,<sp/>0x98,<sp/>1,<sp/>&amp;<ref refid="_e_m7180_8cpp_1a0360fa6120664e816bdfe80225fa31ed" kindref="member">Sentral_WS_valid</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>257</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>byte<sp/>0x98<sp/>is<sp/>10101010b<sp/>(0xaa)<sp/>that<sp/>means<sp/>valid<sp/>WS<sp/>data<sp/>is<sp/>in<sp/>the<sp/>EEPROM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_e_m7180_8cpp_1a0360fa6120664e816bdfe80225fa31ed" kindref="member">Sentral_WS_valid</ref>[SensorNum]<sp/>==<sp/>0xaa)</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a0360fa6120664e816bdfe80225fa31ed" kindref="member">Sentral_WS_valid</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_e_m7180_8cpp_1a0360fa6120664e816bdfe80225fa31ed" kindref="member">Sentral_WS_valid</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="988" refid="class_e_m7180_1a043f4665f54cf6e36a8584b2f51642a8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1a043f4665f54cf6e36a8584b2f51642a8" kindref="member">EM7180::writeSenParams</ref>()</highlight></codeline>
<codeline lineno="989"><highlight class="normal">{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/>uint8_t<sp/>data[140];</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>uint8_t<sp/>paramnum;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(paramnum<sp/>=<sp/>0;<sp/>paramnum<sp/>&lt;<sp/>35;<sp/>paramnum++)<sp/></highlight><highlight class="comment">//<sp/>35<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data[(paramnum*4<sp/>+<sp/>i)]<sp/>=<sp/>WS_params.<ref refid="struct_sentral___w_s__params_1a84e7ee45347fb8420f1b74deb5dbb1f8" kindref="member">Sen_param</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][paramnum][i];</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>in<sp/>16<sp/>byte<sp/>chunks<sp/>because<sp/>the<sp/>ESP8266<sp/>Wire<sp/>buffer<sp/>is<sp/>only<sp/>32<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>140<sp/>bytes<sp/>total;<sp/>first<sp/>128:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1aa7cc90559a2251713a30789d753a7671" kindref="member">M24512DFMwriteBytes</ref>(<ref refid="_u_s_f_s__def_8h_1aca036a7a12f593486e2ae958588cb481" kindref="member">M24512DFM_DATA_ADDRESS</ref>,<sp/>0x80,<sp/>(0x00<sp/>+<sp/>16*i),<sp/>16,<sp/>&amp;data[(16*i)]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>12<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1aa7cc90559a2251713a30789d753a7671" kindref="member">M24512DFMwriteBytes</ref>(<ref refid="_u_s_f_s__def_8h_1aca036a7a12f593486e2ae958588cb481" kindref="member">M24512DFM_DATA_ADDRESS</ref>,<sp/>0x80,<sp/>0x80,<sp/>12,<sp/>&amp;data[128]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>257</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Valid<sp/>Warm<sp/>Start<sp/>byte;<sp/>if<sp/>save<sp/>of<sp/>WS<sp/>parameters<sp/>is<sp/>successful<sp/>write<sp/>10101010b<sp/>(0xaa)<sp/>to<sp/>byte<sp/>0x98<sp/>(Free<sp/>from<sp/>0x99<sp/>to<sp/>0xFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><ref refid="_e_m7180_8cpp_1a0360fa6120664e816bdfe80225fa31ed" kindref="member">Sentral_WS_valid</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>]<sp/>=<sp/>0xaa;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1aa7cc90559a2251713a30789d753a7671" kindref="member">M24512DFMwriteBytes</ref>(<ref refid="_u_s_f_s__def_8h_1aca036a7a12f593486e2ae958588cb481" kindref="member">M24512DFM_DATA_ADDRESS</ref>,<sp/>0x80,<sp/>0x98,<sp/>1,<sp/>&amp;<ref refid="_e_m7180_8cpp_1a0360fa6120664e816bdfe80225fa31ed" kindref="member">Sentral_WS_valid</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>257</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><ref refid="_e_m7180_8cpp_1a0360fa6120664e816bdfe80225fa31ed" kindref="member">Sentral_WS_valid</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025" refid="class_e_m7180_1a4193ed4054715b486c8fd9c48a75d19c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1a4193ed4054715b486c8fd9c48a75d19c" kindref="member">EM7180::readAccelCal</ref>()</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/>uint8_t<sp/>data[12];</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/>uint8_t<sp/>axis;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1a87889818f56775324ff7bef04a8d188a" kindref="member">M24512DFMreadBytes</ref>(<ref refid="_u_s_f_s__def_8h_1aca036a7a12f593486e2ae958588cb481" kindref="member">M24512DFM_DATA_ADDRESS</ref>,<sp/>0x80,<sp/>0x8c,<sp/>12,<sp/>data);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>257</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(axis<sp/>=<sp/>0;<sp/>axis<sp/>&lt;<sp/>3;<sp/>axis++)</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>global_conf.<ref refid="structglobal__conf__t_1a580c9b24f4d23e8e0dba66613c67ce98" kindref="member">accZero_max</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]<sp/>=<sp/>((int16_t)(data[(2*axis<sp/>+<sp/>1)]&lt;&lt;8)<sp/>|<sp/>data[2*axis]);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>global_conf.<ref refid="structglobal__conf__t_1aa24452a5861d21caa9bfc78744e968be" kindref="member">accZero_min</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]<sp/>=<sp/>((int16_t)(data[(2*axis<sp/>+<sp/>7)]&lt;&lt;8)<sp/>|<sp/>data[(2*axis<sp/>+<sp/>6)]);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046" refid="class_e_m7180_1afc13d26aabb1ac8f4d760bbd4cef1612" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1afc13d26aabb1ac8f4d760bbd4cef1612" kindref="member">EM7180::writeAccCal</ref>()</highlight></codeline>
<codeline lineno="1047"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/>uint8_t<sp/>data[12];</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/>uint8_t<sp/>axis;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(axis<sp/>=<sp/>0;<sp/>axis<sp/>&lt;<sp/>3;<sp/>axis++)</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>data[2*axis]<sp/>=<sp/>(global_conf.<ref refid="structglobal__conf__t_1a580c9b24f4d23e8e0dba66613c67ce98" kindref="member">accZero_max</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>data[(2*axis<sp/>+<sp/>1)]<sp/>=<sp/>(global_conf.<ref refid="structglobal__conf__t_1a580c9b24f4d23e8e0dba66613c67ce98" kindref="member">accZero_max</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>data[(2*axis<sp/>+<sp/>6)]<sp/>=<sp/>(global_conf.<ref refid="structglobal__conf__t_1aa24452a5861d21caa9bfc78744e968be" kindref="member">accZero_min</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>data[(2*axis<sp/>+<sp/>7)]<sp/>=<sp/>(global_conf.<ref refid="structglobal__conf__t_1aa24452a5861d21caa9bfc78744e968be" kindref="member">accZero_min</ref>[<ref refid="class_e_m7180_1a84619dde95809e90982eced4e5b532f2" kindref="member">SensorNum</ref>][axis]<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><ref refid="class_e_m7180_1a129349557b6febe9400115765d8b3afa" kindref="member">I2C</ref>-&gt;<ref refid="class_i2_cdev_1aa7cc90559a2251713a30789d753a7671" kindref="member">M24512DFMwriteBytes</ref>(<ref refid="_u_s_f_s__def_8h_1aca036a7a12f593486e2ae958588cb481" kindref="member">M24512DFM_DATA_ADDRESS</ref>,<sp/>0x80,<sp/>0x8c,<sp/>12,<sp/>data);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>257</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068" refid="class_e_m7180_1a0ff4071aeffd5d74363a7d290b133c55" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_m7180_1a0ff4071aeffd5d74363a7d290b133c55" kindref="member">EM7180::Save_Sentral_WS_params</ref>()</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1ad16dc9b61f43a846d31001395a79b2af" kindref="member">EM7180::EM7180_get_WS_params</ref>();</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>the<sp/>Sentral<sp/>in<sp/>pass-thru<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1afff906136f41f83a409e15c6ca4eb027" kindref="member">EM7180::WS_PassThroughMode</ref>();</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>WarmStart<sp/>data<sp/>to<sp/>the<sp/>M24512DFM<sp/>I2C<sp/>EEPROM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1a043f4665f54cf6e36a8584b2f51642a8" kindref="member">EM7180::writeSenParams</ref>();</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>Sentral<sp/>out<sp/>of<sp/>pass-thru<sp/>mode<sp/>and<sp/>re-start<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_e_m7180_1a1142712128e6c3735313b778b0d24db8" kindref="member">EM7180::WS_Resume</ref>();</highlight></codeline>
<codeline lineno="1080"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Cloud/OneDrive/Voyager/VoyagerOS/EM7180.cpp"/>
  </compounddef>
</doxygen>
